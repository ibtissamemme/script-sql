IF EXISTS (SELECT * FROM SYSOBJECTS WHERE NAME='F_GET_ASSOCIATION' AND TYPE='FN')
  DROP FUNCTION dbo.F_GET_ASSOCIATION
GO

CREATE FUNCTION dbo.F_GET_ASSOCIATION (@codesalle VARCHAR(14))
RETURNS VARCHAR(4000)
AS BEGIN
    DECLARE @Work VARCHAR(1000)
	DECLARE @COMBI VARCHAR(150)
	DECLARE @SALLE VARCHAR(150)
    DECLARE CURSEUR CURSOR
	
	FOR SELECT SF.LIBELLE COMBI,S.LIBELLE SALLE FROM SALLEFUS SF,SALLEFUS_COMP SFC,SALLE S 
	WHERE SF.CODESALLEFUS=SFC.CODESALLEFUS AND DECODESALLE=S.CODESALLE 
	AND SF.CODESALLEFUS IN (SELECT SF.CODESALLEFUS FROM SALLEFUS SF,SALLEFUS_COMP SFC WHERE SF.CODESALLEFUS=SFC.CODESALLEFUS AND (DECODESALLE=@codesalle OR SFC.CODESALLE=@codesalle)) 
	UNION SELECT SF.LIBELLE COMBI,S.LIBELLE SALLE FROM SALLEFUS SF,SALLEFUS_COMP SFC,SALLE S 
	WHERE SF.CODESALLEFUS=SFC.CODESALLEFUS AND SFC.CODESALLE=S.CODESALLE 
	AND SF.CODESALLEFUS IN (SELECT SF.CODESALLEFUS FROM SALLEFUS SF,SALLEFUS_COMP SFC WHERE SF.CODESALLEFUS=SFC.CODESALLEFUS AND (DECODESALLE=@codesalle OR SFC.CODESALLE=@codesalle)) ORDER BY COMBI,SALLE

	set @work = ''

	OPEN CURSEUR
	FETCH NEXT FROM CURSEUR
	INTO @COMBI,@SALLE

	WHILE @@FETCH_STATUS = 0
	BEGIN
		set @work = @work+';'+@COMBI+'|'+@SALLE
		FETCH NEXT FROM CURSEUR
		INTO @COMBI,@SALLE
	END
	CLOSE CURSEUR
	DEALLOCATE CURSEUR

	--IF LEN(@work)>0 BEGIN
	--	set @work = SUBSTRING(@work,2,LEN(@work))
	--END 

    RETURN @work
END
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE NAME='F_GET_AMENAGEMENT' AND TYPE='FN')
  DROP FUNCTION dbo.F_GET_AMENAGEMENT
GO

CREATE FUNCTION dbo.F_GET_AMENAGEMENT (@codesalle VARCHAR(14))
RETURNS VARCHAR(4000)
AS BEGIN
    DECLARE @Work VARCHAR(1000)

	DECLARE @LIBELLE VARCHAR(150)
	DECLARE @CAPACITE VARCHAR(150)
	DECLARE @PREPA VARCHAR(150)
	DECLARE @RANG VARCHAR(150)
    DECLARE CURSEUR CURSOR
	
	FOR SELECT ISNULL(LIBELLE,''),ISNULL(CAPACITE,''),ISNULL(CONVERT(VARCHAR(5),PREPARATION,108),'') PREPA,ISNULL(CONVERT(VARCHAR(5),RANGEMENT,108),'') RANG FROM AMENAGEMENT,AMENAGSALLE WHERE AMENAGEMENT.CODEAMENAGEMENT=AMENAGSALLE.CODEAMENAGEMENT AND CODESALLE=@codesalle ORDER BY LIBELLE

	set @work = ''

	OPEN CURSEUR
	FETCH NEXT FROM CURSEUR
	INTO @LIBELLE,@CAPACITE,@PREPA,@RANG

	WHILE @@FETCH_STATUS = 0
	BEGIN
		set @work = @work+';'+@LIBELLE+'|'+@CAPACITE+'|'+@PREPA+'|'+@RANG
		FETCH NEXT FROM CURSEUR
		INTO @LIBELLE,@CAPACITE,@PREPA,@RANG
	END
	CLOSE CURSEUR
	DEALLOCATE CURSEUR

	--IF LEN(@work)>0 BEGIN
	--	set @work = SUBSTRING(@work,2,LEN(@work))
	--END 

    RETURN @work
END
GO