-- *******************************************************************************
-- *                                                                             *
-- *  U N I S   SQL SERVER             Date de dernière mise à jour : 10/06/2009 *
-- *                                                                             *
-- *******************************************************************************
--
--
--  Table ACTIONCONTACT
CREATE TABLE ACTIONCONTACT (
  CODEACTIONCONTACT VARCHAR(14) NOT NULL,
  LIBELLE VARCHAR(35),
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME
);
GO

--  Table ADRESSE
CREATE TABLE ADRESSE (
  ADRESSEID VARCHAR(14) NOT NULL,
  TYPEADRESSEID INTEGER,
  SOCIETE VARCHAR(80),
  NOM VARCHAR(35),
  ADRESSE IMAGE,
  CODEPOSTAL VARCHAR(10),
  VILLE VARCHAR(40),
  TELEPHONE VARCHAR(20),
  FAX VARCHAR(20),
  OBSERVATION IMAGE,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_ADRESSEID PRIMARY KEY (ADRESSEID));
GO

--  Table AGENDAJOUR2AGENT
CREATE TABLE AGENDAJOUR2AGENT (
  AGENDAJOUR2ID INT,
  PERSONNELID INT,
  NOMPRENOM VARCHAR(50)
);
GO

--  Table AGENDA_JOUR
CREATE TABLE AGENDA_JOUR (
  AGENDA_JOURID INT NOT NULL,
  JOURID INT,
  HEURE DATETIME,
  TOLERANCE DATETIME,
  MISSIONID INT,
  POSTEID INT,
  STATUT INT,
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME,
  SITEID  VARCHAR(14),
CONSTRAINT PK_AGENDA_JOURID PRIMARY KEY (AGENDA_JOURID));
GO

--  Table AGENDA_JOUR2
CREATE TABLE AGENDA_JOUR2 (
  AGENDA_JOUR2ID BIGINT NOT NULL,
  AGENDA_JOURID INT,
  MISSIONTEMPID INT,
  HEURE DATETIME,
  TOLERANCE DATETIME,
  MISSIONID INT,
  POSTEID INT,
  STATUT INT,
  DATEMISSION DATETIME,
  ETAT INT,
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME,
  SITEID  VARCHAR(14),
CONSTRAINT PK_AGENDA_JOUR2ID PRIMARY KEY (AGENDA_JOUR2ID));
GO

--  Table AGENTPRESENT
CREATE TABLE AGENTPRESENT (
  PERSONNELID INT,
  NOMPRENOM VARCHAR(50),
  ENTREE DATETIME,
  SORTIE DATETIME,
  SURSITE INT,
  PARPRISE INT,
  FONCTION VARCHAR(35),
  SITEID  VARCHAR(14),
  POSTEID INTEGER
);
GO

--  Table AGENTPRESENTLOG
CREATE TABLE AGENTPRESENTLOG (
  AGENTPRESENTLOGID INT NOT NULL,
  PERSONNELID INT,
  NOMPRENOM VARCHAR(50),
  PASSAGE DATETIME,
  ACTION INT,
  PARPRISE INT,
  SITEID  VARCHAR(14),
  POSTEID INTEGER,
CONSTRAINT PK_AGENTPRESENTLOGID PRIMARY KEY (AGENTPRESENTLOGID));
GO

--  Table ALARME
CREATE TABLE ALARME (
  ALARMEID INT NOT NULL,
  LIBELLE VARCHAR(40),
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_ALARMEID PRIMARY KEY (ALARMEID));
GO

--  Table AMENAGEMENT
CREATE TABLE AMENAGEMENT (
  CODEAMENAGEMENT VARCHAR(14) NOT NULL,
  LIBELLE VARCHAR(35),
  FIXE INT,
  PLANIMPLANTATION IMAGE,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
  COEFFICIENT FLOAT,
CONSTRAINT PK_CODEAMENAGEMENT PRIMARY KEY (CODEAMENAGEMENT));
GO

--  Table AMENAGSALLE
CREATE TABLE AMENAGSALLE (
  CODESALLE VARCHAR(14) NOT NULL,
  CODEAMENAGEMENT VARCHAR(14) NOT NULL,
  CAPACITE FLOAT,
  PLANIMPLANTATION IMAGE,
  PREPARATION DATETIME,
  RANGEMENT DATETIME,
  SORTORDER INTEGER,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_CODESALLEAMENAGEMENT PRIMARY KEY (CODESALLE, CODEAMENAGEMENT));
GO

-- TABLE ARMOIRE
CREATE TABLE ARMOIRE (
  ARMOIREID VARCHAR(14) not null,
  LIBELLE VARCHAR(35),
  NUMERO int,
  CAPACITE int,
  NBELEMENT int,
  ISACTIF int,
  SITEID VARCHAR(14),
  DATECREATION datetime not null,
  DATEMAJ datetime
);
GO

--  Table ARTICLE
CREATE TABLE ARTICLE (
  ALGOCALCPRIX FLOAT,
  CODEARTICLE VARCHAR(14) NOT NULL,
  CODEFAMILLE VARCHAR(14),
  CODESOUSFAMILLE VARCHAR(14),
  CODETVA VARCHAR(14),
  CODEMARQUE VARCHAR(14),
  CODERARTICLES VARCHAR(14),
  DESCRIPTION IMAGE,
  FULLNAME VARCHAR(80),
  IMAGE IMAGE,
  LIBELLE VARCHAR(50),
  LISTEPRIX INT,
  MARQUE VARCHAR(35),
  PHONKEY VARCHAR(35),
  PRIXACHATHT FLOAT,
  PRIXVENTEHT FLOAT,
  PRIXVENTETTC FLOAT,
  PRIXPUBLICHT FLOAT,
  REFERENCE VARCHAR(10),
  REFCONSTRUCTEUR VARCHAR(1000),
  TAUXTVA FLOAT,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
  QUANTITE INTEGER,
  GESTION INTEGER,
  HDEBUT  DATETIME,
  HFIN    DATETIME,
  SITEID VARCHAR(14),
CONSTRAINT PK_CODEARTICLE PRIMARY KEY (CODEARTICLE));
GO

--  Table ARTICLEDEFAULT
CREATE TABLE ARTICLEDEFAULT (
  CODEARTICLEDEFAULT VARCHAR(14) NOT NULL,
  CODETYPEDEFAULT VARCHAR(14),
  CODEARTICLE VARCHAR(14),
  QUANTITE INT,
  SORTORDER INT,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_CODEARTICLEDEFAULT PRIMARY KEY (CODEARTICLEDEFAULT));
GO

--  Table AUTOCLE
CREATE TABLE AUTOCLE (
  CLEID VARCHAR(14),
  INDIVIDUID VARCHAR(15),
  NOM VARCHAR(100),
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME
);
GO

--  Table BADGES
CREATE TABLE BADGES (
  BADGEID VARCHAR(14) NOT NULL,
  EXTERNALID VARCHAR(24),
  LIBELLE VARCHAR(35),
  FORMAT IMAGE,
  OBSERVATION IMAGE,
  HAUTEUR INTEGER,
  LARGEUR INTEGER,
  STATUT INTEGER DEFAULT 1,
  SITEID VARCHAR(14),
  STATUTVISITEURID VARCHAR(14),
  TYPEVISITEID INT,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_BADGEID PRIMARY KEY (BADGEID));
GO

CREATE TABLE dbo.BADGES_ELEMENTS
(
BADGES_ELEMENTID	VARCHAR(14)	PRIMARY KEY,
BADGEID	VARCHAR(14) NOT NULL,
BADGES_IMAGEID	VARCHAR(14),
NATURE	VARCHAR(35),
VALEUR	VARCHAR(4000),
CHAMP	VARCHAR(50),
POLICE	VARCHAR(50),
TAILLE	INTEGER,
ALIGNEMENT VARCHAR(15),
GRAS	INTEGER DEFAULT 0,
ITALIQUE	INTEGER DEFAULT 0,
SOULIGNE	INTEGER DEFAULT 0,
COLOR	INTEGER,
BACKGROUND_COLOR	INTEGER,
HAUT	INTEGER,
GAUCHE	INTEGER,
LARGEUR	INTEGER,
HAUTEUR	INTEGER,
BORDURE INTEGER,
SUBSTR_DEBUT INTEGER,
SUBSTR_LONG INTEGER,
RANG INTEGER,
TRANSPARENT INTEGER,
COMP_IF INT DEFAULT(0),
COMP_SIGNE VARCHAR(20),
COMP_CHAMP VARCHAR(50),
COMP_VALEUR VARCHAR(25),
CLRACCUEIL INTEGER DEFAULT(0),
DATECREATION	DATETIME NOT NULL,
DATEMAJ	DATETIME NOT NULL
);
GO

CREATE TABLE dbo.BADGES_ELEMENTS_TMP
(
BADGES_ELEMENTID	VARCHAR(14)	PRIMARY KEY,
BADGEID	VARCHAR(14) NOT NULL,
BADGES_IMAGEID	VARCHAR(14),
NATURE	VARCHAR(35),
VALEUR	VARCHAR(4000),
CHAMP	VARCHAR(50),
POLICE	VARCHAR(50),
TAILLE	INTEGER,
ALIGNEMENT VARCHAR(15),
GRAS	INTEGER DEFAULT 0,
ITALIQUE	INTEGER DEFAULT 0,
SOULIGNE	INTEGER DEFAULT 0,
COLOR	INTEGER,
BACKGROUND_COLOR	INTEGER,
HAUT	INTEGER,
GAUCHE	INTEGER,
LARGEUR	INTEGER,
HAUTEUR	INTEGER,
BORDURE INTEGER,
SUBSTR_DEBUT INTEGER,
SUBSTR_LONG INTEGER,
RANG INTEGER,
TRANSPARENT INTEGER,
COMP_IF INT DEFAULT(0),
COMP_SIGNE VARCHAR(20),
COMP_CHAMP VARCHAR(50),
COMP_VALEUR VARCHAR(25),
CLRACCUEIL INTEGER DEFAULT(0),
DATECREATION	DATETIME NOT NULL,
DATEMAJ	DATETIME NOT NULL
);
GO

CREATE TABLE dbo.BADGES_IMAGES
(
BADGES_IMAGEID	VARCHAR(14)	PRIMARY KEY,
IMAGE IMAGE,
CONTENTTYPE VARCHAR(50),
SOURCEFILENAME VARCHAR(100),
DATASIZE INTEGER,
DATECREATION	DATETIME NOT NULL,
DATEMAJ	DATETIME NOT NULL
);
GO

--  Table BATIMENT
CREATE TABLE BATIMENT (
  BATIMENTID VARCHAR(14) NOT NULL,
  EXTERNALID VARCHAR(24),
  SITEID VARCHAR(14),
  PLANID VARCHAR(14),
  LIBELLE VARCHAR(60),
  NOBAT VARCHAR(15),
  ADRESSE IMAGE,
  CP VARCHAR(10),
  VILLE VARCHAR(35),
  PAYS VARCHAR(35),
  TELEPHONE VARCHAR(20),
  FAX VARCHAR(20),
  SORTORDER INT,
  PROVINCE VARCHAR(35),
  IMMEUBLE INT,
  DATEMAJ DATETIME NOT NULL,
  DATECREATION DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_BATIMENTID PRIMARY KEY (BATIMENTID));
GO

CREATE TABLE dbo.BONTRAVAIL
(
BONTRAVAILID	INTEGER	PRIMARY KEY,
BTR	VARCHAR(50),
SITEID VARCHAR(14),
DATEVALIDITE DATETIME,
DATECREATION	DATETIME	NOT NULL,
DATEMAJ	DATETIME	NOT NULL
);
GO

--  Table BUREAUX
CREATE TABLE BUREAUX (
  BUREAUID VARCHAR(14) NOT NULL,
  ETAGEID VARCHAR(14) NOT NULL,
  SORTORDER INT,
  BUREAU VARCHAR(15) NOT NULL,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_BUREAUID PRIMARY KEY (BUREAUID));
GO

--  Table CASIER
CREATE TABLE CASIER (
  CASIERID INTEGER NOT NULL,
  BOITE VARCHAR(6),
  CASIER VARCHAR(6),
  STATUTCASIER VARCHAR(1),
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_CASIERID PRIMARY KEY (CASIERID));
GO

--  Table CFGARTICLESCURRENT
CREATE TABLE CFGARTICLESCURRENT (
  CODEMARQUE VARCHAR(14),
  CODEFAMILLE VARCHAR(14),
  CODESOUSFAMILLE VARCHAR(14),
  QUANTITE INT
);
GO

--  Table CFGDEFAULTAGENDA
CREATE TABLE CFGDEFAULTAGENDA (
  CODECIVILITE INT,
  CODEACTION VARCHAR(14),
  CODEORIGINECONTACT VARCHAR(14)
);
GO

CREATE TABLE CFGETAT (
   CFGETATID    VARCHAR(50),
   ETATNOM      VARCHAR(50),
   VISIBLE      INTEGER,
   REQUETE      VARCHAR(50),
   FILTRE       VARCHAR(250),
   DATECREATION DATETIME,
   DATEMAJ      DATETIME
);
GO

CREATE TABLE CFGGSALLES (
  SITE           VARCHAR(30),
  NETTOYAGE	 INTEGER,
  E_EMAIL        VARCHAR(15),
  E_HOST         VARCHAR(50),
  E_REPERTOIRE   VARCHAR(50),
  E_USERID       VARCHAR(50),
  E_DESTINATAIRE INTEGER
);
GO

--  Table CFGGSALLESDEFAULT
CREATE TABLE CFGGSALLESDEFAULT (
  CODETYPERESERVATION VARCHAR(14),
  CODESTATUT VARCHAR(14),
  CODEAMMENAGEMENT VARCHAR(14),
  CODETYPETARIF VARCHAR(14),
  HEUREDEBUT DATETIME,
  HEUREFIN DATETIME,
  PREPARATIONDEFAUT DATETIME,
  RANGEMENTDEFAUT DATETIME
);
GO

--  Table CFGGSALLESPARAM
CREATE TABLE CFGGSALLESPARAM (
  HEUREOUVERTURE DATETIME,
  HEUREFERMETURE DATETIME,
  TRANCHE DATETIME,
  PRINTPREVIEW INT,
  SURBOOKING INT,
  REFRESERVATION VARCHAR(15),
  FORMATREFRESERVATION VARCHAR(15),
  GESTIONINTERNE INT,
  GESTIONINTERNEMONOSOC INT,
  CODESOCIETEINTERNE VARCHAR(14),
  ACTIVATIONTEMPSPREPA INT,
  CTRL_PA_HORSHORAIRE INTEGER,
  CTRL_NB_PARTICIPANT INTEGER,
  CTRL_MATERIEL_DISPO INTEGER,
  RESA_ORDRE_SALLE  INTEGER,
  RESA_PRESTA_STYLE INTEGER,
  FILTRE_ORDRE_TRI  INTEGER,
  DRAGDROP INTEGER,
  CTRLDEFAUTHORAIRE INTEGER,
  CTRLDEFAUTPRESTA INTEGER
);
GO

--  Table CFGPLANNING
CREATE TABLE CFGPLANNING (
  USERID VARCHAR(14) NOT NULL,
  DERNIEREDATE DATETIME,
  PERIODE INT NOT NULL,
  POSITIONJOUR DATETIME,
  DELEGANT VARCHAR(14),
  CODESALLE VARCHAR(14)
);
GO

--  Table CFGPRODUIT
CREATE TABLE CFGPRODUIT (
  CODETVA VARCHAR(14),
  LISTEPRIX INT,
  MARGE FLOAT,
  OBSERVATIONDEVIS IMAGE,
  OBSERVATIONFACTURE IMAGE,
  IMPDETAILDEVIS INT,
  IMPDETAILFACTURE INT,
  PROCHAINENO INT,
  FORMATNO VARCHAR(15)
);
GO

-- TABLE CFG_FICHIER
CREATE TABLE dbo.CFG_FICHIER (
  CFG_FICHIERID INT PRIMARY KEY,
  TYPECFG VARCHAR(20),
  LIBELLE VARCHAR(200),
  DOCUMENT1 VARCHAR(4000),
  DOCUMENT2 VARCHAR(4000),
  DOCUMENT IMAGE,
  TYPEFILE INTEGER,
  CONTENTTYPE VARCHAR(50),
  DATASIZE INTEGER,
  STATUT INTEGER DEFAULT 1,
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME
);
GO

--  Table CIVILITE
CREATE TABLE CIVILITE (
  CODECIVILITE INT NOT NULL,
  CIVILITE VARCHAR(30),
  LIBELLECOURT VARCHAR(5),
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_CODECIVILITE PRIMARY KEY (CODECIVILITE));
GO

--  Table CLEFS
CREATE TABLE CLEFS (
  CLEID VARCHAR(14) NOT NULL,
  REFERENCE VARCHAR(14),
  ACCROCHAGE1 VARCHAR(14),
  ACCROCHAGE2 VARCHAR(14),
  NIVEAU INT,
  NATURE INT,
  ETAT INT,
  DUREEAUTO INT,
  LIEU VARCHAR(100),
  LIBELLE VARCHAR(100),
  SITEID VARCHAR(14),
  TYPECLEF VARCHAR(100),
  COMBINAISON VARCHAR(100),
  SERVICE VARCHAR(100),
  TYPEACCES VARCHAR(100),
  NODEMANDE VARCHAR(100),
  AUTOSPECIAL INT,
  NATURES VARCHAR(100),
  TAG VARCHAR(30),
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_CLEID PRIMARY KEY (CLEID));
GO

--  Table COLISEMIS
CREATE TABLE COLISEMIS (
  COLISID VARCHAR(14) NOT NULL,
  INTERLOCUTEURID VARCHAR(14),
  RESIDANTID VARCHAR(14),
  STATUTCOLIS VARCHAR(1),
  NBCOLIS INT,
  DATEAR DATETIME,
  NUMAR VARCHAR(20),
  LETTRECOLIS VARCHAR(1),
  TYPEENVOI VARCHAR(20),
  OBSERVATION VARCHAR(4000),
  ADRESSEID VARCHAR(14) NOT NULL,
  TICKET VARCHAR(50),
  POIDS VARCHAR(10),
  D_ACOURSE DATETIME,
  D_ENLPREVU DATETIME,
  D_ENLREEL DATETIME,
  D_DEPPREVU DATETIME,
  D_DEPREELLE DATETIME,
  PRIX FLOAT,
  D_APROB DATETIME,
  GENRE_PROB VARCHAR(14),
  GUICHETID VARCHAR(14),
  EMETTEURTYPE VARCHAR(15),
  CORRESTYPE VARCHAR(15),
  ID_STATUTCOLIS INT,
  TRACKING VARCHAR(500),
  TRACKING_CRM VARCHAR(500),
  TRACKING_TRANSPORTEUR VARCHAR(500),
  OFICHIERID INT,
  LIEU VARCHAR(50),
  SERVICEID VARCHAR(14),
  NATURECOLISID INTEGER,
  VALEUR VARCHAR(10),
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
  DATECREATION DATETIME,
CONSTRAINT PK_COLISID PRIMARY KEY (COLISID));
GO

--  Table COLISRECU
CREATE TABLE COLISRECU (
  COLISID VARCHAR(14) NOT NULL,
  INTERLOCUTEURID VARCHAR(14),
  RESIDANTID VARCHAR(14),
  ARRIVEE DATETIME,
  PREVENU DATETIME,
  PREVENUID VARCHAR(14),
  NOTEPREVENU IMAGE,
  RELANCE DATETIME,
  RELANCEID VARCHAR(14),
  ENLEVE DATETIME,
  ENLEVEID VARCHAR(14),
  NOTEENLEVE IMAGE,
  STATUTCOLIS VARCHAR(1),
  OBSERVATION IMAGE,
  ADRESSEID VARCHAR(14),
  NBCOLIS INT,
  LIEU VARCHAR(50),
  GUICHETID VARCHAR(14),
  EMETTEURTYPE VARCHAR(15),
  CORRESTYPE VARCHAR(15),
  ID_STATUTCOLIS INT,
  TRACKING VARCHAR(500),
  TRACKING_CRM VARCHAR(500),
  TRACKING_TRANSPORTEUR VARCHAR(500),
  TICKET VARCHAR(50),
  OFICHIERID INT,
  POIDS VARCHAR(10),
  SERVICEID VARCHAR(14),
  NATURECOLISID INTEGER,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME NOT NULL,
  DATECREATION DATETIME,
CONSTRAINT PK_RECUCOLISID PRIMARY KEY (COLISID));
GO

CREATE TABLE NATURECOLIS (
  NATURECOLISID INTEGER PRIMARY KEY,
  LIBELLE VARCHAR(50),
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL);
GO

--  Table CONSIGNE
CREATE TABLE CONSIGNE (
  CONSIGNEID VARCHAR(14) NOT NULL,
  INTERLOCUTEURID VARCHAR(14),
  RESIDANTID VARCHAR(14),
  OBJET IMAGE,
  DATELU DATETIME,
  OBSERVATION IMAGE,
  STATUTCONSIGNE VARCHAR(1),
  TYPECONSIGNE VARCHAR(35),
  TYPECONSIGNEID INT,
  SITEID VARCHAR(14),
  EMETTEUR_NOM VARCHAR(70),
  EMETTEUR_PROFIL VARCHAR(50),
  EMETTEURID VARCHAR(14),
  TYPEOBJET INT,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_CONSIGNEID PRIMARY KEY (CONSIGNEID));
GO

--  Table CONSIGNETEMP
CREATE TABLE CONSIGNETEMP (
  CONSIGNETEMPID INT NOT NULL,
  AUTEURID INT,
  SITEID VARCHAR(14),
  POSTEID INT,
  QUALIFID INT,
  DEBUT DATETIME,
  FIN DATETIME,
  OBSERVATION VARCHAR(1000),
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_CONSIGNETEMPID PRIMARY KEY (CONSIGNETEMPID));
GO

--  Table CONSIGNETEMP2
CREATE TABLE CONSIGNETEMP2 (
  CONSIGNETEMP2ID INT NOT NULL,
  AUTEURID INT,
  SITEID VARCHAR(14),
  POSTEID INT,
  QUALIFID INT,
  DEBUT DATETIME,
  FIN DATETIME,
  OBSERVATION VARCHAR(1000),
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_CONSIGNETEMP2ID PRIMARY KEY (CONSIGNETEMP2ID));
GO

CREATE TABLE CONSTEMP_SITE (
  CONSIGNETEMPID INTEGER,
  SITEID VARCHAR(14)
);
GO

CREATE TABLE CONSTEMP_POSTE (
  CONSIGNETEMPID INTEGER,
  POSTEID INTEGER
);
GO

CREATE TABLE CONSTEMP_QUALIF (
  CONSIGNETEMPID INTEGER,
  QUALIFID INTEGER
);
GO

CREATE TABLE CONSTEMP_AGENT (
  CONSIGNETEMPID INTEGER,
  PERSONNELID INTEGER
);
GO

--  Table CONTACT
CREATE TABLE CONTACT (
  SOCIETEID VARCHAR(14),
  CODECONTACT VARCHAR(14) NOT NULL,
  DATECONTACT DATETIME,
  DATEACTION DATETIME,
  INTERLOCUTEURID VARCHAR(14),
  CODEORIGINECONTACT VARCHAR(14),
  CODEDOSSIER VARCHAR(14),
  CODEAFFAIRE VARCHAR(14),
  USERID VARCHAR(14),
  CODECOLLABOACTION VARCHAR(14),
  CODEACTIONCONTACT VARCHAR(14),
  CONTACTGENERE INT,
  ACTIONAUTO INT,
  ACTIONFAITLE DATETIME,
  ACTIONFAIT INT,
  TEXTCONTACT IMAGE,
  TEXTACTION IMAGE,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_CODECONTACT PRIMARY KEY (CODECONTACT));
GO

--  Table DEPARTEMENT
CREATE TABLE DEPARTEMENT (
  DEPTID VARCHAR(14) NOT NULL,
  SOCIETEID VARCHAR(14),
  EXTERNALID VARCHAR(24),
  LIBELLE VARCHAR(40),
  OBSERVATION IMAGE,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_DEPTID PRIMARY KEY (DEPTID));
GO

--  Table DEVIS
CREATE TABLE DEVIS (
  CODEDEVIS VARCHAR(14) NOT NULL,
  SOCIETEID VARCHAR(14),
  INTERLOCUTEURID VARCHAR(14),
  CODEAFFAIRE VARCHAR(14),
  CODECLIENT VARCHAR(14) NOT NULL,
  COMMERCIALID VARCHAR(14),
  CODEMODEPAIE VARCHAR(14),
  CODEDELAIPAIE VARCHAR(14),
  CODEINTERVENNANT VARCHAR(14),
  NODEVIS VARCHAR(15),
  LIBELLE VARCHAR(80),
  INDICEDEVIS INT,
  DATEEMISSION DATETIME NOT NULL,
  TOTALAR FLOAT,
  REMISE FLOAT,
  REMISE_SALLE FLOAT,
  TOTALHT FLOAT,
  TOTALTVA FLOAT,
  TOTALTTC FLOAT,
  WIZARD INT,
  OBSERVATION IMAGE,
  ACOMPTE FLOAT,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_CODEDEVIS PRIMARY KEY (CODEDEVIS));
GO

--  Table DIPLOME
CREATE TABLE DIPLOME (
  DIPLOMEID INT NOT NULL,
  PERSONNELID INT,
  LIBELLE VARCHAR(40),
  OBTENTION DATETIME,
  RENOUVELLEMENT DATETIME,
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME
);
GO

--  Table EQUIPEMENTFIXE
CREATE TABLE EQUIPEMENTFIXE (
  CODEEQUIPEMENTFIXE VARCHAR(14) NOT NULL,
  LIBELLE VARCHAR(35),
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_CODEEQUIPEMENTFIXE PRIMARY KEY (CODEEQUIPEMENTFIXE));
GO

--  Table ETAGES
CREATE TABLE dbo.ETAGES (
  ETAGEID VARCHAR(14) NOT NULL,
  BATIMENTID VARCHAR(14),
  ETAGE VARCHAR(7),
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_ETAGEID PRIMARY KEY (ETAGEID));
GO

CREATE TABLE dbo.ETATS
(
ETATID		INTEGER	PRIMARY KEY,
LIBELLE		VARCHAR(100),
REQUETE_MSSQL		VARCHAR(4000),
REQUETE_ORACLE		VARCHAR(4000),
MODIFICATION	VARCHAR(1000),
MODIFICATION_OPERATEUR	VARCHAR(1000),
MODIFICATION_VALEUR	VARCHAR(1000),
DATECREATION	DATETIME NOT NULL,
DATEMAJ			DATETIME NOT NULL
);
GO

--  Table EVENEMENT
CREATE TABLE EVENEMENT (
  EVENEMENTID INT PRIMARY KEY,
  LIBELLE VARCHAR(40),
  RAPPORTID INT,
  CONSIGNEID INT,
  ISRAPPORT INT,
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME,
  DOUBLE_SIGNATURE INT,
  SITEID  VARCHAR(14),
  COLOR  INT,
  GRPEVENEMENTID INTEGER DEFAULT -1
);
GO

--  Table EVENEMENT_TYPE
CREATE TABLE EVENEMENT_TYPE (
  EVENEMENT_TYPEID INT NOT NULL,
  EVENEMENTID INT,
  LIBELLE VARCHAR(40),
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME
);
GO

CREATE TABLE EVENEMENT_SITE (
  EVENEMENTID INTEGER,
  SITEID VARCHAR(14)
);
GO

CREATE TABLE EVENEMENT_DEST_SITE (
  EVENEMENTID      INTEGER,
  GROUPEDESTID     INTEGER,
  SITEID           VARCHAR(14)
);
GO

--  Table EVTPERSONNEL
CREATE TABLE EVTPERSONNEL (
  PERSONNELID INT NOT NULL,
  EVENEMENTID INT,
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME
);
GO

--  Table FACTURE
CREATE TABLE FACTURE (
  CODEFACTURE VARCHAR(14) NOT NULL,
  CODEAFFAIRE VARCHAR(14),
  CODECLIENT VARCHAR(14) NOT NULL,
  RESIDANTID VARCHAR(14),
  CODEMODEPAIE VARCHAR(14),
  CODEDELAIPAIE VARCHAR(14),
  NOFACTURE VARCHAR(15),
  DATEEMISSION DATETIME,
  TOTALHT FLOAT,
  TOTALTVA FLOAT,
  TOTALTTC FLOAT,
  REGLE INT,
  DATEREGLEMENT DATETIME,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_CODEFACTURE PRIMARY KEY (CODEFACTURE));
GO

--  Table FAMILLE
CREATE TABLE FAMILLE (
  CODEFAMILLE VARCHAR(14) NOT NULL,
  LIBELLE VARCHAR(35),
  REMARQUES IMAGE,
  LISTEPRIX INT,
  IMAGE IMAGE,
  MARGE FLOAT,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_CODEFAMILLE PRIMARY KEY (CODEFAMILLE));
GO

--  Table FONCTION
CREATE TABLE FONCTION (
  CODEFONCTION INT NOT NULL,
  LIBELLE VARCHAR(35),
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_CODEFONCTION PRIMARY KEY (CODEFONCTION));
GO

--  Table FORMATION
CREATE TABLE FORMATION (
  FORMATIONID INT NOT NULL,
  PERSONNELID INT,
  LIBELLE VARCHAR(40),
  DATE_DEBUT DATETIME,
  DATE_FIN DATETIME,
  INSTRUCTEUR VARCHAR(40),
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME
);
GO

--  Table GROUPE
CREATE TABLE GROUPE (
  GROUPEID VARCHAR(14) NOT NULL,
  EXTERNALID VARCHAR(24),
  GROUPE VARCHAR(80),
  ADRESSE IMAGE,
  CODEPOSTAL VARCHAR(10),
  VILLE VARCHAR(40),
  PROVINCE VARCHAR(35),
  PAYS VARCHAR(35),
  INTERDIT VARCHAR(1),
  DEBUTINTERDIT DATETIME,
  FININTERDIT DATETIME,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_GROUPEID PRIMARY KEY (GROUPEID));

GO

CREATE TABLE GRPUSER_DROITSTELEM (
	[GRPUSERID] [varchar](14) NOT NULL,
	[ID_DROITSTELEM] [varchar](14) NOT NULL,
 CONSTRAINT [PK_GRPUSER_ID_DROITSTELEM] PRIMARY KEY CLUSTERED
(
	[GRPUSERID] ASC,
	[ID_DROITSTELEM] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO

CREATE TABLE GROUPEDEST (
  GROUPEDESTID     INTEGER PRIMARY KEY,
  LIBELLE          VARCHAR(50),
  TOADDRESS        VARCHAR(2000),
  SITEID		   VARCHAR(14),
  DATECREATION     DATETIME,
  DATEMAJ          DATETIME
);
GO

CREATE TABLE GRPUSER (
   GRPUSERID      VARCHAR(14) PRIMARY KEY,
   LIBELLE        VARCHAR(50),
   NIVEAU         VARCHAR(14),
   STATUT         VARCHAR(14),
   STATUTCHECK    INTEGER,
   SURRESERVATION VARCHAR(1),
   RESAPERIODIQUE VARCHAR(1),
   ACCESDRAGDROP  VARCHAR(1),
   PLANNING       VARCHAR(5),
   RESA           VARCHAR(15),
   PRESTA         VARCHAR(15),
   DATECREATION DATETIME,
   DATEMAJ      DATETIME,
   EMAILAUTO VARCHAR(1),
   VALIDEUR 	INTEGER DEFAULT 0,
   PAYANT INT DEFAULT 0
);
GO

CREATE TABLE GRPSALLE(
   GRPSALLEID   VARCHAR(14) PRIMARY KEY,
   LIBELLE      VARCHAR(50),
   HEUREDEBUT   DATETIME,
   HEUREFIN     DATETIME,
   OPENPRERESA  INTEGER,
   CLOSEPRERESA INTEGER,
   RESA         VARCHAR(15),
   SITEID		VARCHAR(14),
   DATECREATION DATETIME,
   DATEMAJ      DATETIME,
   SALLE_VALIDATION INTEGER DEFAULT 0,
   SALLE_STATUTFORCE VARCHAR(14),
   USERID VARCHAR(14)
);
GO

CREATE TABLE GRPSALLES_SAL(
   GRPSALLEID   VARCHAR(14),
   SALLEID      VARCHAR(14)
);
GO

CREATE TABLE dbo.GRPSALLES_VALIDATION(
   GRPSALLEID   VARCHAR(14),
   GRPUSERID	VARCHAR(14)
);
GO

--  Table GUICHET
CREATE TABLE GUICHET (
  GUICHETID VARCHAR(14) NOT NULL,
  SITEID VARCHAR(14),
  GUICHET VARCHAR(40),
  BOITE VARCHAR(6),
  ADRESSE IMAGE,
  POSTE VARCHAR(35) NULL,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_GUICHETID PRIMARY KEY (GUICHETID));
GO

CREATE TABLE GRPEVENEMENT (
  GRPEVENEMENTID   INTEGER PRIMARY KEY,
  LIBELLE          VARCHAR(50),
  DATECREATION     DATETIME,
  DATEMAJ          DATETIME
);
GO

CREATE TABLE GRPEVENEMENT_POSTE (
	GRPEVENEMENTID INT NOT NULL,
	POSTEID INT NOT NULL
);
GO

--  Table HLGPA
CREATE TABLE HLGPA (
  CODERESERVATION     VARCHAR(14),
  CODELGRESERVATION   VARCHAR(14),
  CODESALLE           VARCHAR(14),
  CODELGPA            VARCHAR(14),
  CODEARTICLE         VARCHAR(14),
  DATEDEBUT           DATETIME,
  DATEFIN             DATETIME,
  QUANTITE            FLOAT,
  PRIX                FLOAT,
  CODETVA             VARCHAR(14),
  TAUXTVA             FLOAT,
  HEUREDEBUT          DATETIME,
  HEUREFIN            DATETIME,
  HEURECONTINU        INT,
  REMISE              FLOAT,
  LIBELLESALLE        VARCHAR(35),
  NOSALLE             VARCHAR(15),
  PRIXCLIENT          FLOAT,
  WIZARD              INT,
  DATECREATION        DATETIME,
  DATEMAJ             DATETIME,
  DATESYNCHRO         DATETIME,
  COMMENTAIRE         VARCHAR(3000),
  CONFIRMER           INTEGER,
  ARTICLE             VARCHAR(50),
  TVA                 VARCHAR(30)
);
GO

--  Table HLGPARTICIPANT
CREATE TABLE HLGPARTICIPANT (
  LGPARTICIPANTID     VARCHAR(14),
  CODELGRESERVATION   VARCHAR(14),
  RESIDANTID          VARCHAR(14),
  INTERLOCUTEURID     VARCHAR(14),
  CIVILITE            VARCHAR(14),
  NOM                 VARCHAR(35),
  PRENOM              VARCHAR(35),
  SOCIETE             VARCHAR(35),
  EMAIL               VARCHAR(50),
  DATECREATION        DATETIME,
  DATEMAJ             DATETIME,
  DATESYNCHRO         DATETIME
);
GO

--  Table HLGRESERVATION
CREATE TABLE HLGRESERVATION (
  CODERESERVATION     VARCHAR(14),
  CODESALLE           VARCHAR(14),
  CODESTATUT          VARCHAR(14),
  CODELGRESERVATION   VARCHAR(14),
  CODEAMMENAGEMENT    VARCHAR(14),
  DATEDEBUT           DATETIME,
  DATEFIN             DATETIME,
  NBJOURS             INT,
  PRIX                FLOAT,
  CODETYPETARIF       VARCHAR(14),
  HEUREDEBUT          DATETIME,
  HEUREFIN            DATETIME,
  HEURECONTINU        INT,
  REMISE              FLOAT,
  LIBELLESALLE        VARCHAR(35),
  NOSALLE             VARCHAR(15),
  PRIXCLIENT          FLOAT,
  WIZARD              INT,
  CAPACITE            INT,
  DATECREATION        DATETIME,
  DATEMAJ             DATETIME,
  DATESYNCHRO         DATETIME,
  AMENAGEMENT         VARCHAR(35),
  TYPETARIF           VARCHAR(35),
  CODESALLEASS VARCHAR(14)
);
GO

--  Table HRESERVATION
CREATE TABLE HRESERVATION (
  CODERESERVATION     VARCHAR(14),
  CODETYPERESERVATION VARCHAR(14),
  PRIORITE            INT,
  SOCIETEID           VARCHAR(14),
  INTERLOCUTEURID     VARCHAR(14),
  USERID              VARCHAR(14),
  CODEANIMATEUR       VARCHAR(14),
  DATERETROCESSION    DATETIME,
  CODESTATUT          VARCHAR(14),
  REFRESERVATION      VARCHAR(15),
  NBPERSDEMANDE       INT,
  NBPERSREEL          INT,
  LIBELLE             VARCHAR(35),
  REMISE              FLOAT,
  PRIXRESERVATION     FLOAT,
  PRIXFACTUREE        FLOAT,
  COMMENTAIRE         IMAGE,
  UPDATEDBY           VARCHAR(14),
  DEVIS               INT,
  FACTURE             INT,
  DATECREATION        DATETIME,
  DATEMAJ             DATETIME,
  DATESYNCHRO         DATETIME,
  IMPUTATIONID        VARCHAR(14),
  TYPERESERVATION     VARCHAR(35),
  STATUTRESERVATION   VARCHAR(35),
  IMPUTATION          VARCHAR(35),
  TYPEIMPUTATION      VARCHAR(35),
  SOCIETE             VARCHAR(35),
  INTER_NOMP          VARCHAR(70),
  INTER_DEPTSERV      VARCHAR(70),
  INTER_TEL           VARCHAR(20),
  INTER_EMAIL         VARCHAR(100),
  ANIMATEUR_NOMP      VARCHAR(70),
  ANIMATEUR_SOCIETE   VARCHAR(35),
  USER_FULLNAME       VARCHAR(50)
);
GO

--TABLE HVISITES
CREATE TABLE HVISITES (
  VISITEID VARCHAR(14),
  INTERLOCUTEURID VARCHAR(14),
  RESIDANTID VARCHAR(14),
  CODESALLE VARCHAR(14),
  SITEID VARCHAR(14),
  STATUTID INT,
  EXTERNALID VARCHAR(24),
  SOCIETERESID VARCHAR(35),
  NOMPRENOMRESID VARCHAR(70),
  SOCIETEVISIT VARCHAR(35),
  NOMPRENOMVISIT VARCHAR(70),
  DEBUTPREVU DATETIME,
  FINPREVU DATETIME,
  HDEBUTPREVU DATETIME,
  HFINPREVU DATETIME,
  NUMEROBADGE VARCHAR(200),
  NUMEROVISITE INT,
  DEBUTVISITE DATETIME,
  FINVISITE DATETIME,
  HDEBUT DATETIME,
  HFIN DATETIME,
  STATUTVISITE VARCHAR(50),
  TYPEVISITEID INT,
  BOITE VARCHAR(6),
  CASIER VARCHAR(6),
  OBJET VARCHAR(200),
  CASIERID INTEGER,
  PIECE VARCHAR(35),
  NUMERO VARCHAR(20),
  VALIDITE DATETIME,
  PARKING VARCHAR(6),
  IMMATRICULATION VARCHAR(15),
  GUICHETID VARCHAR(14),
  OBSERVATION VARCHAR(200),
  BUREAUID VARCHAR(14),
  LIEU VARCHAR(50),
  DATECREATION DATETIME,
  DATEMAJ DATETIME,
  DATESYNCHRO DATETIME,
  ORIGINEVISITE		INT,
  NBBDGIMPR		INT,
  NBBDGIMPRTOTAL	INT,
  FREE1  VARCHAR(50),
  FREE2  VARCHAR(50),
  FREE3  VARCHAR(50),
  FREE4  VARCHAR(50),
  FREE5  VARCHAR(50),
  FREE6  VARCHAR(50),
  FREE7  VARCHAR(50),
  FREE8  VARCHAR(50),
  FREE9  VARCHAR(50),
  FREE10 VARCHAR(50),
  MARQUE VARCHAR(20),
  MODELE VARCHAR(40),
  COTE	 INTEGER,

);
GO

CREATE TABLE VEHICULE_DEMANDE (
	VEHICULEID	VARCHAR(14),
	RESIDANTID	VARCHAR(14),
	DATEDEMANDE	DATETIME,
	IMMATRICULATION	VARCHAR(14),
	MARQUE		VARCHAR(20),
	MODELE		VARCHAR(40),
	COTE		INTEGER,
	STATUT		VARCHAR(40),
	DATECREATION	DATETIME
);
GO

--  Table IDENTITES
CREATE TABLE IDENTITES (
  IDENTITEID VARCHAR(14) NOT NULL,
  TYPEIDENTITEID INT,
  DELIVREPAR VARCHAR(80),
  FINVALIDITE DATETIME,
  NUMERO VARCHAR(20),
  IMAGE IMAGE,
  INTERLOCUTEURID VARCHAR(14),
  OFICHIERID INTEGER,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_IDENTITEID PRIMARY KEY (IDENTITEID));
GO

--  Table IMPUTATION
CREATE TABLE IMPUTATION (
  IMPUTATIONID VARCHAR(14) NOT NULL,
  LIBELLE VARCHAR(35),
  LIBELLE2 VARCHAR(35),
  IMPUTATION_TYPEID VARCHAR(14),
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_IMPUTATIONID PRIMARY KEY (IMPUTATIONID));
GO

--  Table IMPUTATION_TYPE
CREATE TABLE IMPUTATION_TYPE (
  IMPUTATION_TYPEID VARCHAR(14) NOT NULL PRIMARY KEY,
  LIBELLE VARCHAR(35) );
GO

--  Table INDCLE
CREATE TABLE INDCLE (
  CLEID VARCHAR(14),
  INDIVIDUID VARCHAR(15),
  RESERVANTID VARCHAR(15),
  INDIVIDU VARCHAR(100),
  RESERVANT VARCHAR(100),
  UTILISATEURID VARCHAR(100),
  JOUR_DEPART DATETIME,
  JOUR_RETOUR DATETIME,
  ETAT INT,
  OBSERVATIONSALLER VARCHAR(2000),
  OBSERVATIONSRETOUR VARCHAR(2000),
  NEMPRUNT INT,
  SIGNATURE_ENTREE INT,
  SIGNATURE_SORTIE INT,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME
);
GO

--  Table INTERLOCUTEUR
CREATE TABLE INTERLOCUTEUR (
  SOCIETEID VARCHAR(14) NOT NULL,
  INTERLOCUTEURID VARCHAR(14) NOT NULL,
  CODECIVILITE INT,
  CODEFONCTION INT,
  PHONKEY VARCHAR(35) DEFAULT '1',
  EXTERNALID VARCHAR(24),
  PAYS VARCHAR(35),
  CIVILITE VARCHAR(30),
  SOCIETE VARCHAR(35),
  NOMPRENOM VARCHAR(70),
  CPNOM VARCHAR(40),
  NOM VARCHAR(35),
  PRENOM VARCHAR(35),
  IDENTITEID VARCHAR(14),
  FONCTION VARCHAR(35),
  TELEPHONE VARCHAR(20),
  EMAIL VARCHAR(150),
  GSM VARCHAR(20),
  FAX VARCHAR(20),
  CANDIDATMAILING INT,
  OBS VARCHAR(200),
  PHOTO IMAGE,
  REFIMPORTATION VARCHAR(48),
  IMMATRICULATION VARCHAR(15),
  INTERDIT VARCHAR(1),
  DEBUTINTERDIT DATETIME,
  FININTERDIT DATETIME,
  NATUREID VARCHAR(14),
  DATENAISSANCE DATETIME,
  LIEUNAISSANCE VARCHAR(70),
  NATIONALITEID VARCHAR(14),
  FINVALIDITEAUTO DATETIME,
  DATEDERNVISITE DATETIME,
  DATEMAJ DATETIME NOT NULL,
  DATECREATION DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
  NOMJEUNEFILLE VARCHAR(35),
  ADRESSE VARCHAR(150),
  CODEPOSTAL VARCHAR(10),
  VILLE VARCHAR(35),
  SITE_CREATION	VARCHAR(35),
  SITE_MODIF	VARCHAR(35),
  PAYS_ADRESSE VARCHAR(50),
  PAYS_NAISSANCE VARCHAR(50),
  ENQUETE_VE INT DEFAULT 0,
  ENQUETE_LPE INT DEFAULT 0,
  TAG VARCHAR(30),
  DOUBLON_TRAITE INT DEFAULT 0,
  OFICHIERID INTEGER,
  NATIONALITE_ORIGINE VARCHAR(50),
  DEPFRID INT NULL,
CONSTRAINT PK_INTERLOCUTEURID PRIMARY KEY (INTERLOCUTEURID));
GO

--  Table INTER_RSERVICE
CREATE TABLE INTER_RSERVICE (
  INTERLOCUTEURID VARCHAR(14),
  RSERVICEID VARCHAR(14),
  RESIDANTID VARCHAR(14),
CONSTRAINT UNIK_INTER_RSERVICE UNIQUE (INTERLOCUTEURID,RSERVICEID));
GO

--  Table JAGENT
CREATE TABLE JAGENT (
  JAGENTID INT NOT NULL,
  AGENTID INT,
  ETAT INT,
  DATECREATION DATETIME,
  DATEMAJ DATETIME,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_JAGENTID PRIMARY KEY (JAGENTID));
GO

--  Table JMATERIEL
CREATE TABLE JMATERIEL (
  MATERIELID INT,
  EVENEMENTID INT
);
GO

--  Table JOUR
CREATE TABLE JOUR (
  JOURID INT PRIMARY KEY,
  LIBELLE VARCHAR(40),
  TYPE_JOUR VARCHAR(40),
  CL INT,
  DEBUT_VALIDITE DATETIME,
  FIN_VALIDITE DATETIME,
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME,
  DATEOFWEEK INTEGER
);
GO

--  Table JOURNAL
CREATE TABLE JOURNAL (
  JOURNALID VARCHAR(14) NOT NULL,
  USERID VARCHAR(14),
  TYPEACTION VARCHAR(10),
  TABLEID VARCHAR(30),
  FICHEID VARCHAR(14),
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
  RESA_REF VARCHAR(15),
  NOMPRENOM VARCHAR(40),
  SALLE_NO_LIB VARCHAR(40),
  RESA_DHDEBUT DATETIME,
  RESA_DHFIN DATETIME,
  RESA_CREATION DATETIME,
CONSTRAINT PK_JOURNALID PRIMARY KEY (JOURNALID));
GO

--  Table JPERSONNE
CREATE TABLE JPERSONNE (
  PERSONNEID INT,
  EVENEMENTID INT
);
GO

--  Table JRAPPORT
CREATE TABLE JRAPPORT (
  JOURNALID INT,
  RAPPORTID INT,
  EVENEMENTID INT,
  REF VARCHAR(20),
  MISSIONID INT,
  CLOTURER  INTEGER
);
GO

CREATE TABLE JRAPPORTLOG (
  OJOURNALID  INTEGER,
  RAPPORTID   INTEGER,
  RPTID       INTEGER,
  RPTNOM      VARCHAR(20),
  REF         VARCHAR(20),
  VERSION     INTEGER,
  PERSONNELID INTEGER,
  SITEID      VARCHAR(14),
  POSTEID     INTEGER,
  DATEMAJ     DATETIME
);
GO

--  Table JSECOURS
CREATE TABLE JSECOURS (
  SECOURSID INT,
  EVENEMENTID INT
);
GO

--  Table JVACATION
CREATE TABLE JVACATION (
  JVACATIONID INT NOT NULL,
  VACATIONID INT,
  OUVERTUREID INT,
  OUVERTURE DATETIME,
  FERMETUREID INT,
  FERMETURE DATETIME,
  SITEID  VARCHAR(14),
  POSTEID INTEGER,
CONSTRAINT PK_CJVACATIONID PRIMARY KEY (JVACATIONID));
GO

--  Table LGDEVIS
CREATE TABLE LGDEVIS (
  CODEDEVIS VARCHAR(14) NOT NULL,
  CODELGDEVIS VARCHAR(14) NOT NULL,
  OPTIONLEVEL INT,
  GROUPLEVEL INT,
  CODEPRODUIT VARCHAR(14),
  CODEFOURNISSEUR VARCHAR(14),
  QUANTITE INT,
  LIBELLE VARCHAR(80),
  PRIXACHATHT FLOAT,
  MARGE FLOAT,
  PRIXVENTEHT FLOAT,
  REMISE FLOAT,
  PRIXHT FLOAT,
  CODETVA VARCHAR(14) NOT NULL,
  TVA FLOAT,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_CODEDEVISLGDEVIS PRIMARY KEY (CODEDEVIS, CODELGDEVIS));
GO

--  Table LGFACTURE
CREATE TABLE LGFACTURE (
  CODEFACTURE VARCHAR(14) NOT NULL,
  LGFACTURE VARCHAR(14) NOT NULL,
  CODEPRODUIT VARCHAR(14) NOT NULL,
  CODETVA VARCHAR(14) NOT NULL,
  QUANTITE INT NOT NULL,
  LIBELLE VARCHAR(80),
  PRIXHT FLOAT NOT NULL,
  REMISE FLOAT,
  PRIXHTREEL FLOAT,
  TAUXTVA FLOAT NOT NULL,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_CODEFACTURELGFACTURE PRIMARY KEY (CODEFACTURE, LGFACTURE));
GO

--  Table LGPA
CREATE TABLE LGPA (
  CODERESERVATION VARCHAR(14) NOT NULL,
  CODELGRESERVATION VARCHAR(14) NOT NULL,
  CODESALLE VARCHAR(14) NOT NULL,
  CODELGPA VARCHAR(14) NOT NULL,
  CODEARTICLE VARCHAR(14),
  DATEDEBUT DATETIME NOT NULL,
  DATEFIN DATETIME NOT NULL,
  QUANTITE FLOAT,
  PRIX FLOAT,
  CODETVA VARCHAR(14),
  TAUXTVA FLOAT,
  HEUREDEBUT DATETIME,
  HEUREFIN DATETIME,
  HEURECONTINU INT,
  REMISE FLOAT,
  LIBELLESALLE VARCHAR(35) NOT NULL,
  NOSALLE VARCHAR(15),
  PRIXCLIENT FLOAT,
  WIZARD INT,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
  COMMENTAIRE VARCHAR(3000),
  CONFIRMER INTEGER,
  IMPUTATION VARCHAR(200),
CONSTRAINT PK_CODERESERVATIONSALLELGPA PRIMARY KEY (CODERESERVATION, CODESALLE, CODELGPA));
GO

--  Table LGPARTICIPANT
CREATE TABLE LGPARTICIPANT (
  LGPARTICIPANTID VARCHAR(14) NOT NULL,
  CODELGRESERVATION VARCHAR(14),
  RESIDANTID VARCHAR(14),
  INTERLOCUTEURID VARCHAR(14),
  CIVILITE VARCHAR(14),
  NOM VARCHAR(35),
  PRENOM VARCHAR(35),
  SOCIETE VARCHAR(35),
  EMAIL VARCHAR(150),
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME
);
GO

--  Table LGRESERVATION
CREATE TABLE LGRESERVATION (
  CODERESERVATION VARCHAR(14) NOT NULL,
  CODESALLE VARCHAR(14) NOT NULL,
  CODESTATUT VARCHAR(14),
  CODELGRESERVATION VARCHAR(14) PRIMARY KEY,
  CODEAMMENAGEMENT VARCHAR(14),
  DATEDEBUT DATETIME NOT NULL,
  DATEFIN DATETIME NOT NULL,
  NBJOURS INT,
  PRIX FLOAT,
  CODETYPETARIF VARCHAR(14),
  HEUREDEBUT DATETIME,
  HEUREFIN DATETIME,
  HEURECONTINU INT,
  REMISE FLOAT,
  LIBELLESALLE VARCHAR(35) NOT NULL,
  NOSALLE VARCHAR(15),
  PRIXCLIENT FLOAT,
  WIZARD INT,
  CAPACITE INT,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
  CODESALLEASS VARCHAR(14),
  PORTE_CODE VARCHAR(50),
  PAYANT INT DEFAULT 0,
  EXTERNALID VARCHAR(500)
);
GO

--  Table LGSALLE
CREATE TABLE LGSALLE (
  CODESALLE VARCHAR(14) NOT NULL,
  CODEEQUIPEMENTFIXE VARCHAR(14) NOT NULL,
  QUANTITE INT,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_CODESALLEEQUIPEMENTFIXE PRIMARY KEY (CODESALLE, CODEEQUIPEMENTFIXE));
GO

--  Table LIEU
CREATE TABLE LIEU (
  LIEUID INT NOT NULL,
  LIBELLE VARCHAR(40),
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME,
  SITEID  VARCHAR(14)
);
GO

--  Table LIEUPERMIS
CREATE TABLE LIEUPERMIS (
  RESIDANTID VARCHAR(14) NOT NULL,
  CODESALLE VARCHAR(14) NOT NULL,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_RESIDANTIDCODESALLE PRIMARY KEY (RESIDANTID, CODESALLE));
GO

--  Table LU_CSG
CREATE TABLE LU_CSG (
  PERSONNELID INT NOT NULL,
  CONSIGNEID INT,
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME
);
GO

--  Table LU_CSGT
CREATE TABLE LU_CSGT (
  PERSONNELID INT NOT NULL,
  CONSIGNETEMPID INT,
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME
);
GO

--  Table MARQUE
CREATE TABLE MARQUE (
  CODEMARQUE VARCHAR(14) NOT NULL,
  SOCIETEID VARCHAR(14),
  LIBELLE VARCHAR(35),
  REMARQUES IMAGE,
  IMAGE IMAGE,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_CODEMARQUE PRIMARY KEY (CODEMARQUE));
GO

--  Table MATERIEL
CREATE TABLE MATERIEL (
  MATERIELID INT NOT NULL,
  LIBELLE VARCHAR(40),
  OBSERVATION VARCHAR(250),
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME,
  SITEID  VARCHAR(14),
CONSTRAINT PK_MATERIELID PRIMARY KEY (MATERIELID));
GO

--  Table MISSION
CREATE TABLE MISSION (
  MISSIONID INT NOT NULL,
  DUREE DATETIME,
  TYPE_MISSIONID INT,
  LIBELLE VARCHAR(80),
  DESCRIPTION VARCHAR(1000),
  PRIORITE INT,
  QUALIFID INT,
  DOUBLE_SIGNATURE INT,
  CONSIGNEID INT,
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME,
  RAPPORTID INT,
  ISRAPPORT INT,
  SITEID  VARCHAR(14),
  POSTEID INTEGER,
CONSTRAINT PK_MISSIONID PRIMARY KEY (MISSIONID));
GO

--  Table MISSIONTEMP
CREATE TABLE MISSIONTEMP (
  MISSIONTEMPID INT NOT NULL,
  DUREE DATETIME,
  TOLERANCE DATETIME,
  TYPE_MISSIONID INT,
  LIBELLE VARCHAR(40),
  DESCRIPTION VARCHAR(1000),
  PRIORITE INT,
  QUALIFID INT,
  DOUBLE_SIGNATURE INT,
  CONSIGNEID INT,
  DEBUTVALIDITE DATETIME,
  FINVALIDITE DATETIME,
  AUTEURID INT,
  POSTEID INT,
  HEURE DATETIME,
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME,
  RAPPORTID INT,
  ISRAPPORT INT,
  SITEID  VARCHAR(14),
CONSTRAINT PK_MISSIONTEMPID PRIMARY KEY (MISSIONTEMPID));
GO

--  Table NATURE
CREATE TABLE NATURE (
  NATUREID VARCHAR(14) NOT NULL,
  LIBELLE VARCHAR(35),
  ABREGE VARCHAR(6),
  TVISITE VARCHAR(1),
  PROFIL VARCHAR(20),
  INTERDIT VARCHAR(1),
  DEBUTINTERDIT DATETIME,
  FININTERDIT DATETIME,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_NATUREID PRIMARY KEY (NATUREID));
GO

--  Table OCONS_ETAT
CREATE TABLE OCONS_ETAT (
  OCONSIGNEID INT NOT NULL,
  LIBELLE VARCHAR(500),
  PAGE INT,
  ETAT INT,
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_OCONSIGNEEID PRIMARY KEY (OCONSIGNEID));
GO

--  Table OCONSIGNE
CREATE TABLE OCONSIGNE (
  OCONSIGNEID INT NOT NULL,
  LIBELLE VARCHAR(500),
  PAGE INT,
  DATECONS DATETIME,
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME,
  FILE_PDF VARCHAR(250),
  SITEID  VARCHAR(14),
  POSTEID INTEGER,
CONSTRAINT PK_OCONSIGNEID PRIMARY KEY (OCONSIGNEID));
GO

--  Table ODROIT
CREATE TABLE ODROIT (
  ODROITID INT NOT NULL,
  LIBELLE VARCHAR(50),
  OMACCESS VARCHAR(15),
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_ODROITID PRIMARY KEY (ODROITID));
GO

--  Table OJOURNAL
CREATE TABLE OJOURNAL (
  OJOURNALID BIGINT NOT NULL,
  DEBUT_REEL DATETIME,
  FIN_REEL DATETIME,
  DEBUT_THEORIQUE DATETIME,
  FIN_THEORIQUE DATETIME,
  DEBUT_EFF DATETIME,
  FIN_EFF DATETIME,
  OBSERVATION VARCHAR(MAX),
  EVENEMENTID INT,
  MISSIONTEMPID INT,
  AGENDA_JOURID INT,
  PERSONNELDEBUTID INT,
  PERSONNELFINID INT,
  AGENDA_JOUR2ID BIGINT,
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME,
  SITEID  VARCHAR(14),
  POSTEID INTEGER,
  LIEUID INTEGER DEFAULT -1,
  CODESALLE VARCHAR(14) DEFAULT 'VPARDEFAUT',
  BATIMENTID VARCHAR(14) DEFAULT 'VPARDEFAUT',
CONSTRAINT PK_OJOURNALID PRIMARY KEY (OJOURNALID));
GO

CREATE TABLE OJOURNALLOG (
  OJOURNALID  BIGINT,
  ACTION      INTEGER,
  PERSONNELID INTEGER,
  SITEID      VARCHAR(14),
  POSTEID     INTEGER,
  OBSERVATION VARCHAR(MAX),
  DATEMAJ     DATETIME
);
GO

CREATE TABLE OJOURNAL_PERSMVT (
  OJOURNALID       BIGINT PRIMARY KEY,
  TYPEPERSID       INTEGER,
  NOMPRENOM        VARCHAR(70),
  SOCIETE          VARCHAR(35),
  INTERLOCUTEURID  VARCHAR(14),
  VEHICULE         VARCHAR(35),
  IMMATRICULATION  VARCHAR(35),
  BADGE            VARCHAR(50),
  CA               VARCHAR(20),
  DESTINATION      VARCHAR(200),
  OBSERVATION      VARCHAR(MAX),
  ENTREE           DATETIME,
  SORTIE           DATETIME,
  SITEID           VARCHAR(14),
  POSTEID          INTEGER,
  PERSONNELDEBUTID INTEGER,
  PERSONNELFINID   INTEGER,
  DATECREATION		DATETIME,
  TYPE_ACCES		VARCHAR(35),
  PERSONNELID		INTEGER,
  NB_LIEUX			INTEGER,
  DEBUT_ACCOMP		DATETIME,
  FIN_ACCOMP		DATETIME,
  DATEVALIDITE		DATETIME
);
GO

--  Table OJOURNALAGENT
CREATE TABLE OJOURNALAGENT (
  OJOURNALID INT,
  PERSONNELID INT,
  NOMPRENOM VARCHAR(50)
);
GO

--  Table OMESSAGE
CREATE TABLE OMESSAGE (
  OMESSAGEID INT NOT NULL,
  AGENTID INT,
  DATERAPPEL DATETIME,
  DATEFIN DATETIME,
  ETAT INT,
  MESSAGE VARCHAR(1000),
  DATECREATION DATETIME,
  DATEMAJ DATETIME,
  SITEID  VARCHAR(14),
  POSTEID INTEGER,
CONSTRAINT PK_OMESSAGEID PRIMARY KEY (OMESSAGEID));
GO

--  Table OMNI_PARAM
CREATE TABLE OMNI_PARAM (
  PARAMACCES INT,
  OPTION_NBJMC INT,
  OPTION_NBJMI INT,
  OPTION_DUBIP INT,
  OPTION_BIPLONG INT,
  SEPARATEUR VARCHAR(15),
  OPTION_AVMISS INTEGER,
  OPTION_TIMER_MISSION INTEGER,
  OPTION_PASSWORD INT,
  CARTEPRO_CTRL INTEGER DEFAULT 0,
  CARTEPRO_NBJ INTEGER DEFAULT 0,
  MC_FILTRAGE INTEGER,
  PASS_SENSIBLE INTEGER,
  STATION_POSTE_ONLY INTEGER,
  STATION_ALERT_LOCK INTEGER,
  ALERT_NOLOCK INTEGER
);
GO

-- TABLE ORONDE
CREATE TABLE ORONDE (
  ORONDEID         INTEGER PRIMARY KEY,
  RONDIERID        INTEGER,
  RONDIERLIB       VARCHAR(50),
  RONDENUM         INTEGER,
  RONDELIB         VARCHAR(50),
  SITEID           VARCHAR(14),
  RONDEDATE        DATETIME,
  DETAILS          VARCHAR(4000),
  ETAT             INTEGER,
  RONDEAGENT	   VARCHAR(50),
  AGENTID	   INTEGER,
  DATECREATION     DATETIME,
  DATEMAJ          DATETIME
);
GO

-- TABLE OFICHIER
CREATE TABLE OFICHIER (
  OFICHIERID INT PRIMARY KEY,
  LIBELLE VARCHAR(200),
  DOCUMENT IMAGE,
  TYPEFILE INTEGER,
  CONTENTTYPE VARCHAR(100),
  DATASIZE INTEGER,
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME
);
GO

--  Table OFICHIER_POSTE
CREATE TABLE OFICHIER_POSTE (
  OFICHIERID INT NOT NULL,
  POSTEID INT NOT NULL
);
GO

-- TABLE ONOTE
CREATE TABLE ONOTE (
  ONOTEID int not null,
  EXPEDITEURID int,
  DESTINATAIREID int,
  EXPEDITEUR varchar(70),
  DESTINATAIRE varchar(70),
  OBJET varchar(70),
  CORPS varchar(2000),
  SUPPEXP int,
  SUPPDEST int,
  NEW int,
  DATECREATION datetime not null,
  DATEMAJ datetime
);
GO

--  Table ORIGINECONTACT
CREATE TABLE ORIGINECONTACT (
  CODEORIGINECONTACT VARCHAR(14) NOT NULL,
  LIBELLE VARCHAR(35),
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_CODEORIGINECONTACT PRIMARY KEY (CODEORIGINECONTACT));
GO

--  Table OJVACATION
CREATE TABLE OJVACATION (
  JVACATIONID INT NOT NULL,
  OJOURNALID INT NOT NULL
);
GO

--  Table PAGENT
CREATE TABLE PAGENT (
  PAGENTID INT NOT NULL,
  DATE_PLANNING DATETIME,
  SEMAINE INT,
  VACATIONID INT,
  AGENTID INT,
  POSTEID INT,
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_PAGENTID PRIMARY KEY (PAGENTID));
GO

--  Table PARAMETRES
CREATE TABLE PARAMETRES (
  PREENREG INT,
  SECURITE INT,
  I_PLAN INT,
  IMPRESSION INT,
  INFOBULLES INT,
  CHIMGVT VARCHAR(4000),
  DATESORTIVI DATETIME,
  CHIMGRE VARCHAR(4000),
  DERNVISITE INT,
  CHIMGPL VARCHAR(4000),
  SORTIVI INT,
  PURGEVP INT,
  APPETEL INT,
  MONOSOC INT NOT NULL,
  MODULE INT,
  GESPHOTO VARCHAR(1),
  TRCLUNIK INT,
  TYPEANNU VARCHAR(1),
  DATEIMP DATETIME,
  IMPORTAUTO VARCHAR(1),
  GESTCASIER VARCHAR(1),
  NBESSAIS INT NOT NULL,
  REFIMPORTATION VARCHAR(48),
  SORTIFINVI INT,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME
);
GO

--  Table PARKING
CREATE TABLE PARKING (
  SITEID VARCHAR(14),
  PARKINGID VARCHAR(14) NOT NULL,
  SOCIETEID VARCHAR(14),
  PARKING VARCHAR(6),
  STATUTPARKING VARCHAR(20),
  TYPE_PARKING VARCHAR(30),
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
  CAPACITE INT,
CONSTRAINT PK_PARKINGID PRIMARY KEY (PARKINGID));
GO

--  Table PASSAGER
CREATE TABLE PASSAGER (
  PASSAGERID VARCHAR(14) NOT NULL,
  RESIDANTID VARCHAR(14),
  NOMPRENOM VARCHAR(35),
  CODEACCES VARCHAR(34),
  PASSAGE DATETIME,
  CIRCULATION VARCHAR(20),
  OBSERVATION VARCHAR(200),
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO	 DATETIME
);
GO

--  Table PAYS
CREATE TABLE PAYS (
  PAYSID VARCHAR(14) NOT NULL,
  LIBELLE VARCHAR(35),
  LIBELLEGR VARCHAR(50),
  LIBELLEUS VARCHAR(35),
  NATIONALITE VARCHAR(50),
  CODEISO1 VARCHAR(2),
  CODEISO2 VARCHAR(3),
  CODEISO3 VARCHAR(3),
  INDICATIF VARCHAR(5),
  SHORTLIB VARCHAR(3),
  DEVISE VARCHAR(3),
  DEVISELIBELLE VARCHAR(35),
  INTERDIT VARCHAR(1),
  DEBUTINTERDIT DATETIME,
  FININTERDIT DATETIME,
  ENQUETE1 VARCHAR(10),
  STATUT1 VARCHAR(10),
  ENQUETE2 VARCHAR(10),
  STATUT2 VARCHAR(10),
  ENQUETE3 VARCHAR(10),
  STATUT3 VARCHAR(10),
  DATEMAJ DATETIME NOT NULL,
  DATECREATION DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_PAYSID PRIMARY KEY (PAYSID));
GO

CREATE TABLE dbo.PERIPHERIQUE
(
PERIPHERIQUEID	INTEGER PRIMARY KEY,
PERIPHERIQUE_TRAITEMENTID	INTEGER,
NOM VARCHAR(50),
AVANT VARCHAR(20),
APRES VARCHAR(20),
DEBUT INTEGER,
LONGUEUR INTEGER,
LONGUEUR_MAX INTEGER,
DECOUPE INTEGER,
CONVERSION INTEGER,
TYPE_PORT VARCHAR(35),
BIT_SECONDE INTEGER,
BIT_DONNEE INTEGER,
PARITE VARCHAR(15),
BIT_ARRET VARCHAR(15),
CONTROLE_FLUX VARCHAR(15),
DATECREATION	DATETIME NOT NULL,
DATEMAJ	DATETIME NOT NULL
);
GO

CREATE TABLE dbo.PERIPHERIQUE_TRAITEMENT
(
PERIPHERIQUE_TRAITEMENTID	INTEGER PRIMARY KEY,
LIBELLE VARCHAR(50),
FAMILLE INTEGER,
DATECREATION	DATETIME NOT NULL,
DATEMAJ	DATETIME NOT NULL
);
GO

CREATE TABLE dbo.PERIPHERIQUE_POSTE
(
PERIPHERIQUEID	INTEGER,
NOM_POSTE VARCHAR(50),
PORT VARCHAR(15),
DATECREATION	DATETIME NOT NULL,
DATEMAJ	DATETIME NOT NULL
);
GO

--  Table PERSONNE
CREATE TABLE PERSONNE (
  PERSONNEID INT NOT NULL,
  LIBELLE VARCHAR(100),
  OBSERVATION VARCHAR(250),
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME,
  SITEID  VARCHAR(14),
CONSTRAINT PK_PERSONNEID PRIMARY KEY (PERSONNEID));
GO

--  Table PERSONNEL
CREATE TABLE PERSONNEL (
  PERSONNELID INT NOT NULL,
  THEPASSWORD VARCHAR(20),
  THELOGIN VARCHAR(15),
  NOM VARCHAR(50),
  PRENOM VARCHAR(50),
  DATE_NAISSANCE DATETIME,
  DATE_EMBAUCHE DATETIME,
  DATE_ARRIVEE DATETIME,
  TEL VARCHAR(10),
  DEBUT_VALIDITE DATETIME,
  FIN_VALIDITE DATETIME,
  QUALIFID INT,
  CODEFONCTION INT,
  MEDICAL_LAST DATETIME,
  MEDICAL_NEXT DATETIME,
  ODROITID INT,
  SITEID VARCHAR(14),
  PHOTO IMAGE,
  EMPPK IMAGE,
  EMPPK_LEN INTEGER,
  TAG VARCHAR(30),
  CSECURITENUM VARCHAR(50),
  CSECURITEFIN DATETIME,
  CSECURITEACT VARCHAR(10),
  CSECURITEDEP VARCHAR(100),
  ACTIF INTEGER DEFAULT 1,
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_PERSONNELID PRIMARY KEY (PERSONNELID));
GO

--  Table PLANS
CREATE TABLE PLANS (
  PLANID VARCHAR(14) NOT NULL,
  EXTERNALID VARCHAR(24),
  LIBELLE VARCHAR(35),
  IMAGE IMAGE,
  OBSERVATION IMAGE,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_PLANID PRIMARY KEY (PLANID));
GO

--  Table POSTE
CREATE TABLE POSTE (
  POSTEID INT NOT NULL,
  LIBELLE VARCHAR(40),
  SITEID VARCHAR(14),
  SOCIETEID VARCHAR(14),
  REP_LOCAL VARCHAR(100),
  REP_DOC VARCHAR(100),
  REP_PDF VARCHAR(100),
  REP_IMG VARCHAR(100),
  REP_WAV VARCHAR(100),
  REP_TMP VARCHAR(100),
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME,
  LIBELLE2  VARCHAR(40),
  TYPEPOSTE INTEGER,
  PRISEPOSTE INTEGER,
  OPTIONADMIN_AUTOSTART INTEGER,
  OPTIONADMIN_LOCKDESKTOP INTEGER,
  OPTIONADMIN_SHUTDOWN INTEGER,
  CODESALLE VARCHAR(14),
  BATIMENTID VARCHAR(14),
CONSTRAINT PK_POSTEID PRIMARY KEY (POSTEID));
GO

--  Table PRODUIT
CREATE TABLE PRODUIT (
  CODEPRODUIT VARCHAR(14) NOT NULL,
  REFERENCE VARCHAR(10),
  CODESOUSFAMILLE VARCHAR(14),
  CODEFAMILLE VARCHAR(14),
  LIBELLE VARCHAR(35),
  LISTEPRIX INT,
  DESCRIPTION IMAGE,
  PRIXACHATHT FLOAT,
  PRIXVENTEHT FLOAT,
  PRIXVENTETTC FLOAT,
  CODETVA VARCHAR(14),
  TVA FLOAT,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_CODEPRODUIT PRIMARY KEY (CODEPRODUIT));
GO

--  Table PXACHAT
CREATE TABLE PXACHAT (
  CODEARTICLE VARCHAR(14) NOT NULL,
  SOCIETEID VARCHAR(14) NOT NULL,
  REFARTICLE VARCHAR(15),
  PRIXHT FLOAT,
  PRIXCATALOGUE FLOAT,
  ACCEPTABLE INT,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
  CONTACTID VARCHAR(14),
CONSTRAINT PK_CODEARTICLESOCIETEID PRIMARY KEY (CODEARTICLE, SOCIETEID));
GO

--  Table QPERSONNEL
CREATE TABLE QPERSONNEL (
  PERSONNELID INT,
  QUALIFID INT
);
GO

--  Table QUALIF
CREATE TABLE QUALIF (
  QUALIFID INT NOT NULL,
  LIBELLE VARCHAR(20),
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_QUALIFID PRIMARY KEY (QUALIFID));
GO

--  Table RAISON
CREATE TABLE RAISON (
  RAISONID INT NOT NULL,
  LIBELLE VARCHAR(40),
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_RAISONID PRIMARY KEY (RAISONID));
GO

--  Table RAPPORT
CREATE TABLE RAPPORT (
  RAPPORTID INT NOT NULL,
  LIBELLE VARCHAR(40),
  NOMTABLE VARCHAR(50),
  DETAILS VARCHAR(4000),
  AUTEURID INT,
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME,
  SITEID  VARCHAR(14),
  POSTEID INTEGER,
  TYPERAPPORT INTEGER,
CONSTRAINT PK_RAPPORTID PRIMARY KEY (RAPPORTID));
GO

--  Table REGROUPARTICLES
CREATE TABLE REGROUPARTICLES (
  CODERARTICLES VARCHAR(14) NOT NULL,
  LIBELLE VARCHAR(35),
  SORTORDER INT NOT NULL,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_SORTORDER PRIMARY KEY (SORTORDER));
GO

--  Table RELATION
CREATE TABLE RELATION (
  RELATIONID INT NOT NULL,
  RELATION VARCHAR(15),
CONSTRAINT PK_RELATIONID PRIMARY KEY (RELATIONID));
GO

--  Table RENSEIGNEMENT
CREATE TABLE RENSEIGNEMENT (
  RENSEIGNEMENTID INT NOT NULL,
  LIBELLE VARCHAR(40),
  DETAILS VARCHAR(250),
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME,
  SITEID  VARCHAR(14),
  POSTEID INTEGER,
CONSTRAINT PK_RENSEIGNEMENTID PRIMARY KEY (RENSEIGNEMENTID));
GO

--  Table RESERVATION
CREATE TABLE RESERVATION (
  CODERESERVATION VARCHAR(14) NOT NULL,
  CODETYPERESERVATION VARCHAR(14),
  PRIORITE INT,
  SOCIETEID VARCHAR(14),
  INTERLOCUTEURID VARCHAR(14),
  USERID VARCHAR(14) NOT NULL,
  CODEANIMATEUR VARCHAR(14),
  DATERETROCESSION DATETIME,
  CODESTATUT VARCHAR(14),
  REFRESERVATION VARCHAR(15),
  NBPERSDEMANDE INT,
  NBPERSREEL INT,
  LIBELLE VARCHAR(1000),
  REMISE FLOAT,
  PRIXRESERVATION FLOAT,
  PRIXFACTUREE FLOAT,
  COMMENTAIRE VARCHAR(3000),
  UPDATEDBY VARCHAR(14),
  DEVIS INT,
  FACTURE INT,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
  IMPUTATIONID VARCHAR(14),
  SALLE_VALIDEE INTEGER DEFAULT 0,
  EMETTEUR VARCHAR(200),
  EMETTEURID VARCHAR(14),
CONSTRAINT PK_CODERESERVATION PRIMARY KEY (CODERESERVATION));
GO

--  Table RESERVATIONCELL
CREATE TABLE RESERVATIONCELL (
  CODERESERVATION VARCHAR(14) NOT NULL,
  CODELGRESERVATION VARCHAR(14) NOT NULL,
  CODERESERVATIONCELL VARCHAR(14) NOT NULL,
  CODESTATUT VARCHAR(14),
  CODESALLE VARCHAR(14),
  COLOR INT,
  CELLTYPE VARCHAR(1),
  HEUREDEBUT DATETIME,
  HEUREFIN DATETIME,
  RESERVATIONDATE DATETIME,
CONSTRAINT PK_CODERESALGRESARESACELL PRIMARY KEY (CODERESERVATION, CODELGRESERVATION, CODERESERVATIONCELL));
GO

--  Table RESIDANTS
CREATE TABLE RESIDANTS (
  SOCIETEID VARCHAR(14) NOT NULL,
  RESIDANTID VARCHAR(14) NOT NULL,
  PLANID VARCHAR(14),
  BUREAUID VARCHAR(250),
  CODECIVILITE INT,
  CODEFONCTION INT,
  PHONKEY VARCHAR(35) DEFAULT '0',
  EXTERNALID VARCHAR(24),
  SOCIETE VARCHAR(35),
  CIVILITE VARCHAR(30),
  NOMPRENOM VARCHAR(70),
  NOMJEUNEFILLE  VARCHAR(35),
  CPNOM VARCHAR(250),
  NOM VARCHAR(35),
  PRENOM VARCHAR(35),
  FONCTION VARCHAR(35),
  SERVICEID VARCHAR(14),
  TELEPHONE VARCHAR(20),
  EMAIL VARCHAR(150),
  GSM VARCHAR(20),
  FAX VARCHAR(20),
  CANDIDATMAILING VARCHAR(1),
  MATRICULE VARCHAR(300),
  OBSERVATIONS IMAGE,
  PHOTO IMAGE,
  PERSOADRESSE IMAGE,
  PERSOCP VARCHAR(10),
  PERSOVILLE VARCHAR(35),
  PERSOPROVINCE VARCHAR(35),
  PERSOPAYS VARCHAR(35),
  PERSOTELEPHONE VARCHAR(20),
  ISUSER VARCHAR(10),
  MUSTCHANGEPWD INT,
  THEPASSWORD VARCHAR(250) NOT NULL,
  THELOGIN VARCHAR(50) NOT NULL,
  USERTYPE INT,
  SHORTNAME INT,
  ENABLED VARCHAR(1),
  SITEID VARCHAR(14),
  SITE VARCHAR(40),
  SERVICE VARCHAR(40),
  DEPARTEMENT VARCHAR(40),
  PLANSLIBELLE VARCHAR(40),
  DEPTID VARCHAR(14),
  ETAGEID VARCHAR(14),
  BATIMENT VARCHAR(60),
  BATIMENTID VARCHAR(14),
  ETAGE VARCHAR(7),
  BUREAU VARCHAR(15),
  REFIMPORTATION VARCHAR(48),
  CODEACCES VARCHAR(24),
  DATEENTREE DATETIME,
  DATESORTIE DATETIME,
  BOITEPOSTALE VARCHAR(7),
  PARKING VARCHAR(7),
  HABILITATIONVISITE VARCHAR(1),
  LISTEROUGE VARCHAR(1),
  ISEXTERN VARCHAR(1),
  ISRESIDENT VARCHAR(1) DEFAULT '1',
  ISACTIF VARCHAR(1),
  HARRIVEE DATETIME,
  HDEPART DATETIME,
  INTERDIT VARCHAR(1),
  DEBUTINTERDIT DATETIME,
  FININTERDIT DATETIME,
  NATUREID VARCHAR(14),
  DATENAISSANCE DATETIME,
  LIEUNAISSANCE VARCHAR(70),
  NATIONALITEID VARCHAR(14),
  NBBDGIMPR INT,
  DIRECTIONID VARCHAR(14),
  DIRECTION VARCHAR(35),
  PASSWORD1 VARCHAR(250),
  PASSWORD2 VARCHAR(250),
  PASSWORD3 VARCHAR(250),
  DATEFINVALPWD DATETIME,
  IMMATRICULATION VARCHAR(15),
  TAG VARCHAR(30),
  DATEMAJ DATETIME NOT NULL,
  DATECREATION DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
  VERROU INTEGER DEFAULT 0,
  VIP INTEGER DEFAULT 0,
  ETRANGER INT DEFAULT 0,
  CONTRAT VARCHAR(50),
  CCASSISTANTE INT DEFAULT(0),
CONSTRAINT PK_RESIDANTID PRIMARY KEY (RESIDANTID));
GO

CREATE TABLE RONDE (
  RONDEID          INTEGER PRIMARY KEY,
  NUMERO	   INTEGER,
  LIBELLE          VARCHAR(50),
  SITEID           VARCHAR(14),
  DATECREATION     DATETIME,
  DATEMAJ          DATETIME
);
GO

CREATE TABLE RONDECLEEVT (
  RONDECLEEVTID   INTEGER PRIMARY KEY,
  MOTCLE           VARCHAR(50),
  EVENEMENTID      INTEGER,
  DATECREATION     DATETIME,
  DATEMAJ          DATETIME
);
GO

CREATE TABLE RONDIER (
  RONDIERID        INTEGER PRIMARY KEY,
  LIBELLE          VARCHAR(50),
  SITEID           VARCHAR(14),
  ETAT             INTEGER,
  DATECREATION     DATETIME,
  DATEMAJ          DATETIME
);
GO

CREATE TABLE RONDEMOTCLE (
  RONDEMOTCLEID    INTEGER PRIMARY KEY,
  LIBELLE          VARCHAR(50),
  ETAT		   INTEGER,
  DATECREATION     DATETIME,
  DATEMAJ          DATETIME
);
GO

CREATE TABLE RONDEMOTCLE_EVT (
  RONDEMOTCLEID   INTEGER,
  EVENEMENTID     INTEGER
);
GO

--  Table RPT_0002
CREATE TABLE RPT_0002 (
  RPT_0002ID INT NOT NULL,
  REF VARCHAR(20),
  VERSION INT,
  DATEMAJ DATETIME,
  AUTEUR VARCHAR(30),
  EVENEMENT VARCHAR(50),
  SOUSEVENEMENT VARCHAR(30),
  DATEINCIDENT DATETIME,
  TITRE VARCHAR(50),
  PERSONNE VARCHAR(30),
  MATERIEL VARCHAR(30),
  SECOURS VARCHAR(30),
  AGENT VARCHAR(30),
  LIEU VARCHAR(30),
  DETAILS1 VARCHAR(200),
  DETAILS2 VARCHAR(200)
);
GO

--  Table RPT_SEM5
CREATE TABLE RPT_SEM5(
     RPT_SEM5ID INT NOT NULL,
     REF VARCHAR(20),
     VERSION INT,
     DATEMAJ DATETIME,
     AUTEUR VARCHAR(30),
     REPRESENTANT VARCHAR(30),
     RAISONSOC VARCHAR(30),
     SELECTDATE DATETIME,
     HEUREDEB DATETIME,
     HEUREFIN DATETIME,
     BATIMENT VARCHAR(35),
     RUE VARCHAR(60),
     SECTEUR VARCHAR(40),
     BAT VARCHAR(10),
     ORGANEAT VARCHAR(30),
     OPERATION VARCHAR(30),
     AGENT VARCHAR(30),
     OPERATEUR VARCHAR(30),
     AUXILIAIRE VARCHAR(30),
     CONSIGNE VARCHAR(240),
     RISQUE VARCHAR(240),
     MOYEN VARCHAR(240),
     MOYENA VARCHAR(50),
     MOYENI VARCHAR(50),
	 SITEID VARCHAR(14)
);
GO

--  Table RUE
CREATE TABLE RUE (
  RUEID INT NOT NULL,
  LIBELLE VARCHAR(60),
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME,
  SITEID  VARCHAR(14),
CONSTRAINT PK_RUEID PRIMARY KEY (RUEID));
GO

--  Table SALLE
CREATE TABLE SALLE (
  SITEID VARCHAR(14),
  SOCIETEID VARCHAR(14),
  BATIMENTID VARCHAR(14) NOT NULL,
  CODESALLE VARCHAR(14) NOT NULL,
  LIBELLE VARCHAR(35),
  NOSALLE VARCHAR(15),
  SORTORDER INT,
  INDISPONIBLE INT,
  INDISPCAUSE IMAGE,
  INDISPDEBUT DATETIME,
  INDISPFIN DATETIME,
  AMENAGFIXE INT,
  RAISONSOCIALE VARCHAR(35),
  ADRESSE IMAGE,
  CP VARCHAR(7),
  VILLE VARCHAR(35),
  TELEPHONE VARCHAR(20),
  TELEPHONE2 VARCHAR(20),
  OBSERVATIONS VARCHAR(3000),
  PLANACCES IMAGE,
  IMAGE IMAGE,
  PORTE_CLE VARCHAR(50),
  PORTE_OPTION VARCHAR(300),
  EMAIL VARCHAR(150),
  DATEMAJ DATETIME NOT NULL,
  DATECREATION DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_CODESALLE PRIMARY KEY (CODESALLE));
GO

CREATE TABLE SALLEFUS (
   CODESALLEFUS VARCHAR(14),
   LIBELLE  VARCHAR(50),
   DECODESALLE VARCHAR(14),
   DATECREATION DATETIME,
   DATEMAJ      DATETIME
);
GO
CREATE TABLE SALLEFUS_COMP (
   CODESALLEFUS VARCHAR(14),
   CODESALLE VARCHAR(14)
);
GO

--  Table SECOURS
CREATE TABLE SECOURS (
  SECOURSID INT NOT NULL,
  LIBELLE VARCHAR(40),
  OBSERVATION VARCHAR(250),
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME,
  SITEID  VARCHAR(14),
CONSTRAINT PK_SECOURSID PRIMARY KEY (SECOURSID));
GO

--  Table SECRETARIAT
CREATE TABLE SECRETARIAT (
  RESIDANTID2 VARCHAR(14) NOT NULL,
  RESIDANTID VARCHAR(14) NOT NULL,
  RELATION VARCHAR(15),
  RELATIONID INT,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_RESIDANTID2RESIDANTID PRIMARY KEY (RESIDANTID2,RESIDANTID));
GO

--  Table SECTEUR
CREATE TABLE SECTEUR (
  SECTEURID INT NOT NULL,
  LIBELLE VARCHAR(40),
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME,
  SITEID  VARCHAR(14),
CONSTRAINT PK_SECTEURID PRIMARY KEY (SECTEURID));
GO

--  Table SERVICE
CREATE TABLE SERVICE (
  SERVICEID VARCHAR(14) NOT NULL,
  DEPTID VARCHAR(14),
  EXTERNALID VARCHAR(24),
  LIBELLE VARCHAR(40),
  OBSERVATION IMAGE,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_SERVICEID PRIMARY KEY (SERVICEID));
GO

--  Table SITE
CREATE TABLE SITE (
  SITEID VARCHAR(14) NOT NULL,
  LIBELLE VARCHAR(35),
  ADRESSE IMAGE,
  CP VARCHAR(10),
  VILLE VARCHAR(35),
  PAYS VARCHAR(35),
  TELEPHONE VARCHAR(20),
  FAX VARCHAR(20),
  SORTORDER INT,
  PROVINCE VARCHAR(35),
  EXTERNALID VARCHAR(24),
  PLANID VARCHAR(14),
  IS_SECURED VARCHAR(1),
  PIECEOBLIGATOIRE INT,
  RECHTOLERANTE INT,
  OUVERTURE DATETIME,
  FERMETURE DATETIME,
  USERID VARCHAR(50),
  SMTP VARCHAR(50),
  FROMADDRESS VARCHAR(50),
  TOADDRESS VARCHAR(1000),
  CARBONCOPY VARCHAR(1000),
  ACTIF INTEGER,
  SUPPRESSION	VARCHAR(5),
  HEURESUPP VARCHAR(10),
  INTERVAL INTEGER,
  OEMAILPARAM  VARCHAR(20),
  TELEM_ACCESS VARCHAR(50),
  CTRL VARCHAR(5),
  WIFI_PRESENT INT,
  WIFI_LIB VARCHAR(250),
  WIFI_HOST VARCHAR(250),
  WIFI_LOGIN VARCHAR(50),
  WIFI_PWD VARCHAR(50),
  WIFI_GRP VARCHAR(50),
  WIFI_ENABLEPWD VARCHAR(20),
  WIFI_HFIN VARCHAR(10),
  TLMQ_SORTIE_FVISITE INT,
  TLMQ_SORTIE_JOUR INT,
  TLMQ_PURGE_PREENRG INT,
  TLMQ_HEURE_FIN VARCHAR(50),
  TLMQ_HEURE_EXEC VARCHAR(50),
  TLMQ_DERN_EXEC DATETIME,
  BDG_GENERATION INT,
  BDG_DEBUT VARCHAR(10),
  BDG_MILIEU VARCHAR(20),
  BDG_FIN VARCHAR(10),
  BDG_MAX INT,
  BDG_GENERATIONR INT,
  BDG_DEBUTR VARCHAR(20),
  BDG_MILIEUR VARCHAR(20),
  BDG_FINR VARCHAR(20),
  BDG_MAXR INT,
  BDG_GENERATIONVEH INT,
  BDG_DEBUTVEH VARCHAR(20),
  BDG_MILIEUVEH VARCHAR(20),
  BDG_FINVEH VARCHAR(20),
  BDG_MAXVEH INT,
  SITE_OUVERT INT DEFAULT(1),
  DATEMAJ DATETIME NOT NULL,
  DATECREATION DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_SITEID PRIMARY KEY (SITEID));
GO

--  Table SOCBAT
CREATE TABLE SOCBAT (
  BATIMENTID VARCHAR(14) NOT NULL,
  SOCIETEID VARCHAR(14) NOT NULL,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_BATIMENTIDSOCIETEID PRIMARY KEY (BATIMENTID, SOCIETEID));
GO

--  Table SOCIETE
CREATE TABLE SOCIETE (
  SOCIETEID VARCHAR(14) NOT NULL,
  ISRESIDANT VARCHAR(1),
  EXTERNALID VARCHAR(24),
  GROUPEID VARCHAR(14),
  BADGEID VARCHAR(14),
  PLANID VARCHAR(14),
  USERID VARCHAR(14),
  NATUREID VARCHAR(14),
  NOM VARCHAR(35) NOT NULL,
  DEPARTEMENT VARCHAR(35),
  ADRESSE IMAGE,
  ADRESSE2 VARCHAR(150),
  CP VARCHAR(10),
  VILLE VARCHAR(35),
  PROVINCE VARCHAR(35),
  PAYS VARCHAR(35),
  TELEPHONE VARCHAR(20),
  FAX VARCHAR(20),
  EMAIL VARCHAR(150),
  WEB VARCHAR(50),
  PROSPECT INT,
  SIRET VARCHAR(40),
  APE VARCHAR(5),
  COMPTECLIENT VARCHAR(10),
  COMPTEFOURNISSEUR VARCHAR(10),
  DISTANCEKM FLOAT,
  OBSERVATIONS IMAGE,
  PHONKEY VARCHAR(35)  DEFAULT '0',
  REFIMPORTATION VARCHAR(20),
  INTERN INT,
  CLIENT INT,
  FOURNISSEUR INT,
  INTERDIT INT,
  DEBUTINTERDIT DATETIME,
  FININTERDIT DATETIME,
  DATEMAJ DATETIME NOT NULL,
  DATECREATION DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
  ESCORT INT,
CONSTRAINT PK_SOCIETEID PRIMARY KEY (SOCIETEID));
GO

--  Table SOCSITE
CREATE TABLE SOCSITE (
  SOCIETEID VARCHAR(14) NOT NULL,
  SITEID VARCHAR(14) NOT NULL,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_SOCIETEIDSITEID PRIMARY KEY (SOCIETEID, SITEID));
GO

--  Table SOUSFAMILLE
CREATE TABLE SOUSFAMILLE (
  CODESOUSFAMILLE VARCHAR(14) NOT NULL,
  CODEFAMILLE VARCHAR(14) NOT NULL,
  SOUSFAMILLE VARCHAR(35),
  REMARQUES IMAGE,
  LISTEPRIX INT,
  IMAGE IMAGE,
  MARGE FLOAT,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_CODESOUSFAMILLECODEFAMILLE PRIMARY KEY (CODESOUSFAMILLE, CODEFAMILLE));
GO

--  Table STATUTPARKING
CREATE TABLE STATUTPARKING (
  CODE_STATUT VARCHAR(1),
  STATUT_NAME VARCHAR(25)
);
GO

--  Table STATUTRESERVATION
CREATE TABLE STATUTRESERVATION (
  CODESTATUT VARCHAR(14) NOT NULL,
  LIBELLE VARCHAR(35),
  COLOR INT,
  COLORNAME VARCHAR(30),
  RETROCESSIBLE INT,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
  CONFIRMATION INT,
  MESSAGE IMAGE,
  NBJOURAD INT,
  NBJOURAR INT,
  NBJOURDELAI INT,
CONSTRAINT PK_CODESTATUT PRIMARY KEY (CODESTATUT));
GO

-- TABLE STATUTRESERVATION_ETAT
CREATE TABLE STATUTRESERVATION_ETAT (
  ID                INT,
  TEXTE             VARCHAR (50),
  DATECREATION      DATETIME          NOT NULL,
  DATEMAJ           DATETIME          NOT NULL,
  DATESYNCHRO       DATETIME);
GO

-- TABLE STATUTRESERVATION_SET
CREATE TABLE STATUTRESERVATION_SET (
  ID                INT,
  TEXTE             VARCHAR (50),
  DATECREATION      DATETIME          NOT NULL,
  DATEMAJ           DATETIME          NOT NULL,
  DATESYNCHRO       DATETIME);
GO

--  Table STATUTVISITE
CREATE TABLE STATUTVISITE (
  STATUTID INT NOT NULL,
  STATUTVISITE VARCHAR(50),
CONSTRAINT PK_STATUTID PRIMARY KEY (STATUTID));
GO


--  Table SUIVI
CREATE TABLE SUIVI (
  SUIVIID INT NOT NULL,
  LIBELLE VARCHAR(40),
  PERSONNELID INT,
  OBSERVATION VARCHAR(800),
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_SUIVIID PRIMARY KEY (SUIVIID));
GO

--  Table TABLEREFERENCE
CREATE TABLE TABLEREFERENCE (
  TABLEREFERENCEID INT,
  ID INT,
  VALEUR INT,
  TEXTE VARCHAR(100),
  TEXTE_FR VARCHAR(100),
  TEXTE_EN VARCHAR(100),
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME
);
GO

CREATE TABLE dbo.TACHE (
TACHEID	INTEGER PRIMARY KEY,
TACHE_NOM	VARCHAR(200),
TACHE_RANG	INTEGER DEFAULT 0,
TYPEJOUR	VARCHAR(20),
HEUREEXECUTION	DATETIME,
ACT_NOM	VARCHAR(50),
ACT_PARAM	VARCHAR(100),
FREE01 VARCHAR(200),
FREE02 VARCHAR(50),
FREE03 VARCHAR(50),
MODEA	INTEGER DEFAULT 0,
ACTIF	INTEGER DEFAULT 1,
PROCHAINEEXECUTION DATETIME,
DERNIEREEXECUTION DATETIME,
DERNIERRESULTAT	INTEGER DEFAULT 1,
SITEID	VARCHAR(20),
GROUPEDESTID	INTEGER,
NUMSESSIONPROCHAINEEXECUTION INTEGER,
OWNERID VARCHAR(14) DEFAULT('VPARDEFAUT'),
ROLEOWNER VARCHAR(20) DEFAULT('USERS'),
DATECREATION DATETIME NOT NULL,
DATEMAJ DATETIME
);
GO

CREATE TABLE dbo.CORRESPONDANCE(
	CORRESID INT PRIMARY KEY,
	LIBSSRC VARCHAR(240) NULL,
	RANGSSRC VARCHAR(20) NULL,
	LIBDST VARCHAR(80) NULL,
	CFG_FICHIERID INT NULL,
	CORRES_RANG INT NULL,
	DATEMAJ DATETIME NULL,
	DATECREATION DATETIME NULL
);
GO


CREATE TABLE dbo.TACHE_LOG(
	LOGID INT PRIMARY KEY,
	TACHEID INT NULL,
	NUMSESSION INT NULL,
	USERID VARCHAR(14) NULL,
	DATECREATION DATETIME NULL,
	FREEFLAG01 INT NULL,
	FREEFLAG02 INT NULL,
	FREEFLAG03 INT NULL,
	FREEFLAG04 INT NULL,
	IDLIGNE VARCHAR(14) NULL,
	NIVEAUSECU INT NULL,
	ROLEUSER VARCHAR(20) DEFAULT ('USERS'),
	COMMENTAIRE VARCHAR(MAX) NULL
)
GO


CREATE TABLE dbo.TAG
(
TAGID	INTEGER	PRIMARY KEY,
TAG	VARCHAR(35),
DESCRIPTION	VARCHAR(100),
TYPE_TAG	INTEGER,
SITEID	VARCHAR(14),
DATECREATION	DATETIME	NOT NULL,
DATEMAJ	DATETIME	NOT NULL
);
GO

CREATE TABLE dbo.TAG_RONDE
(
TAGID	INTEGER	NOT NULL,
RONDEID	INTEGER	NOT NULL,
ORDRE	INTEGER,
);
GO

--  Table TARIFSALLE
CREATE TABLE TARIFSALLE (
  CODESALLE VARCHAR(14) NOT NULL,
  CODETYPETARIF VARCHAR(14) NOT NULL,
  PRIX FLOAT NOT NULL,
  CODETVA VARCHAR(14),
  TAUXTVA FLOAT,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_CODESALLETYPETARIF PRIMARY KEY (CODESALLE, CODETYPETARIF));
GO

--  Table TMPIMPORT
CREATE TABLE TMPIMPORT (
  ID_TMPI INT,
  USERNEDAP VARCHAR(20),
  PASSNEDAP VARCHAR(20),
  NOM VARCHAR(50),
  PRENOM VARCHAR(50),
  TEL VARCHAR(20),
  SOCIETE VARCHAR(50),
  NOM2 VARCHAR(50),
  DEBUT DATETIME,
  FIN DATETIME,
  PROFIL VARCHAR(50),
  T VARCHAR(50),
  CODEBARRE VARCHAR(20),
  SITEID VARCHAR(20),
  GUICHETID VARCHAR(20),
  BOITE VARCHAR(20)
);
GO

--  Table TRANCHE
CREATE TABLE TRANCHE (
  CODETRANCHE VARCHAR(14) NOT NULL,
  LIBELLE VARCHAR(35),
  HEUREDEBUT DATETIME,
  HEUREFIN DATETIME,
  CODETARIF VARCHAR(14),
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_CODETRANCHE PRIMARY KEY (CODETRANCHE));
GO

--  Table TVA
CREATE TABLE TVA (
  CODETVA VARCHAR(14) NOT NULL,
  LIBELLE VARCHAR(30),
  TAUXTVA FLOAT NOT NULL,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_CODETVA PRIMARY KEY (CODETVA));
GO

--  Table TYPEADRESSE
CREATE TABLE TYPEADRESSE (
  TYPEADRESSEID INT NOT NULL,
  TYPEADRESSE VARCHAR(40),
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_TYPEADRESSEID PRIMARY KEY (TYPEADRESSEID));
GO

--  Table TYPECONSIGNE
CREATE TABLE TYPECONSIGNE (
  TYPECONSIGNEID INT NOT NULL,
  TYPECONSIGNE VARCHAR(35),
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO	 DATETIME,
CONSTRAINT PK_TYPECONSIGNEID PRIMARY KEY (TYPECONSIGNEID));
GO

--  Table TYPEDEFAULT
CREATE TABLE TYPEDEFAULT (
  CODETYPEDEFAULT VARCHAR(14) NOT NULL,
  LIBELLE VARCHAR(35),
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_CODETYPEDEFAULT PRIMARY KEY (CODETYPEDEFAULT));
GO

--  Table TYPEIDENTITE
CREATE TABLE TYPEIDENTITE (
  TYPEIDENTITEID INT NOT NULL,
  LIBELLE VARCHAR(35),
  DATEMAJ DATETIME NOT NULL,
  DATECREATION DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_TYPEIDENTITEID PRIMARY KEY (TYPEIDENTITEID));
GO

--  Table TYPERESERVATION
CREATE TABLE TYPERESERVATION (
  CODETYPERESERVATION VARCHAR(14) NOT NULL,
  LIBELLE VARCHAR(35),
  DATEMAJ DATETIME NOT NULL,
  DATECREATION DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_CODETYPERESERVATION PRIMARY KEY (CODETYPERESERVATION));
GO

--  Table TYPETARIF
CREATE TABLE TYPETARIF (
  CODETYPETARIF VARCHAR(24) NOT NULL,
  LIBELLE VARCHAR(35),
  COEFICIENT FLOAT,
  HEUREDEBUT DATETIME,
  HEUREFIN DATETIME,
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME);
GO

--  Table TYPEVISITE
CREATE TABLE TYPEVISITE (
  TYPEVISITEID INT NOT NULL,
  TYPEVISITE VARCHAR(70),
  TRAVAIL INT DEFAULT 0,
  TYPESORTIE INT DEFAULT 0,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO	 DATETIME,
CONSTRAINT PK_TYPEVISITEID PRIMARY KEY (TYPEVISITEID));
GO

--  Table TYPE_MISSION
CREATE TABLE TYPE_MISSION (
  TYPE_MISSIONID INT NOT NULL,
  LIBELLE VARCHAR(40),
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME,
  SITEID  VARCHAR(14),
  POSTEID INTEGER,
CONSTRAINT PK_TYPE_MISSIONID PRIMARY KEY (TYPE_MISSIONID));
GO

--  Table USERS
CREATE TABLE USERS (
  USERID VARCHAR(14) NOT NULL,
  CIVILITEID INT,
  FIRSTNAME VARCHAR(35),
  ENABLED INT,
  LASTNAME VARCHAR(35),
  PHONNAME VARCHAR(50),
  USERTYPEID VARCHAR(24),
  GSACCESS INT DEFAULT (0),
  GVACCESS INT,
  EXTERNALID VARCHAR(24),
  FULLNAME VARCHAR(70),
  INTERNETMAILADR VARCHAR(120),
  MATRICULE VARCHAR(50),
  OBSERVATIONS IMAGE,
  PHONKEY VARCHAR(50),
  PROFIL_PARAMCOMPTE VARCHAR(14),
  PROFIL_ID_ORGA VARCHAR(14),
  PROFIL_ID_INTER VARCHAR(14),
  PROFIL_ID_SALLE VARCHAR(14),
  PROFIL_ID_BATIMENT VARCHAR(14),
  PROFIL_ID_SITE VARCHAR(14),
  PROFIL_ETAGE VARCHAR(14),
  PROFIL_SURBOOKING INT,
  PROFIL_PARAMVALIDE VARCHAR(14),
  PROFIL_ID_STATUT VARCHAR(14),
  SHORTNAME VARCHAR(5),
  THELOGIN VARCHAR(50),
  THEPASSWORD VARCHAR(250),
  USERTYPE INT,
  DATEMAJ DATETIME NOT NULL,
  DATECREATION DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
  GCACCESS INT,
  SITE	VARCHAR(35),
  SITEID VARCHAR(14),
  GRPUSERID VARCHAR(14),
  DATEMAJPWD DATETIME,
  SOCIETEID VARCHAR(14),
  SOCIETE VARCHAR(35),
  TYPEUSERID INT,
  ID_DROITSTAXI INT,
  EMPPK IMAGE,
  EMPPK_LEN INTEGER,
  ID_DROITSTELEM INT,
CONSTRAINT PK_USERID PRIMARY KEY (USERID));
GO

CREATE TABLE USER_GRPS(
  USERID VARCHAR(14),
  GRPSALLEID VARCHAR(14)
);
GO

--  Table VACATION
CREATE TABLE VACATION (
  VACATIONID INT NOT NULL,
  JOUR_SEM VARCHAR(20),
  VSERVICE VARCHAR(40),
  HEURE_DEBUT DATETIME,
  HEURE_FIN DATETIME,
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME,
  SITEID  VARCHAR(14),
  POSTEID INTEGER,
  CL INT,
CONSTRAINT PK_VACATIONID PRIMARY KEY (VACATIONID));
GO

--  Table VEHICULE
CREATE TABLE VEHICULE (
  VEHICULEID VARCHAR(14) NOT NULL,
  RESIDANTID VARCHAR(14),
  IMMATRICULATION VARCHAR(15),
  MARQUE VARCHAR(20),
  MODELE VARCHAR(40),
  TYPE VARCHAR(50),
  ENERGIE VARCHAR(20),
  DATELIMITE DATETIME,
  NUMEROPASS VARCHAR(40),
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_VEHICULEID PRIMARY KEY (VEHICULEID));
GO

--  Table VERSION_SFW
CREATE TABLE VERSION_SFW (
  COMPATIBLE VARCHAR(10),
  SCHEMAS VARCHAR(10),
  INFO VARCHAR(50),
  DATECREATION DATETIME,
  DATEMAJ DATETIME,
  FORMATDATE VARCHAR(10),
  VERSION VARCHAR(50)
);
GO

--  Table VILLE
CREATE TABLE VILLE (
  CODEVILLE VARCHAR(14) NOT NULL,
  CODEPOSTAL VARCHAR(5),
  PHONKEY VARCHAR(35),
  VILLE VARCHAR(35),
  PAYSID VARCHAR(14),
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_CODEVILLE PRIMARY KEY (CODEVILLE));
GO

--  Table VISITES
CREATE TABLE VISITES (
  VISITEID VARCHAR(14) NOT NULL,
  INTERLOCUTEURID VARCHAR(14),
  RESIDANTID VARCHAR(14),
  CODESALLE VARCHAR(14),
  SITEID VARCHAR(14),
  STATUTID INT,
  EXTERNALID VARCHAR(24),
  SOCIETERESID VARCHAR(35),
  NOMPRENOMRESID VARCHAR(70),
  SOCIETEVISIT VARCHAR(35),
  NOMPRENOMVISIT VARCHAR(70),
  DEBUTPREVU DATETIME,
  FINPREVU DATETIME,
  HDEBUTPREVU DATETIME,
  HFINPREVU DATETIME,
  NUMEROBADGE VARCHAR(200),
  NUMEROVISITE INT,
  DEBUTVISITE DATETIME,
  FINVISITE DATETIME,
  HDEBUT DATETIME,
  HFIN DATETIME,
  STATUTVISITE VARCHAR(50),
  TYPEVISITEID INT,
  BOITE VARCHAR(6),
  CASIER VARCHAR(6),
  OBJET VARCHAR(200),
  CASIERID INT,
  PIECE VARCHAR(35),
  NUMERO VARCHAR(20),
  VALIDITE DATETIME,
  PARKING VARCHAR(35),
  IMMATRICULATION VARCHAR(15),
  GUICHETID VARCHAR(14),
  OBSERVATION VARCHAR(200),
  BUREAUID VARCHAR(14),
  LIEU VARCHAR(50),
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
  ORIGINEVISITE		INT,
  NBBDGIMPR		INT,
  NBBDGIMPRTOTAL	INT DEFAULT 0,
  FREE1  VARCHAR(50),
  FREE2  VARCHAR(250),
  FREE3  VARCHAR(50),
  FREE4  VARCHAR(50),
  FREE5  VARCHAR(50),
  FREE6  VARCHAR(50),
  FREE7  VARCHAR(50),
  FREE8  VARCHAR(250),
  FREE9  VARCHAR(250),
  FREE10 VARCHAR(50),
  MARQUE VARCHAR(20),
  MODELE VARCHAR(40),
  COTE	 INT,
  PREMIER INT,
  PREENREG INT DEFAULT 0,
  ECHANGES INT DEFAULT 0,
  ZONE VARCHAR(1),
  DESCENTE INT DEFAULT 0,
  BADGEPHYSIQUE	VARCHAR(50),
  ATTENDU 	INTEGER DEFAULT 0,
  ATTENDU_VENU 	INTEGER DEFAULT 0,
  DATEHEUREENTREEPARKING DATETIME,
  DATEHEURESORTIEPARKING DATETIME,
  STATUTPARKING	VARCHAR(20) DEFAULT '0',
  DEBLOC INT,
  DEBLOC_USER VARCHAR(50),
  DEBLOC_USERID VARCHAR(14),
  DEBLOC_HEURE DATETIME,
  IFONCTION VARCHAR(35),
  IDATENAISSANCE DATETIME,
  ILIEUNAISSANCE VARCHAR(70),
  IPAYS VARCHAR(35),
  INOMJEUNEFILLE VARCHAR(35),
  MODIFICATION VARCHAR(100),
  ETATVISITE VARCHAR(1),
  VIP INTEGER DEFAULT 0,
  ISTATUT VARCHAR(35),
  CODELGRESERVATION VARCHAR(14),
  TICKET VARCHAR(50),
  RONDIER VARCHAR(50),
  RONDIERID INTEGER,
  CLE VARCHAR(500),
  PROFIL_CTRL VARCHAR(4000),
  PROFIL_CTRL2 VARCHAR(4000),
  PROFIL_CTRL_ID VARCHAR(4000),
  WIFI_LOGIN VARCHAR(50),
  WIFI_PWD VARCHAR(50),
  ALERTE VARCHAR(4000),
  LAST_ACTION VARCHAR(50),
  RES_OS VARCHAR(50),
  RES_FINAL VARCHAR(50),
  RES_MOTEUR1 VARCHAR(50),
  RES_MOTEUR2 VARCHAR(50),
  INFO VARCHAR(50),
  SIGNATURE_ENTREE INT,
  SIGNATURE_SORTIE INT,
  REFIMPORTATION VARCHAR(30) DEFAULT 'UNIS',
  ZRR_CODE VARCHAR(25),
  ZRR_LIB VARCHAR(255),
  ZRR_LS VARCHAR(3),
  FUSION INT DEFAULT '0',
  NATUREVISITE VARCHAR(7) DEFAULT('VISITE'),
  MESSAGEVALIDEUR VARCHAR(1000),
  ACCOMPAGNATEURID VARCHAR(14),
  GRPVALIDEUR2 VARCHAR(50),
  GRPVALIDEUR3 VARCHAR(50),
  GRPVALIDEUR4 VARCHAR(50),
  RANKLASTVAL INT,
  CATEGORIE VARCHAR(30),
  IDEPFR VARCHAR(100),
  EMETTEUR VARCHAR(200),
  USER_IN VARCHAR(200),
  USER_OUT VARCHAR(200),
CONSTRAINT PK_VISITEID PRIMARY KEY (VISITEID));
GO
-- premier pour dire si c la premier visite, et dire dans le champ condidatmailing 1 pour ne pas refaire le test sur les autres visites
-- preenreg pour dire si c une visite qui avait un preenreg ou pas

--  Table VISITES_TEMP
CREATE TABLE VISITES_TEMP (
  VISITEID VARCHAR(14) NOT NULL,
  INTERLOCUTEURID VARCHAR(14),
  RESIDANTID VARCHAR(14),
  CODESALLE VARCHAR(14),
  SITEID VARCHAR(14),
  STATUTID INT,
  EXTERNALID VARCHAR(24),
  SOCIETERESID VARCHAR(35),
  NOMPRENOMRESID VARCHAR(35),
  SOCIETEVISIT VARCHAR(35),
  NOMPRENOMVISIT VARCHAR(35),
  DEBUTPREVU DATETIME,
  FINPREVU DATETIME,
  HDEBUTPREVU DATETIME,
  HFINPREVU DATETIME,
  NUMEROBADGE VARCHAR(200),
  NUMEROVISITE INT,
  DEBUTVISITE DATETIME,
  FINVISITE DATETIME,
  HDEBUT DATETIME,
  HFIN DATETIME,
  STATUTVISITE VARCHAR(50),
  TYPEVISITEID INT,
  BOITE VARCHAR(6),
  CASIER VARCHAR(6),
  OBJET VARCHAR(200),
  CASIERID INT,
  PIECE VARCHAR(35),
  NUMERO VARCHAR(20),
  VALIDITE DATETIME,
  PARKING VARCHAR(6),
  IMMATRICULATION VARCHAR(15),
  GUICHETID VARCHAR(14),
  OBSERVATION VARCHAR(200),
  BUREAUID VARCHAR(14),
  LIEU VARCHAR(50),
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
  ORIGINEVISITE		INT,
  NBBDGIMPR		INT,
  NBBDGIMPRTOTAL	INT,
  FREE1  VARCHAR(50),
  FREE2  VARCHAR(50),
  FREE3  VARCHAR(50),
  FREE4  VARCHAR(50),
  FREE5  VARCHAR(50),
  FREE6  VARCHAR(50),
  FREE7  VARCHAR(50),
  FREE8  VARCHAR(50),
  FREE9  VARCHAR(50),
  FREE10 VARCHAR(50),
  ETATVISITE VARCHAR(1));
GO

-- TABLE VISITES_EXT
CREATE TABLE VISITES_EXT (
  VISITES_EXTID	VARCHAR(14),
  FREE1		VARCHAR(50),
  FREE2		VARCHAR(50),
  FREE3		VARCHAR(50),
  FREE4		VARCHAR(50),
  FREE5		VARCHAR(50),
  FREE6		VARCHAR(50),
  FREE7		VARCHAR(50),
  FREE8		VARCHAR(50),
  FREE9		VARCHAR(50),
  FREE10	VARCHAR(50),
  MARCHEID	VARCHAR(14)
);
GO

-- TABLE VISITES_EXT_L
CREATE TABLE VISITES_EXT_L (
  VISITEID_ANCIEN	VARCHAR(14),
  VISITEID_NOUVEAU 	VARCHAR(14)
);
GO

-- VISITES_EXT_ZO
CREATE TABLE VISITES_EXT_ZO (
  VISITEID	VARCHAR(14),
  ZONEID 	VARCHAR(14)
);
GO

--  Table VSERVICE
CREATE TABLE VSERVICE (
  VSERVICEID INT NOT NULL,
  LIBELLE VARCHAR(40),
  DATEMAJ DATETIME,
  DATECREATION DATETIME,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_VSERVICEID PRIMARY KEY (VSERVICEID));
GO

--  Table WEBPLANNING
CREATE TABLE WEBPLANNING (
  DATEBEGIN DATETIME NOT NULL,
  DATEEND DATETIME NOT NULL,
  IMAGEPATH VARCHAR(80),
PRIMARY KEY (DATEBEGIN, DATEEND));
GO

-- TABLE ZONE
CREATE TABLE ZONE(
  ZONEID           VARCHAR(14) NOT NULL,
  ZONENOM          VARCHAR(20),
  ZONERESPONSABLE  VARCHAR(30),
  DATEMAJ          DATETIME,
  DATECREATION     DATETIME,
  DATESYNCHRO      DATETIME);
GO

CREATE TABLE VISITE_CONTROLE (
 VISITEID VARCHAR(14),
 NUMEROVISITE INT,
 RESIDANTID VARCHAR(14),
 DATEVISITE DATETIME
);
GO

CREATE TABLE TRACE_ACTION (
  TRACE_ACTIONID VARCHAR(14) NOT NULL,
  USERID VARCHAR(14),
  NOMPRENOMUSER VARCHAR(70),
  SITEID VARCHAR(14),
  SITE VARCHAR(35),
  ACTION VARCHAR(50),
  LIEU VARCHAR(50),
  DETAILS VARCHAR(1000),
  GENERIQUEID VARCHAR(14),
  GENERIQUETABLE VARCHAR(50),
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME
);
GO

CREATE TABLE GSVALIDATION_LOG
(
GSVALIDATION_LOGID	VARCHAR(14)	NOT NULL,
CODERESERVATION	VARCHAR(14),
REFRESERVATION	VARCHAR(15),
LIBELLESALLE	VARCHAR(70),
DATEDEBUT	DATETIME,
DATEFIN	DATETIME,
STATUT_OLD VARCHAR(35),
STATUT VARCHAR(35),
VALIDEUR VARCHAR(70),
DATECREATION	DATETIME,
DATEMAJ	DATETIME
);
GO

-- Table ESVISITES_LOG
CREATE TABLE ESVISITES_LOG (
  ESVISITES_LOGID VARCHAR(14) NOT NULL,
  QUIID VARCHAR(14),
  QUITYPE VARCHAR(40),
  NOMPRENOM VARCHAR(70),
  SOCIETE  VARCHAR(70),
  NUMBADGE VARCHAR(200),
  SENS     VARCHAR(50),
  ETAT     VARCHAR(50),
  DETAILS  VARCHAR(200),
  PASSAGE DATETIME,
  TYPEINSERT VARCHAR(14),
  REMOTEDATE VARCHAR(20),
  SITEID VARCHAR(14),
  GUICHETID VARCHAR(14),
  POSTE     VARCHAR(50),
  TYPELECTEUR VARCHAR(40),
  ZRR_CODE VARCHAR(25),
  ZRR_LIB VARCHAR(255),
  ZRR_LS VARCHAR(3),
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO	 DATETIME
);
GO

CREATE TABLE dbo.XANNEXE(
	XANNEXEID VARCHAR(14) PRIMARY KEY,
	XANNEXE_TYPEID INT DEFAULT ('0'),
	ORIGINEID VARCHAR(14),
	ORIGINE VARCHAR(50),
	OFICHIERID INT,
	STATUTID INT DEFAULT ((0)),
	DATEFIN DATETIME,
	FREE01 VARCHAR(50),
	FREE02 VARCHAR(50),
	FREE03 VARCHAR(50),
	FREE04 VARCHAR(50),
	FREE05 VARCHAR(50),
	FREE06 VARCHAR(50),
	FREE07 VARCHAR(50),
	FREE08 VARCHAR(50),
	FREE09 VARCHAR(50),
	FREEDATE01 DATETIME,
	FREEDATE02 DATETIME,
	INFORMATION_TYPEID INT,
	REFID VARCHAR(14),
	ETAT INT DEFAULT ((1)),
	DATERETOUR DATETIME,
	DATECREATION DATETIME NOT NULL,
	DATEMAJ DATETIME NOT NULL,
	DATESYNCHRO DATETIME,
	SITEID VARCHAR(14)
);
GO

create table ZCL35_LECTEUR(
	ZCL35_LECTEURID int primary key,
	IP varchar(15),
	PORT int not null,
	MDP varchar(20),
	STATUT int,
	SITEID varchar(14),
	DATEMAJ datetime,
	DATECREATION datetime
);
GO

create table ZCL35_DUMP(
	DUMPID int primary key,
	NUMDOIGT INT,
	NOM varchar(35),
	PRENOM varchar(35),
	INTERLOCUTEURID varchar(14),
	STATUT INT,
	DATEMAJ datetime,
	DATECREATION datetime
);
GO

CREATE TABLE dbo.LOGWIFI (
  LOGWIFIID INTEGER NOT NULL IDENTITY,
  VISITEID VARCHAR(15),
  SITEID VARCHAR(15),
  WIFI_LOGIN VARCHAR(50),
  WIFI_PWD VARCHAR(50),
  WIFI_ETAT VARCHAR(50),
  DATECREATION DATETIME,
  DATEMAJ DATETIME,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_LOGWIFIID PRIMARY KEY (LOGWIFIID));
GO

----------------------------------------------------------------------------------
--       ZCL01                                                                  --
----------------------------------------------------------------------------------
-- TABLE PROFILESMV
CREATE TABLE PROFILESMV (
  PROFILESMVID VARCHAR(14) NOT NULL,
  CLASSID INT,
  CLASSNAME VARCHAR(24),
  ZHGLEC1 VARCHAR(2),
  ZHGLEC2 VARCHAR(2),
  ZHGLEC3 VARCHAR(2),
  ZHGLEC4 VARCHAR(2),
  ZHGLEC5 VARCHAR(2),
  ZHGLEC6 VARCHAR(2),
  ZHGLEC7 VARCHAR(2),
  ZHGLEC8 VARCHAR(2),
  NUMLEC1 VARCHAR(8),
  NUMLEC2 VARCHAR(8),
  ZH1     VARCHAR(2),
  ZH2     VARCHAR(2),
  ACTLEC1 VARCHAR(4),
  ACTLEC2 VARCHAR(4),
  ACTGRP1 VARCHAR(4),
  LIBELLE VARCHAR(200),
  IFAMILLE VARCHAR(24),
  IFAMILLEID VARCHAR(24),
  ISERVICE VARCHAR(24),
  SERVICE VARCHAR(35),
  SERVICEID VARCHAR(14),
  IFAMILLE2 VARCHAR(24),
  IFAMILLEID2 VARCHAR(24),
  CLASSID2 INT,
  CLASSNAME2 VARCHAR(24),
  ZHGLEC12 VARCHAR(2),
  ZHGLEC22 VARCHAR(2),
  ZHGLEC32 VARCHAR(2),
  ZHGLEC42 VARCHAR(2),
  ZHGLEC52 VARCHAR(2),
  ZHGLEC62 VARCHAR(2),
  ZHGLEC72 VARCHAR(2),
  ZHGLEC82 VARCHAR(2),
  NUMLEC12 VARCHAR(8),
  NUMLEC22 VARCHAR(8),
  ZH12     VARCHAR(2),
  ZH22     VARCHAR(2),
  ACTLEC12 VARCHAR(4),
  ACTLEC22 VARCHAR(4),
  ACTGRP12 VARCHAR(4),
  IFAMILLE3 VARCHAR(24),
  IFAMILLEID3 VARCHAR(24),
  CLASSID3 INT,
  CLASSNAME3 VARCHAR(24),
  ZHGLEC13 VARCHAR(2),
  ZHGLEC23 VARCHAR(2),
  ZHGLEC33 VARCHAR(2),
  ZHGLEC43 VARCHAR(2),
  ZHGLEC53 VARCHAR(2),
  ZHGLEC63 VARCHAR(2),
  ZHGLEC73 VARCHAR(2),
  ZHGLEC83 VARCHAR(2),
  NUMLEC13 VARCHAR(8),
  NUMLEC23 VARCHAR(8),
  ZH13     VARCHAR(2),
  ZH23     VARCHAR(2),
  ACTLEC13 VARCHAR(4),
  ACTLEC23 VARCHAR(4),
  ACTGRP13 VARCHAR(4),
  IFAMILLE4 VARCHAR(24),
  IFAMILLEID4 VARCHAR(24),
  CLASSID4 INT,
  CLASSNAME4 VARCHAR(24),
  ZHGLEC14 VARCHAR(2),
  ZHGLEC24 VARCHAR(2),
  ZHGLEC34 VARCHAR(2),
  ZHGLEC44 VARCHAR(2),
  ZHGLEC54 VARCHAR(2),
  ZHGLEC64 VARCHAR(2),
  ZHGLEC74 VARCHAR(2),
  ZHGLEC84 VARCHAR(2),
  NUMLEC14 VARCHAR(8),
  NUMLEC24 VARCHAR(8),
  ZH14     VARCHAR(2),
  ZH24     VARCHAR(2),
  ACTLEC14 VARCHAR(4),
  ACTLEC24 VARCHAR(4),
  ACTGRP14 VARCHAR(4),
  IFAMILLE5 VARCHAR(24),
  IFAMILLEID5 VARCHAR(24),
  CLASSID5 INT,
  CLASSNAME5 VARCHAR(24),
  ZHGLEC15 VARCHAR(2),
  ZHGLEC25 VARCHAR(2),
  ZHGLEC35 VARCHAR(2),
  ZHGLEC45 VARCHAR(2),
  ZHGLEC55 VARCHAR(2),
  ZHGLEC65 VARCHAR(2),
  ZHGLEC75 VARCHAR(2),
  ZHGLEC85 VARCHAR(2),
  NUMLEC15 VARCHAR(8),
  NUMLEC25 VARCHAR(8),
  ZH15     VARCHAR(2),
  ZH25     VARCHAR(2),
  ACTLEC15 VARCHAR(4),
  ACTLEC25 VARCHAR(4),
  ACTGRP15 VARCHAR(4),
  IFAMILLE6 VARCHAR(24),
  IFAMILLEID6 VARCHAR(24),
  CLASSID6 INT,
  CLASSNAME6 VARCHAR(24),
  ZHGLEC16 VARCHAR(2),
  ZHGLEC26 VARCHAR(2),
  ZHGLEC36 VARCHAR(2),
  ZHGLEC46 VARCHAR(2),
  ZHGLEC56 VARCHAR(2),
  ZHGLEC66 VARCHAR(2),
  ZHGLEC76 VARCHAR(2),
  ZHGLEC86 VARCHAR(2),
  NUMLEC16 VARCHAR(8),
  NUMLEC26 VARCHAR(8),
  ZH16     VARCHAR(2),
  ZH26     VARCHAR(2),
  ACTLEC16 VARCHAR(4),
  ACTLEC26 VARCHAR(4),
  ACTGRP16 VARCHAR(4),
  IFAMILLE7 VARCHAR(24),
  IFAMILLEID7 VARCHAR(24),
  CLASSID7 INT,
  CLASSNAME7 VARCHAR(24),
  ZHGLEC17 VARCHAR(2),
  ZHGLEC27 VARCHAR(2),
  ZHGLEC37 VARCHAR(2),
  ZHGLEC47 VARCHAR(2),
  ZHGLEC57 VARCHAR(2),
  ZHGLEC67 VARCHAR(2),
  ZHGLEC77 VARCHAR(2),
  ZHGLEC87 VARCHAR(2),
  NUMLEC17 VARCHAR(8),
  NUMLEC27 VARCHAR(8),
  ZH17     VARCHAR(2),
  ZH27     VARCHAR(2),
  ACTLEC17 VARCHAR(4),
  ACTLEC27 VARCHAR(4),
  ACTGRP17 VARCHAR(4),
  IFAMILLE8 VARCHAR(24),
  IFAMILLEID8 VARCHAR(24),
  CLASSID8 INT,
  CLASSNAME8 VARCHAR(24),
  ZHGLEC18 VARCHAR(2),
  ZHGLEC28 VARCHAR(2),
  ZHGLEC38 VARCHAR(2),
  ZHGLEC48 VARCHAR(2),
  ZHGLEC58 VARCHAR(2),
  ZHGLEC68 VARCHAR(2),
  ZHGLEC78 VARCHAR(2),
  ZHGLEC88 VARCHAR(2),
  NUMLEC18 VARCHAR(8),
  NUMLEC28 VARCHAR(8),
  ZH18     VARCHAR(2),
  ZH28     VARCHAR(2),
  ACTLEC18 VARCHAR(4),
  ACTLEC28 VARCHAR(4),
  ACTGRP18 VARCHAR(4),
  IFAMILLE9 VARCHAR(24),
  IFAMILLEID9 VARCHAR(24),
  CLASSID9 INT,
  CLASSNAME9 VARCHAR(24),
  ZHGLEC19 VARCHAR(2),
  ZHGLEC29 VARCHAR(2),
  ZHGLEC39 VARCHAR(2),
  ZHGLEC49 VARCHAR(2),
  ZHGLEC59 VARCHAR(2),
  ZHGLEC69 VARCHAR(2),
  ZHGLEC79 VARCHAR(2),
  ZHGLEC89 VARCHAR(2),
  NUMLEC19 VARCHAR(8),
  NUMLEC29 VARCHAR(8),
  ZH19     VARCHAR(2),
  ZH29     VARCHAR(2),
  ACTLEC19 VARCHAR(4),
  ACTLEC29 VARCHAR(4),
  ACTGRP19 VARCHAR(4),
  IFAMILLE10 VARCHAR(24),
  IFAMILLEID10 VARCHAR(24),
  CLASSID10 INT,
  CLASSNAME10 VARCHAR(24),
  ZHGLEC110 VARCHAR(2),
  ZHGLEC210 VARCHAR(2),
  ZHGLEC310 VARCHAR(2),
  ZHGLEC410 VARCHAR(2),
  ZHGLEC510 VARCHAR(2),
  ZHGLEC610 VARCHAR(2),
  ZHGLEC710 VARCHAR(2),
  ZHGLEC810 VARCHAR(2),
  NUMLEC110 VARCHAR(8),
  NUMLEC210 VARCHAR(8),
  ZH110     VARCHAR(2),
  ZH210     VARCHAR(2),
  ACTLEC110 VARCHAR(4),
  ACTLEC210 VARCHAR(4),
  ACTGRP110 VARCHAR(4),
  IFAMILLE11 VARCHAR(24),
  IFAMILLEID11 VARCHAR(24),
  CLASSID11 INT,
  CLASSNAME11 VARCHAR(24),
  ZHGLEC111 VARCHAR(2),
  ZHGLEC211 VARCHAR(2),
  ZHGLEC311 VARCHAR(2),
  ZHGLEC411 VARCHAR(2),
  ZHGLEC511 VARCHAR(2),
  ZHGLEC611 VARCHAR(2),
  ZHGLEC711 VARCHAR(2),
  ZHGLEC811 VARCHAR(2),
  NUMLEC111 VARCHAR(8),
  NUMLEC211 VARCHAR(8),
  ZH111     VARCHAR(2),
  ZH211     VARCHAR(2),
  ACTLEC111 VARCHAR(4),
  ACTLEC211 VARCHAR(4),
  ACTGRP111 VARCHAR(4),
  IFAMILLE12 VARCHAR(24),
  IFAMILLEID12 VARCHAR(24),
  CLASSID12 INT,
  CLASSNAME12 VARCHAR(24),
  ZHGLEC112 VARCHAR(2),
  ZHGLEC212 VARCHAR(2),
  ZHGLEC312 VARCHAR(2),
  ZHGLEC412 VARCHAR(2),
  ZHGLEC512 VARCHAR(2),
  ZHGLEC612 VARCHAR(2),
  ZHGLEC712 VARCHAR(2),
  ZHGLEC812 VARCHAR(2),
  NUMLEC112 VARCHAR(8),
  NUMLEC212 VARCHAR(8),
  ZH112     VARCHAR(2),
  ZH212     VARCHAR(2),
  ACTLEC112 VARCHAR(4),
  ACTLEC212 VARCHAR(4),
  ACTGRP112 VARCHAR(4),
  IFAMILLE13 VARCHAR(24),
  IFAMILLEID13 VARCHAR(24),
  CLASSID13 INT,
  CLASSNAME13 VARCHAR(24),
  ZHGLEC113 VARCHAR(2),
  ZHGLEC213 VARCHAR(2),
  ZHGLEC313 VARCHAR(2),
  ZHGLEC413 VARCHAR(2),
  ZHGLEC513 VARCHAR(2),
  ZHGLEC613 VARCHAR(2),
  ZHGLEC713 VARCHAR(2),
  ZHGLEC813 VARCHAR(2),
  NUMLEC113 VARCHAR(8),
  NUMLEC213 VARCHAR(8),
  ZH113     VARCHAR(2),
  ZH213     VARCHAR(2),
  ACTLEC113 VARCHAR(4),
  ACTLEC213 VARCHAR(4),
  ACTGRP113 VARCHAR(4),
  IFAMILLE14 VARCHAR(24),
  IFAMILLEID14 VARCHAR(24),
  CLASSID14 INT,
  CLASSNAME14 VARCHAR(24),
  ZHGLEC114 VARCHAR(2),
  ZHGLEC214 VARCHAR(2),
  ZHGLEC314 VARCHAR(2),
  ZHGLEC414 VARCHAR(2),
  ZHGLEC514 VARCHAR(2),
  ZHGLEC614 VARCHAR(2),
  ZHGLEC714 VARCHAR(2),
  ZHGLEC814 VARCHAR(2),
  NUMLEC114 VARCHAR(8),
  NUMLEC214 VARCHAR(8),
  ZH114     VARCHAR(2),
  ZH214     VARCHAR(2),
  ACTLEC114 VARCHAR(4),
  ACTLEC214 VARCHAR(4),
  ACTGRP114 VARCHAR(4),
  IFAMILLE15 VARCHAR(24),
  IFAMILLEID15 VARCHAR(24),
  CLASSID15 INT,
  CLASSNAME15 VARCHAR(24),
  ZHGLEC115 VARCHAR(2),
  ZHGLEC215 VARCHAR(2),
  ZHGLEC315 VARCHAR(2),
  ZHGLEC415 VARCHAR(2),
  ZHGLEC515 VARCHAR(2),
  ZHGLEC615 VARCHAR(2),
  ZHGLEC715 VARCHAR(2),
  ZHGLEC815 VARCHAR(2),
  NUMLEC115 VARCHAR(8),
  NUMLEC215 VARCHAR(8),
  ZH115     VARCHAR(2),
  ZH215     VARCHAR(2),
  ACTLEC115 VARCHAR(4),
  ACTLEC215 VARCHAR(4),
  ACTGRP115 VARCHAR(4),
  IFAMILLE16 VARCHAR(24),
  IFAMILLEID16 VARCHAR(24),
  CLASSID16 INT,
  CLASSNAME16 VARCHAR(24),
  ZHGLEC116 VARCHAR(2),
  ZHGLEC216 VARCHAR(2),
  ZHGLEC316 VARCHAR(2),
  ZHGLEC416 VARCHAR(2),
  ZHGLEC516 VARCHAR(2),
  ZHGLEC616 VARCHAR(2),
  ZHGLEC716 VARCHAR(2),
  ZHGLEC816 VARCHAR(2),
  NUMLEC116 VARCHAR(8),
  NUMLEC216 VARCHAR(8),
  ZH116     VARCHAR(2),
  ZH216     VARCHAR(2),
  ACTLEC116 VARCHAR(4),
  ACTLEC216 VARCHAR(4),
  ACTGRP116 VARCHAR(4),
  DEFAUT VARCHAR(1),
  NSMI INTEGER,
  DATECREATION DATETIME,
  DATEMAJ DATETIME,
  DATESYNCHRO DATETIME,
  CONSTRAINT PK_PROFILESMVID PRIMARY KEY (PROFILESMVID)
  );
GO
-- TABLE ZCL01_FAMILLE
CREATE TABLE ZCL01_FAMILLE (
  FAMID INT NOT NULL,
  LIBELLE VARCHAR(24),
  NSMI INTEGER
);
GO
-- TABLE ZCL01_CLASS_ACC
CREATE TABLE ZCL01_CLASS_ACC (
  CLASS_ACCID INT NOT NULL,
  LIBELLE VARCHAR(24),
  NSMI INTEGER
);
GO
-- TABLE ZCL01_ZH
CREATE TABLE ZCL01_ZH (
  ZHID INT NOT NULL,
  LIBELLE VARCHAR(24),
  NSMI INTEGER
);
GO
-- TABLE ZCL01_SERVICE
CREATE TABLE ZCL01_SERVICE (
  SERVICEID INT NOT NULL,
  LIBELLE VARCHAR(24),
  NSMI INTEGER
);
GO
-- TABLE ZCL01_ACTION
CREATE TABLE ZCL01_ACTION (
  ACTIONID INT NOT NULL,
  LIBELLE VARCHAR(30),
  NSMI INTEGER
);
GO
-- TABLE ZCL01_LECTEURS
CREATE TABLE ZCL01_LECTEURS (
  LE_CIRCUI VARCHAR(8) NOT NULL,
  LE_DESCRI VARCHAR(50),
  NSMI INTEGER
);
GO
-- TABLE ZCL01_VISITE
CREATE TABLE ZCL01_VISITE(
  VISITEID         VARCHAR (15),
  INTERLOCUTEURID  VARCHAR (15),
  BGA_ETAT         VARCHAR (1),
  BGA_DATE         DATETIME,
  BGA_NOM          VARCHAR (40),
  BS_ETAT          VARCHAR (1),
  BS_DATE          DATETIME,
  BS_NOM           VARCHAR (40),
  SDT_ETAT         VARCHAR (1),
  SDT_DATE         DATETIME,
  SDT_NOM          VARCHAR (40),
  FREQUENCE        VARCHAR (15),
  BADGE            VARCHAR (200),
  CLASSIFICATION   VARCHAR (4),
  ACCES            VARCHAR (4),
  ST_TYPE          VARCHAR (6),
  ST_NUMERO        VARCHAR (20),
  ST_FORMALITE     VARCHAR (50),
  DATEMAJ          DATETIME,
  DATECREATION     DATETIME,
  DATESYNCHRO      DATETIME,
  ZONE             VARCHAR (60));
GO

-- TABLE ZCL01_VISITE_L
CREATE TABLE ZCL01_VISITE_L (
  VISITEID_ANCIEN  VARCHAR(14),
  VISITEID_NOUVEAU VARCHAR(14));
GO

-- TABLE ZCL01_BA
CREATE TABLE ZCL01_BA (
  NUMBDG  VARCHAR (200)  NOT NULL,
  CODSIT  VARCHAR (3),
  CODIND  VARCHAR (20),
  TYPSAI  VARCHAR (1));
GO

-- TABLE ZCL01_US
CREATE TABLE ZCL01_US (
  NUMBDG     VARCHAR (14)  NOT NULL,
  NOM        VARCHAR (24),
  PRENOM     VARCHAR (24),
  TYPEV      VARCHAR (1),
  MATRIC     VARCHAR (15),
  SERVIC     VARCHAR (24),
  NOMSTE     VARCHAR (15),
  CH_EXPL01  VARCHAR (26),
  CH_EXPL02  VARCHAR (26),
  CH_EXPL03  VARCHAR (26),
  CH_EXPL04  VARCHAR (26),
  CH_EXPL05  VARCHAR (26),
  CH_EXPL06  VARCHAR (26),
  CH_EXPL07  VARCHAR (26),
  CH_EXPL08  VARCHAR (26),
  CH_EXPL09  VARCHAR (26),
  CH_EXPL10  VARCHAR (26),
  CH_EXPL11  VARCHAR (26),
  CH_EXPL12  VARCHAR (26),
  CH_EXPL13  VARCHAR (26),
  CH_EXPL14  VARCHAR (26),
  CH_EXPL15  VARCHAR (26),
  CH_EXPL16  VARCHAR (26),
  CH_EXPL17  VARCHAR (26),
  CH_EXPL18  VARCHAR (26),
  CH_EXPL19  VARCHAR (26),
  CH_EXPL20  VARCHAR (26),
  CONSTRAINT PK_NUMBDG PRIMARY KEY (NUMBDG) );
GO

-- TABLE ZCL01_EMISSION
CREATE TABLE ZCL01_EMISSION (
  EMI_COD    VARCHAR (14) NOT NULL,
  EMI_DEST1  VARCHAR (100),
  EMI_DEST2  VARCHAR (100),
  EMI_DEST3  VARCHAR (100),
  EMI_DEST4  VARCHAR (100),
  EMI_DEST5  VARCHAR (100),
  EMI_OBJET  VARCHAR (100),
  EMI_TEXTE  VARCHAR (500));
GO

-- TABLE ZCL01_VISITEZO
CREATE TABLE ZCL01_VISITEZO (
   VISITEID VARCHAR(14),
   ZONEID   VARCHAR(14)
);
GO

-- TABLE ZCL01_VISITERE
CREATE TABLE ZCL01_VISITERE (
   EXTERNALID VARCHAR(14),
   RESIDANTID VARCHAR(14)
);
GO
CREATE TABLE ZCL05_GRP
(
  LIBELLE VARCHAR(50),
  DATECREATION DATETIME
);
GO

CREATE TABLE ZCL05_BADGE
(
  NUMBADGE  VARCHAR(50),
  CODEBADGE VARCHAR(50),
  DATECREATION DATETIME
);
GO

CREATE TABLE ZCL05_ASCENSEUR
(
  LIBELLE VARCHAR(50),
  DATECREATION DATETIME
);
GO

-- TABLE VISITES_RESIDANTS
CREATE TABLE VISITES_RESIDANTS (
  PASSAGERID    VARCHAR (14)  NOT NULL,
  RESIDANTID    VARCHAR (14),
  NOMPRENOM     VARCHAR (70),
  CODEACCES     VARCHAR (34),
  ENTREE        DATETIME,
  SORTIE        DATETIME,
  CIRCULATION   VARCHAR (20),
  OBSERVATION   VARCHAR (200),
  TYPEENTREE    INT,
  GUICHET_E     VARCHAR (30),
  GUICHET_S     VARCHAR (30),
  SITEID  		VARCHAR(14),
  DATECREATION  DATETIME          NOT NULL,
  DATEMAJ       DATETIME          NOT NULL,
  DATESYNCHRO   DATETIME
);
GO

--
----------------------------------------------------------------------------------
--       SERVEUR NATIONAL                                                       --
----------------------------------------------------------------------------------
-- TABLE SN_SITES
CREATE TABLE SN_SITES (
  SITEID               VARCHAR (14)  NOT NULL,
  ADRESSEIP            VARCHAR (14)  NOT NULL,
  NOM                  VARCHAR (35),
  LOGIN                VARCHAR (35)  NOT NULL,
  PASSWORD             VARCHAR (35)  NOT NULL,
  NUMERO               VARCHAR (35),
  DATEDERNIERESYNCHRO  DATETIME          NOT NULL,
  SERVERNAME_BL VARCHAR(50),
  USERNAME_BL VARCHAR(50),
  PASSWORD_BL VARCHAR(50),
  SERVERNAME_BTL VARCHAR(50),
  USERNAME_BTL VARCHAR(50),
  PASSWORD_BTL VARCHAR(50),
  ETAT_BATCH VARCHAR(14)
);
GO

-- TABLE SN_SITE_ACTION
CREATE TABLE SN_SITE_ACTION (
  SITEID   VARCHAR (14)  NOT NULL,
  ACTION   VARCHAR (50)  NOT NULL,
  DATEMAJ  DATETIME,
  NOM_TABLE  VARCHAR(50),
  ID		   VARCHAR(50));
GO

-- TABLE SN_TRACES
CREATE TABLE SN_TRACES (
  TRACEID             VARCHAR (14)  NOT NULL,
  SITEID              VARCHAR (14)  NOT NULL,
  DATEECHECCONNEXION  DATETIME          NOT NULL,
  ADRESSE_IP          VARCHAR (50),
  NOM_MACHINE         VARCHAR (50),
  LOGIN               VARCHAR (50),
  PASSWORD            VARCHAR (50),
  NUMERO              VARCHAR (50),
  TYPE_TRACE          VARCHAR (50),
  CODE                INT);
GO

-- TABLE SN_TRANSFERT_IMMEDIAT
CREATE TABLE SN_TRANSFERT_IMMEDIAT (
  SITEID  VARCHAR (14),
  ACTION  VARCHAR (14),
  HMAJ    DATETIME,
  NOM_TABLE  VARCHAR(50),
  ID		   VARCHAR(50));
GO

-- TABLE SN_TYPE_ACTION
CREATE TABLE SN_TYPE_ACTION (
  ACTIONID  VARCHAR (14)  NOT NULL,
  ACTION    VARCHAR (50));
GO

-- TABLE SN_TYPE_TRACE
CREATE TABLE SN_TYPE_TRACE (
  CODE     INT,
  LIBELLE  VARCHAR (50));
GO

-- TABLE SN_DOUBLONS
CREATE TABLE SN_DOUBLONS (
  DOUBLONID   VARCHAR (14),
  REMPLACEID  VARCHAR (14),
  NUMTABLE INT);
GO


----------------------Table des badges--------------------

CREATE TABLE BADGEIMPRIME
(
   NOUVEAUNUMERO	VARCHAR(14),
   STATUT		VARCHAR(20),
   DATEMAJ		DATETIME
);
GO

-----------------------------------------------------------
----------------------Control d'acces AEOS--------------------
CREATE TABLE ZCL07_BADGETYPE
(
 ZCL07_BADGETYPEID VARCHAR(14),
 NAME VARCHAR(25),
 CLASS INTEGER,
 SERIE VARCHAR(10),
 CUSTOMERCODE VARCHAR(10),
 DEBUT INTEGER,
 FIN INTEGER
);
GO

-----------------------------------------------------------

----------------------E/S réelle chez le résidant--------------------
CREATE TABLE VISITES_ES
(
VISITEID	VARCHAR(14)	NOT NULL,
DATEHEUREENTREE	DATETIME,
DATEHEURESORTIE	DATETIME,
DATEHEUREENTREEPARKING  DATETIME,
DATEHEURESORTIEPARKING  DATETIME,
STATUTPARKING	VARCHAR(20),
PARKING	VARCHAR(35)
);
GO

CREATE TABLE TQ_COMMUNE
(
VALIDATION_RESID 			VARCHAR(10),
NOM_IMG_DEF				VARCHAR(100),
HAUTEUR					INTEGER,
LARGEUR					INTEGER,
PERMIS_TRAVAIL				INTEGER,
PARAM_ALTAIR				INTEGER,
TITRE					VARCHAR(50),
BDG_FREE1  				VARCHAR(20),
BDG_FREE2  				VARCHAR(20),
BDG_FREE3  				VARCHAR(20),
BDG_FREE4  				VARCHAR(20),
BDG_FREE5  				VARCHAR(20),
BDG_FREE6  				VARCHAR(20),
BDG_FREE7  				VARCHAR(20),
BDG_FREE8  				VARCHAR(20),
BDG_FREE9  				VARCHAR(20),
PLANS_FREE1  				VARCHAR(20),
PLANS_FREE2  				VARCHAR(20),
PLANS_FREE3  				VARCHAR(20),
PLANS_FREE4  				VARCHAR(20),
PLANS_FREE5  				VARCHAR(20),
PLANS_FREE6  				VARCHAR(20),
PLANS_FREE7  				VARCHAR(20),
PLANS_FREE8  				VARCHAR(20),
PLANS_FREE9  				VARCHAR(20),
BDG_RESID_FREE1  			VARCHAR(20),
BDG_RESID_FREE2  			VARCHAR(20),
BDG_RESID_FREE3  			VARCHAR(20),
BDG_RESID_FREE4  			VARCHAR(20),
BDG_RESID_FREE5  			VARCHAR(20),
BDG_RESID_FREE6  			VARCHAR(20),
BDG_RESID_FREE7  			VARCHAR(20),
BDG_RESID_FREE8  			VARCHAR(20),
BDG_RESID_FREE9  			VARCHAR(20),
IMPORTATION 				INTEGER,
CRYPTAGE				VARCHAR(1),
MODIF_VISITEUR_PREENREG  		INT,
MODIF_VISITEUR_ENCOURS  		INT,
MODIF_VISITEUR_TERMINE  		INT,
ANNUAIRE 				INT,
ANNUAIRE_URL 				VARCHAR(250),
UTILISATION_OBS_VISITEUR 		INT,
MODIF_OBS_VISITEUR 			INT,
CTLVISI					INT,
CTLVISI_NB				INT,
CTLVISI_QUOI				INT,
CTLVISI_XJ				INT,
CTLVISI_DEPUIS				DATETIME,
CTLVISI_MSG				VARCHAR(200),
CTLVISI_BLC 				INT,
CRTL_LIMITE_DATE_FIN 			INT,
TIMER_SORTIE_VISITEUR 			INT,
EXPIRATIONPWD				INTEGER DEFAULT 0,
JOURSPWD				INTEGER,
CONNEXIONPWD				INTEGER DEFAULT 0,
DECOMPTEPWD				INTEGER DEFAULT 0,
DECOMPTEJOURSPWD			INTEGER,
PRIORITE_INTERDIT			INTEGER,
PARAM_DIVERS                            VARCHAR(4000),
PERIPH_ACQUI_LISTE			INTEGER,
PERIPH_ACQUI_MAJ_INFOS			INTEGER,
TRANCHE_HORAIRE_STATS			VARCHAR(14),
VISITE_SITERESID			INTEGER DEFAULT 0,
URL_TAXI				VARCHAR(200)
);
GO


----------------------------------------------------------
CREATE TABLE TQ_POSTE
(
NOM_POSTE		VARCHAR(50),
CLE_CONNEXION		VARCHAR(50),
NB_CAR_RECHERCHE	INTEGER,
DELAI_RECHERCHE		INTEGER,
SITEID			VARCHAR(14),
SITE			VARCHAR(50),
GUICHETID		VARCHAR(14),
GUICHET 		VARCHAR(50),
BOITE			VARCHAR(50),
RESID_PAR_DEFAUT	VARCHAR(20),
IMPR_BDG		VARCHAR(100),
IMPR_LISTING		VARCHAR(100),
IMPR_PLAN		VARCHAR(100),
PHOTO_SRC_RESID		VARCHAR(100),
PHOTO_DEST_RESID	VARCHAR(100),
PHOTO_SRC_VISIT		VARCHAR(100),
PHOTO_DEST_VISIT	VARCHAR(100),
PHOTO_SRC_PLAN		VARCHAR(100),
PHOTO_DEST_PLAN		VARCHAR(100),
LOGO1			VARCHAR(100),
LOGO2			VARCHAR(100),
LOGO3			VARCHAR(100),
LOGO4			VARCHAR(100),
LOGO5			VARCHAR(100),
FICHIER_IMPORTATION	VARCHAR(10),
SEPARATEUR		VARCHAR(5),
CHAMP1			VARCHAR(20),
CHAMP2			VARCHAR(20),
CHAMP3			VARCHAR(20),
CHAMP4			VARCHAR(20),
CHAMP5			VARCHAR(20),
CHAMP6			VARCHAR(20),
CHAMP7			VARCHAR(20),
CHAMP8			VARCHAR(20),
CHAMP9			VARCHAR(20),
CRITERE_IMPORT_CHAMP	VARCHAR(20),
POS_CHAMP1		INTEGER,
POS_CHAMP2		INTEGER,
POS_CHAMP3		INTEGER,
POS_CHAMP4		INTEGER,
POS_CHAMP5		INTEGER,
POS_CHAMP6		INTEGER,
POS_CHAMP7		INTEGER,
POS_CHAMP8		INTEGER,
POS_CHAMP9		INTEGER,
MAJ_FICHIER		VARCHAR(20),
MAJ_SITE		VARCHAR(50),
MAJ_SOCIETE		VARCHAR(50),
ESVEH_VIS_NOM		INTEGER,
ESVEH_VIS_RESID		INTEGER,
ESVEH_VIS_SOCVIS	INTEGER,
ESVEH_VIS_IMMATR	INTEGER,
ESVEH_VIS_BDG		INTEGER,
ESVEH_RESID_NOM		INTEGER,
ESVEH_RESID_IMMATR	INTEGER,
ESVEH_RESID_BDG		INTEGER,
SORTIE_OBL_ACCUEIL	INTEGER,
TYPE_CONTROL_ACCES		VARCHAR(30),
BLOCAGE_HDEBUT_VISITE		INTEGER,
RESID_CTRL_HORAIRE_MSG		INTEGER,
RESID_CTRL_HORAIRE_VERROU	INTEGER,
RESID_HORAIRE_VERROU		INTEGER,
FERMETURE_FENETRE_APRES_BDG	INTEGER,
HISTORIQUE			INTEGER,
MODIF_CHAMPS_OBS		INTEGER,
MSG_ALERTEXJOUR_AVANTJ		INTEGER,
MSG_CONFIR_ES			INTEGER,
MSG_INFOR_FORMATIONS_PERIMEES	INTEGER,
AFFICHAGE_DATE_SI_STATUT_LONG	INTEGER,
BLOCAGE_SI_FORM_PERIMEE		INTEGER,
SELECT_MODEL_BDG		INTEGER,
SELECT_IMPR_BDG			INTEGER,
ELARGIR_PAR_DEFAUT		INTEGER,
TRACAGE				INTEGER,
FICHIER_TRACE			VARCHAR(50),
ENVOI_BDG_MANUEL  		INTEGER,
ENVOI_BDG_AUTO  		INTEGER,
GENERATION_BDG  		INTEGER,
DEBUT_CODE  			VARCHAR(20),
MILIEU_CHAMP  			VARCHAR(20),
MILIEU_FORMAT  			VARCHAR(20),
FIN_CODE   			VARCHAR(20),
GENERATION_BDG_MAX INTEGER,
MODE_ES_VIS_RES  		VARCHAR(40),
VISITEUR_CTRL_PLUS		VARCHAR(4),
MATRA				VARCHAR(30),
ENVOI_MAIL 			INTEGER,
MODIF_VISITEUR			INTEGER,
CHAMPS_VISITEUR 		VARCHAR(4000),
REPSCAN 			VARCHAR(100),
CHEMIN_EXPORT 			VARCHAR(300),
CREATION_VISITE_PARKING 	INTEGER,
CTRL_RES_PARKING 		INTEGER,
MOUVEMENT_PARKING 		INTEGER,
DUREE_CONSERVATION 		INTEGER,
HEURE_EPURATION 		VARCHAR(10),
ENVOI_MSG_PARKING 		INTEGER,
GENERATION_BDGR			INTEGER,
DEBUT_CODER			VARCHAR(20),
MILIEU_FORMATR			VARCHAR(20),
FIN_CODER			VARCHAR(20),
GENERATION_BDGR_MAX INTEGER,
GENERATION_BDGVEH		INTEGER,
DEBUT_CODEVEH			VARCHAR(20),
MILIEU_FORMATVEH		VARCHAR(20),
FIN_CODEVEH			VARCHAR(20),
GENERATION_BDGVEH_MAX INTEGER,
ESVEH_NUM_BADGE			INTEGER,
ESVEH_VIS_NOM_MODIF		INTEGER,
ESVEH_VIS_RESID_MODIF		INTEGER,
ESVEH_VIS_SOCVIS_MODIF		INTEGER,
ESVEH_VIS_IMMATR_MODIF		INTEGER,
ESVEH_VIS_BDG_MODIF		INTEGER,
ESVEH_MATRICULE			INTEGER,
ESVEH_VIS_MATR			INTEGER,
ESVEH_VIS_MATR_MODIF		INTEGER,
ESVEH_VIS_OBS			INTEGER,
ESVEH_VIS_OBS_MODIF		INTEGER,
MODE_ES_RSDT			INTEGER DEFAULT 0,
GENERATION_BDGEXT		INTEGER,
DEBUT_CODEEXT			VARCHAR(20),
MILIEU_FORMATEXT		VARCHAR(20),
FIN_CODEEXT			VARCHAR(20),
COCHER_PHS			INTEGER DEFAULT 0,
CTRL_ACTIF 			INTEGER DEFAULT 0
);
GO

CREATE TABLE ZCL00 (NUMEROCLIENT VARCHAR(50));
GO


CREATE TABLE TYPEUSER
(
USERID		INT,
LIBELLE		VARCHAR(50),
DATECREATION	DATETIME NOT NULL,
DATEMAJ		DATETIME NOT NULL,
DATESYNCHRO	DATETIME
);
GO

CREATE TABLE DIRECTIONS
(
DIRECTIONID	VARCHAR(14) NOT NULL,
SOCIETEID	VARCHAR(14),
LIBELLE		VARCHAR(35),
DATECREATION	DATETIME NOT NULL,
DATEMAJ		DATETIME NOT NULL,
DATESYNCHRO	DATETIME,
CONSTRAINT PK_DIRECTIONID PRIMARY KEY (DIRECTIONID)
);
GO

CREATE TABLE DROITS (
  RESIDANTID VARCHAR(14) NOT NULL,
  DELEGATIONID VARCHAR(14),
  CREATION VARCHAR(1),
  MODIFICATION VARCHAR(1),
  SUPPRESSION VARCHAR(1),
  APPLI VARCHAR(80),
  DIVERSACCES INT,
  DATECREATION DATETIME  NULL,
  DATEMAJ DATETIME  NULL,
  DATESYNCHRO	 DATETIME,
PRIMARY KEY (RESIDANTID,DELEGATIONID));
GO

CREATE TABLE PROFILS_USERS
(
TYPEUSER	VARCHAR(24),
SITE		VARCHAR(35),
SITEID		VARCHAR(14),
GVACCESS	INT,
TYPEUSERID INTEGER
);
GO

CREATE TABLE ROLE_AUTRES (
USERID INT,
SITE INT,
SOC_RES INT,
DIRECTIONS INT,
PAYS INT,
UTILISATEURS INT,
TYPEUSER	INT,
PROFILUSER INT,
MODIFAFF  INT,
VILLES	INT,
DATECREATION	DATETIME,
DATEMAJ DATETIME,
GRPSITE INT DEFAULT 0
);
GO

CREATE TABLE ROLE_PARAMETRAGES (
USERID INT,
PARAMETRAGES_GENERAUX INT,
PERIPHERIQUES INT,
PRESENTATION INT,
OPTIONS INT,
BADGES INT,
PARAM_ETATS	INT,
CTRL_ACCES INT,
ES_VEHICULE INT,
PARAMETRAGES_CHAMPS INT,
AUTORISATION_ACCES INT,
REGLES INT,
ENVOI_MAIL INT,
PROFIL_ACCUEIL INT,
CHAMPS_VISITEUR VARCHAR(4000),
SECOND_ACCUEIL	INT,
DATECREATION	DATETIME,
DATEMAJ DATETIME
);
GO

CREATE TABLE ROLE_RESTES (
USERID INT,
EXPORT_TABLES INT,
STAT INT,
ETATS INT,
NETTOYAGES INT,
DATECREATION	DATETIME,
DATEMAJ DATETIME
);
GO

CREATE TABLE MAIL
(
   MAILID	VARCHAR(14),
   APP 		VARCHAR(10),
   SITEID	VARCHAR(14),
   SITE		VARCHAR(35),
   USERID 	VARCHAR(50),
   SMTP 	VARCHAR(50),
   FROMADDRESS 	VARCHAR(50),
   TOADDRESS 	VARCHAR(4000),
   CARBONCOPY 	VARCHAR(1000),
   SUJET 	VARCHAR(200),
   BODY 	VARCHAR(MAX),
   STATUT 	INTEGER,
   ETAT 	VARCHAR(4000),
   DATECREATION DATETIME,
   DATEMAJ 	DATETIME,
   QUIID 	VARCHAR(50),
   QUILIB 	VARCHAR(50),
   TABLEID 	VARCHAR(14),
   PJ_NAME	VARCHAR(500),
   PJ_FILE	IMAGE,
   ICALENDAR VARCHAR(4000),
CONSTRAINT PK_MAILID PRIMARY KEY (MAILID)
);
GO

CREATE TABLE ETATAPP (
   ETATID    	VARCHAR(50),
   ETATNOM      VARCHAR(50),
   VISIBLE      INTEGER,
   REQUETE      VARCHAR(50),
   FILTRE       VARCHAR(250),
   APP		VARCHAR(20),
   DATECREATION DATETIME,
   DATEMAJ      DATETIME
);
GO

CREATE TABLE PHOTOS (ID VARCHAR(14),PHOTO IMAGE);
GO

CREATE TABLE ZCL08_REPAS (
REPASID		VARCHAR(14),
REPAS		VARCHAR(10),
NUMEROBADGE	VARCHAR(20) NOT NULL,
DATEPASSAGE	VARCHAR(20),
DATEPASSAGE2	VARCHAR(20) NOT NULL,
VISITEID	VARCHAR(14),
DATEREELLE 	DATETIME
);
GO

CREATE TABLE dbo.LOCALISATION (
	LOCALISATIONID INTEGER PRIMARY KEY,
	LIBELLE VARCHAR(100),
	SITEID VARCHAR(14),
	SALLE_CAGE VARCHAR(100),
	BAIE VARCHAR(100),
	LOCALISATION_TYPE VARCHAR(50),
	CODE VARCHAR(100),
	EMPREINTE VARCHAR(100),
	DATECREATION DATETIME NOT NULL,
	DATEMAJ DATETIME NOT NULL,
	DATESYNCHRO DATETIME
);
GO

CREATE TABLE dbo.CLEFS_LOCALISATION (
	CLEID VARCHAR(14),
	LOCALISATIONID INTEGER
);
GO

CREATE TABLE dbo.PROFIL_CTRL_LOCALISATION (
	PROFIL_CTRLID INTEGER,
	LOCALISATIONID INTEGER
);
GO

CREATE TABLE dbo.VISITES_LOCALISATION (
	VISITEID VARCHAR(14),
	LOCALISATIONID INTEGER
);
GO

CREATE TABLE dbo.SOCIETE_LOCALISATION (
	SOCIETEID VARCHAR(14),
	LOCALISATIONID INTEGER
);
GO

CREATE TABLE dbo.PROFIL_CTRL (
	PROFIL_CTRLID INTEGER PRIMARY KEY,
	PROFIL_CTRL VARCHAR(100),
	PROFILDEFAULT INT DEFAULT 0,
	SITEID VARCHAR(14),
	PROFIL_CTRLID_EXT VARCHAR(50),
	CODE_CLASSE INTEGER NULL,
	ASCENSEUR VARCHAR(50),
	DATECREATION DATETIME NOT NULL,
	DATEMAJ DATETIME NOT NULL,
	DATESYNCHRO DATETIME
);
GO

CREATE TABLE dbo.TYPEDOCUMENT (
	TYPEDOCUMENTID INT PRIMARY KEY,
	LIBELLE VARCHAR(35),
	PORTEEID INT,
	OBLIGATOIRE INT,
	MODIFIABLE INT,
    VALIDITEPARDEFAUT INT,
	CREATCTRL INT,
	IN_PREENREG INTEGER DEFAULT 2,
	DATECREATION DATETIME,
	DATEMAJ DATETIME,
	DATESYNCHRO DATETIME,
	ISMULTISITE INT DEFAULT 1,
	INTER_EFFECT INT DEFAULT 2
);
GO

CREATE TABLE dbo.TYPEVISDOC (
	TYPEDOCUMENTID  INT,
	TYPEVISITEID    INT,
	CONSTRAINT PK_VISDOC PRIMARY KEY (TYPEDOCUMENTID,TYPEVISITEID)
);
GO

CREATE TABLE dbo.REGLES (
	REGLEID INT PRIMARY KEY,
	LIBELLE VARCHAR (50),
	RANGREGLE INT,
	TYPEVISITE INT,
	TYPEACTION INT,
	ACTIONBLOQUANTE INT,
	TYPEREGLE INT,
	FREE1 VARCHAR (35),
	FREE2 INT,
	FREE3 VARCHAR (35),
	FREE4 INT,
	FREE5 INT DEFAULT(0),
	FREE6 INT DEFAULT(0),
	FREE7 VARCHAR(35),
	MESSAGE VARCHAR (100),
	FREE8 VARCHAR (100),
	MESSAGEACC VARCHAR (100),
	SITEID VARCHAR(14),
	PERIODE VARCHAR(35),
	DUREE VARCHAR(35),
	FLAG_TIC INT DEFAULT(0),
	STATUT INT DEFAULT(1),
	NATUREVISITE VARCHAR(14) DEFAULT('-2'),
	BYPASS INT,
	CATEGORIE VARCHAR(30),
	GRPVALIDEURID INT,
	DATECREATION DATETIME,
	DATEMAJ DATETIME,
	DATESYNCHRO DATETIME
);
GO

 CREATE TABLE VISITE_REGLE(
	VISITEID VARCHAR(14) NOT NULL,
	REGLEID INT NOT NULL,
	ARBITRAGE INT,
	ACTIONBLOQUANTE INT,
	RANGREGLE INT,
	MES_RESI VARCHAR(4000),
	MES_VALI VARCHAR(4000),
	MES_ACC VARCHAR(4000),
	CATEGORIE VARCHAR(30),
	DATEMAJ DATETIME NOT NULL,
	DATECREATION DATETIME NOT NULL,
	DATESYNCHRO DATETIME,
	CONSTRAINT PK_VISREGID PRIMARY KEY (VISITEID,REGLEID)
)
GO


CREATE TABLE REGLE_ACTION (
 REGLEID INT NOT NULL,
 ACTIONID INT NOT NULL,
 CONSTRAINT PK_REGLE_ACTION PRIMARY KEY (REGLEID,ACTIONID)
 )
GO

CREATE TABLE dbo.GRPUSER_TYPEDOCUMENT
( GRPUSERID VARCHAR(14) NOT NULL,
  TYPEDOCUMENTID INT NOT NULL,
  CONSTRAINT PK_GRPUSER_TYPDOC PRIMARY KEY (GRPUSERID, TYPEDOCUMENTID))
 GO

 CREATE TABLE dbo.OBJVISITE
( OBJVISITEID INT NOT NULL PRIMARY KEY,
  LIBELLE VARCHAR(100),
  DATECREATION DATETIME,
  DATEMAJ DATETIME,
  DATESYNCHRO DATETIME)
  GO

----------------------------------------------------------------------------------

-- TABLE TEMPORAIRE
CREATE  TABLE #TEMPO_GS
(	FREE1	VARCHAR(100),
	FREE2	VARCHAR(100),
	FREE3	VARCHAR(100),
	FREE4	VARCHAR(100),
	FREE5	VARCHAR(100),
	FREEINT1	INTEGER,
	FREEINT2	INTEGER,
	FREEDATE1	DATETIME,
	FREEDATE2	DATETIME,
	FREEDATE3	DATETIME,
	FREEDATE4	DATETIME
);
GO
-- Création d'une table temporaire
CREATE TABLE #TEMPO_TQ
(	FREE1	VARCHAR(100),
	FREE2	VARCHAR(100),
	FREE3	VARCHAR(100),
	FREE4	VARCHAR(100),
	FREE5	VARCHAR(100),
	FREE6	VARCHAR(100),
	FREE7 	VARCHAR(100),
	FREE8 	VARCHAR(100),
	FREE9	VARCHAR(100),
	FREE10	VARCHAR(100),
	FREE11	VARCHAR(100),
	FREE12	VARCHAR(100),
	FREE13	VARCHAR(100),
	FREE14	VARCHAR(100),
	FREE15	VARCHAR(100),
	FREEINT1	INTEGER,
	FREEINT2	INTEGER,
	FREEDATE1	DATETIME,
	FREEDATE2	DATETIME,
	FREEDATE3	DATETIME,
	FREEDATE4	DATETIME
);
GO
CREATE TABLE #TEMPO_TQ2
(	FREE1	VARCHAR(100),
	FREE2	VARCHAR(100),
	FREE3	VARCHAR(100),
	FREE4	VARCHAR(100),
	FREE5	VARCHAR(100),
	FREE6	VARCHAR(100),
	FREE7 	VARCHAR(100),
	FREE8 	VARCHAR(100),
	FREE9	VARCHAR(100),
	FREE10	VARCHAR(100),
	FREE11	VARCHAR(100),
	FREE12	VARCHAR(100),
	FREE13	VARCHAR(100),
	FREE14	VARCHAR(100),
	FREE15	VARCHAR(100),
	FREEINT1	INTEGER,
	FREEINT2	INTEGER,
	FREEDATE1	DATETIME,
	FREEDATE2	DATETIME,
	FREEDATE3	DATETIME,
	FREEDATE4	DATETIME
);
GO

CREATE TABLE ZCL09_ID (ID INTEGER);
GO
CREATE TABLE ZCL09_PERSONNEID_BDG (PERSONNEID VARCHAR(14),NUMEROBADGE VARCHAR(50));
GO

CREATE TABLE ZCL18_VISITES
(ID	VARCHAR(14),
ACTION	VARCHAR(3),
BADGE	VARCHAR(10),
NOMVIS	VARCHAR(50),
PRENOMVIS	VARCHAR(50),
SOCVIS	VARCHAR(50),
STATUT	VARCHAR(50),
IMMATR	VARCHAR(50),
DEBUT	DATETIME,
FIN	DATETIME,
MATRICULE	VARCHAR(50),
NOMRES	VARCHAR(50),
PRENOMRES	VARCHAR(50),
TELRES	VARCHAR(50),
BUREAU	VARCHAR(50),
SITE	VARCHAR(50),
PROFIL	VARCHAR(50),
GUICHET	VARCHAR(50),
UTILISATEUR	VARCHAR(50),
LECTEUR	VARCHAR(50),
SORTIE_AVALEUSE	INT DEFAULT 0,
ETAT	INT DEFAULT 0);
GO

CREATE TABLE ZCL20_MOUVEMENT
(
ID			VARCHAR(14),
VISITEID		VARCHAR(14),
TYPE_ENREG		VARCHAR(20),
ENTREE_PARKING		DATETIME,
VISITEUR                VARCHAR(70),
VISITEUR_SOCIETE	VARCHAR(70),
RESIDANT		VARCHAR(70),
RESIDANT_TROUVE		VARCHAR(1),
IMMATRICULATION		VARCHAR(15),
SORTIE_PARKING		DATETIME,
REF_PARKING		VARCHAR(20),
POSTE_SAISIE		VARCHAR(20),
USER_TQ			VARCHAR(35),
OBSERVATION		VARCHAR(200),
SITEID			VARCHAR(35),
SITE			VARCHAR(35),
DATECREATION		DATETIME
);
GO

CREATE TABLE ZCL22_COMPTES (
  NAME          VARCHAR(20) NOT NULL,
  PASSWORD      VARCHAR(20),
  ETAT          INTEGER,
  DATECREATION  DATETIME,
  DATEMAJ       DATETIME,
CONSTRAINT PK_ZCL22_COMPTES PRIMARY KEY (NAME));
GO

CREATE TABLE ZCL24_BADGE
(
  BADGEID VARCHAR(50),
  NUMBADGE  VARCHAR(50),
  DATECREATION DATETIME
);
GO

CREATE TABLE ZCL25_VISITES
(
  VISITEID VARCHAR(14),
  STATUTID INT
);
GO

CREATE TABLE ZCL27_SITE
(
	ID_SITE INT IDENTITY NOT NULL PRIMARY KEY,
	SITEID VARCHAR(14),
	SERVICEURL VARCHAR(300),
	DATECREATION DATETIME,
	DATEMAJ DATETIME
);
GO

CREATE TABLE ZCL27_BADGE
(
	ID_BADGE INT IDENTITY NOT NULL PRIMARY KEY,
	B_CARD_NO VARCHAR(20),
	B_ASSIGNED INT,
	CARDQUALITY VARCHAR(14),
	SITEID VARCHAR(14),
	DATECREATION DATETIME,
	DATEMAJ DATETIME
);
GO

CREATE TABLE ZCL27_WORKGROUP
(
	ID_WORKGROUP INT IDENTITY NOT NULL PRIMARY KEY,
	WG_NAME VARCHAR(40),
	WG_ID VARCHAR(20),
	SITEID VARCHAR(14),
	DATECREATION DATETIME,
	DATEMAJ DATETIME
);
GO

CREATE TABLE ZCL27_EMPLOYEE
(
	ID_EMPLOYEE INT IDENTITY NOT NULL PRIMARY KEY,
	SITEID VARCHAR(14),
	INTERLOCUTEURID VARCHAR(14) NOT NULL,
	E_CARDNUMBER VARCHAR(20) NOT NULL,
	E_CARDASSIGNED INT NOT NULL DEFAULT 0,
	E_FIRSTNAME VARCHAR(30),
	E_LASTNAME VARCHAR(30),
	E_EMPLOYEEID INT,
	E_STARTDATE DATETIME,
	E_STARTDATETIME DATETIME,
	E_ENDDATE DATETIME,
	E_ENDDATETIME DATETIME,
	E_WG_ID VARCHAR(20),
	E_LASTUPDATEDTIME VARCHAR(19),
	E_REFERENCE INT,
	E_VISITOR INT,
	STATUT_ENTREE INT,
	STATUT_SORTIE INT NOT NULL DEFAULT 0,
	DATECREATION DATETIME,
	DATEMAJ DATETIME
);
GO

CREATE TABLE ZCL27_EMPLOYEE_LOG
(
	ID_EMPLOYEE_LOG INT IDENTITY NOT NULL PRIMARY KEY,
	ID_EMPLOYEE INT,
	SITEID VARCHAR(14),
	INTERLOCUTEURID VARCHAR(14),
	E_CARDNUMBER VARCHAR(20),
	E_CARDASSIGNED INT,
	E_FIRSTNAME VARCHAR(30),
	E_LASTNAME VARCHAR(30),
	E_EMPLOYEEID INT,
	E_STARTDATE DATETIME,
	E_STARTDATETIME DATETIME,
	E_ENDDATE DATETIME,
	E_ENDDATETIME DATETIME,
	E_WG_ID VARCHAR(20),
	E_LASTUPDATEDTIME VARCHAR(19),
	E_REFERENCE INT,
	E_VISITOR INT,
	STATUT_ENTREE INT,
	STATUT_SORTIE INT,
	DATECREATION DATETIME,
	DATEMAJ DATETIME,
	DATELOG DATETIME
);
GO

CREATE TABLE ZCL27_PARAMETRE
(
	ID_PARAMETRE INT IDENTITY NOT NULL PRIMARY KEY,
	H_LISTE DATETIME,
	FREQ_EMPL INT,
	H_LOG DATETIME,
	H_SORTIE1 DATETIME,
	H_SORTIE2 DATETIME,
	DATECREATION DATETIME,
	DATEMAJ DATETIME
);
GO

CREATE TABLE ZCL17_PROFIL (
  ZCL17_PROFILID  VARCHAR(14)  NOT NULL,
  NUMERO	  VARCHAR(35),
  LIBELLE         VARCHAR(35),
  SITEID          VARCHAR(14),
  DATECREATION    DATETIME,
  DATEMAJ         DATETIME,
  DATESYNCHRO     DATETIME
);
GO

CREATE TABLE ZCL17_VISITE (
  ZCL17_VISITEID VARCHAR(14) NOT NULL,
  ACT            VARCHAR(14),
  NUMERO	 VARCHAR(20),
  NOMV		 VARCHAR(35),
  PRENOMV	 VARCHAR(35),
  SOCIETE	 VARCHAR(35),
  NOMR		 VARCHAR(35),
  PRENOMR	 VARCHAR(35),
  GUICHET	 VARCHAR(40),
  PROFIL1	 VARCHAR(35),
  PROFIL2	 VARCHAR(35),
  PROFIL3	 VARCHAR(35),
  PROFIL4	 VARCHAR(35),
  DEBUT		 VARCHAR(35),
  FIN		 VARCHAR(35),
  STATUT	 INT,
  SITEID	 VARCHAR(14),
  DATECREATION   DATETIME,
  DATEMAJ        DATETIME,
  DATESYNCHRO    DATETIME
);
GO

CREATE TABLE ZCL09_PROFIL (
  ZCL09_PROFILID  VARCHAR(14)  NOT NULL,
  NUMERO	  VARCHAR(35),
  LIBELLE         VARCHAR(35),
  SITEID          VARCHAR(14),
  DATECREATION    DATETIME,
  DATEMAJ         DATETIME,
  DATESYNCHRO     DATETIME
);
GO

CREATE TABLE ZCL09_VISITE (
  ZCL09_VISITEID  VARCHAR (14) NOT NULL,
  LIGNE		  VARCHAR (300),
  STATUT	  INT,
  SITEID	  VARCHAR (14),
  DATECREATION    DATETIME,
  DATEMAJ         DATETIME,
  DATESYNCHRO     DATETIME
);
GO

CREATE TABLE ZCL02_VERSLPM (
ZCL02_VERSLPMID VARCHAR(14) PRIMARY KEY,
FONCTION VARCHAR(20),
ID	  VARCHAR(20),
CATEGORIE VARCHAR(20),
DEBUT  	  VARCHAR(20),
FIN	  VARCHAR(20),
PLAQUE	  VARCHAR(20),
NOM	  VARCHAR(20),
INFO1	  VARCHAR(20),
INFO2	  VARCHAR(20),
INFO3	  VARCHAR(20),
INFO4	  VARCHAR(20),
INFO5	  VARCHAR(20),
ETAT	  INT,
LIEN	  VARCHAR(20),
SITEID	  VARCHAR(14),
DATECREATION	DATETIME NOT NULL,
DATEMAJ	DATETIME NOT NULL
);
GO

CREATE TABLE ZCL02_DELPM (
ZCL02_DELPMID VARCHAR(14) PRIMARY KEY,
ID	VARCHAR(20),
PLAQUE	VARCHAR(20),
DENTREE	VARCHAR(20),
DSORTIE	VARCHAR(20),
TENTREE	VARCHAR(20),
TSORTIE	VARCHAR(20),
ETAT	INT,
LIEN	VARCHAR(20),
DATECREATION	DATETIME NOT NULL,
DATEMAJ	DATETIME NOT NULL
);
GO

-- TABLE DEPARTEMENTS FRANCAIS
CREATE TABLE DEPFR (
  DEPFRID        INT PRIMARY KEY,
  NUMERO	 VARCHAR(10),
  DEPARTEMENT	 VARCHAR(70),
  PREFERTURE	 VARCHAR(70),
  REGION         VARCHAR(70),
  DATECREATION   DATETIME not null,
  DATEMAJ        DATETIME
);
GO

-- TABLE Marchés
CREATE TABLE MARCHE (
  MARCHEID 	 VARCHAR(14) NOT NULL,
  MARCHE	 VARCHAR(120),
  OBJET		 VARCHAR(250),
  MANDATAIRE	 VARCHAR(35),
  MANDATAIREID	 VARCHAR(14),
  RANG		 VARCHAR(20),
  FINPREVUE	 DATETIME,
  CSPS	 	 DATETIME,
  INSPECCOMMUNE	 DATETIME,
  DATECREATION   DATETIME,
  DATEMAJ        DATETIME,
  DATESYNCHRO    DATETIME
);
GO

-- TABLE DE LIAISON SOCIETE/MARCHE
CREATE TABLE SOCMAR (
  SOCIETEID	 VARCHAR(14) NOT NULL,
  MARCHEID 	 VARCHAR(14) NOT NULL,
  DATECREATION   DATETIME,
  DATEMAJ        DATETIME,
  DATESYNCHRO    DATETIME
);
GO

CREATE TABLE GRPSITE(
   GRPSITEID    VARCHAR(14) PRIMARY KEY,
   LIBELLE      VARCHAR(50),
   DATECREATION DATETIME,
   DATEMAJ      DATETIME,
   DATESYNCHRO DATETIME
);
GO

CREATE TABLE GRPSITE_SITE(
   GRPSITEID   VARCHAR(14) NOT NULL,
   SITEID      VARCHAR(14) NOT NULL,
   CONSTRAINT PK_GRPSITE_SITE PRIMARY KEY (GRPSITEID,SITEID)
);
GO
CREATE TABLE dbo.OTACHE (
OTACHEID	INTEGER PRIMARY KEY,
TYPEJOUR	VARCHAR(20),
HEUREEXECUTION	DATETIME,
ACTION	VARCHAR(20),
HEUREDEBUT	DATETIME,
HEUREFIN	DATETIME,
NBJOURMOINS	INTEGER DEFAULT 0,
MODEA	INTEGER DEFAULT 0,
ACTIF	INTEGER DEFAULT 1,
PROCHAINEEXECUTION DATETIME,
DERNIEREEXECUTION DATETIME,
DERNIERRESULTAT	INTEGER DEFAULT 0,
SITEID	VARCHAR(20),
GROUPEDESTID	INTEGER,
DATECREATION DATETIME NOT NULL,
DATEMAJ DATETIME
);
GO

CREATE TABLE dbo.ZCL30_TAG_TMP
(
ZCL30_TAG_TMPID INT IDENTITY(1,1) NOT NULL,
BASE VARCHAR(30),
PORTATIF VARCHAR(30),
TAG VARCHAR(30),
DATEHEURE DATETIME,
ORONDEID INT,
CONSTRAINT PK_ZCL30_TAG_TMP PRIMARY KEY (ZCL30_TAG_TMPID)
);
GO

CREATE TABLE dbo.ZCL30_EVT
(
ZCL30_EVTID INT IDENTITY(1,1) NOT NULL,
BASE VARCHAR(30),
PORTATIF VARCHAR(30),
CODE_EVT VARCHAR(30),
DATEHEURE DATETIME,
CONSTRAINT PK_ZCL30_EVT PRIMARY KEY (ZCL30_EVTID)
);
GO

CREATE TABLE dbo.PARAMETRAGE (
	LIBELLE VARCHAR(50),
	VALEUR VARCHAR(MAX),
	SITEID VARCHAR(14),
	DATECREATION DATETIME NOT NULL,
	DATEMAJ DATETIME NOT NULL,
	DATESYNCHRO DATETIME,
	CONSTRAINT PARAMETRAGE_PK PRIMARY KEY (LIBELLE,SITEID)
);
GO

CREATE TABLE dbo.STATUTCOLIS (
	ID_STATUTCOLIS INTEGER PRIMARY KEY,
	LIBELLE VARCHAR(35),
	COLOR INTEGER,
	DATECREATION DATETIME NOT NULL,
	DATEMAJ DATETIME NOT NULL,
	DATESYNCHRO DATETIME
);
GO

CREATE TABLE dbo.EVENEMENTCOLIS (
	ID_EVENEMENTCOLIS INTEGER PRIMARY KEY,
	COLISID VARCHAR(14),
	LIBELLE VARCHAR(200),
	DATEHEURE DATETIME,
	USERID VARCHAR(14),
	RESIDANTID VARCHAR(14),
	DATECREATION DATETIME NOT NULL,
	DATEMAJ DATETIME NOT NULL,
	DATESYNCHRO DATETIME
);
GO

CREATE TABLE dbo.TYPEVEHICULE (
	ID_TYPEVEHICULE INTEGER PRIMARY KEY,
	LIBELLE VARCHAR(35),
	DATECREATION DATETIME NOT NULL,
	DATEMAJ DATETIME NOT NULL,
	DATESYNCHRO DATETIME
);
GO

CREATE TABLE dbo.EVENEMENTCOURSE (
	ID_EVENEMENTCOURSE INTEGER	PRIMARY KEY,
	ID_COURSE INTEGER,
	LIBELLE VARCHAR(200),
	DATEHEURE DATETIME,
	USERID VARCHAR(14),
	DATECREATION DATETIME NOT NULL,
	DATEMAJ DATETIME NOT NULL,
	DATESYNCHRO DATETIME
);
GO

CREATE TABLE dbo.COURSE (
	ID_COURSE INTEGER PRIMARY KEY,
	ID_STATUTCOURSE VARCHAR(14),
	SITEID VARCHAR(14),
	DATEHEUREDEMANDE DATETIME,
	LIEUDEPART VARCHAR(40),
	DATEHEUREDEPART DATETIME,
	ID_TYPEVEHICULE INTEGER,
	OBJET VARCHAR(200),
	MOYENPAIEMENT VARCHAR(50),
	IMPUTATIONID VARCHAR(14),
	CODECLIENT VARCHAR(10),
	NUMCOURSE VARCHAR(35),
	REFERENCESTAXI VARCHAR(200),
	DELAI INT,
	ADRESSEID VARCHAR(14),
	DATEHEUREFIN DATETIME,
	DATECREATION DATETIME NOT NULL,
	DATEMAJ DATETIME NOT NULL,
	DATESYNCHRO DATETIME
);
GO

CREATE TABLE dbo.STATUTCOURSE (
	ID_STATUTCOURSE INTEGER PRIMARY KEY,
	LIBELLE VARCHAR(35),
	COLOR INTEGER,
	DATECREATION DATETIME NOT NULL,
	DATEMAJ DATETIME NOT NULL,
	DATESYNCHRO DATETIME
);
GO

CREATE TABLE dbo.PASSAGERTAXI (
	ID_PASSAGERTAXI INTEGER PRIMARY KEY,
	ID_COURSE INTEGER,
	RESIDANTID VARCHAR(14),
	INTERLOCUTEURID VARCHAR(14),
	CONTACT VARCHAR(200),
	HANDICAP VARCHAR(200),
	ANIMAL VARCHAR(200),
	ORDRE INTEGER,
	DATECREATION DATETIME NOT NULL,
	DATEMAJ DATETIME NOT NULL,
	DATESYNCHRO DATETIME
);
GO

CREATE TABLE dbo.DROITSTAXI (
	ID_DROITSTAXI INT PRIMARY KEY,
	LIBELLE VARCHAR(35),
	DROITS INTEGER,
	DATECREATION DATETIME NOT NULL,
	DATEMAJ DATETIME NOT NULL,
	DATESYNCHRO DATETIME
);
GO

CREATE TABLE dbo.DROITSTELEM (
	ID_DROITSTELEM INT PRIMARY KEY,
	LIBELLE VARCHAR(35),
	DROITS VARCHAR(500),
	SITE_RESIDANT INT,
	SITE_PREENREG INT,
	VISITEUR VARCHAR(500),
	TIMEOUT INT,
	GRPVALIDEURID INT,
	ETRANGER INT DEFAULT 0,
	DATECREATION DATETIME NOT NULL,
	DATEMAJ DATETIME NOT NULL,
	DATESYNCHRO DATETIME
);
GO

CREATE TABLE dbo.OCONSIGNE_ODROIT (
  OCONSIGNEID INT NOT NULL,
  ODROITID INT NOT NULL
);
GO

CREATE TABLE dbo.OCONSIGNE_POSTE (
  OCONSIGNEID INT NOT NULL,
  POSTEID INT NOT NULL
);
GO

CREATE TABLE dbo.ZCTRL_FIL_EAU (
	ID INT PRIMARY KEY NOT NULL,
	CTRLID VARCHAR(30),
	CTRLDATE DATETIME,
	BADGE VARCHAR(20),
	CTRLDESC VARCHAR(50),
	CTRLREADER VARCHAR(50),
	CTRLEVENT VARCHAR(50),
	CTRLREADERID VARCHAR(20),
	CTRLPROFIL VARCHAR(100),
	INTERLOCUTEURID VARCHAR(20),
	NOMPRENOM VARCHAR(100),
	SOCIETE VARCHAR(100),
	INTERLOCUTEURSTATUT VARCHAR(50),
	RESIDANTSOCIETELIB VARCHAR(100),
	RESIDANTSOCIETEID VARCHAR(20),
	SITEID VARCHAR(20),
	SITELIBELLE VARCHAR(50),
	TICKET VARCHAR(50),
	LOCALISATION VARCHAR(4000),
	DATECREATION DATETIME NOT NULL,
	DATEMAJ  DATETIME,
	DATESYNCHRO  DATETIME
);
GO

CREATE TABLE dbo.PROFIL_CTRL_LECTEUR (
	PROFIL_CTRL_LECTEURID INTEGER PRIMARY KEY,
	CTRLREADER VARCHAR(50),
	CTRLREADERID VARCHAR(20),
	PROFIL_CTRL VARCHAR(100),
	PROFIL_CTRLID_EXT VARCHAR(50),
	SITEID VARCHAR(14),
	DATECREATION DATETIME NOT NULL,
	DATEMAJ DATETIME NOT NULL,
	DATESYNCHRO DATETIME
);
GO

CREATE TABLE dbo.SEQ_ZCL37_CTPUSER (
  SEQ_ZCL37_CTPUSERID  INTEGER NOT NULL IDENTITY,
  LIBELLE VARCHAR(35));
GO
CREATE TABLE dbo.SEQ_ZCL37_CPTPWD (
  SEQ_ZCL37_CTPUSERID  INTEGER NOT NULL IDENTITY,
  LIBELLE VARCHAR(35));
GO

CREATE TABLE dbo.RAPPEL (
   RAPPELID INT IDENTITY(1,1) PRIMARY KEY,
   CODELGRESERVATION  VARCHAR(14),
   TEMPS VARCHAR(50),
   UNITE VARCHAR(50),
   DATERAPPEL DATETIME,
   ETAT INT DEFAULT 0,
   DATECREATION DATETIME,
   DATEMAJ      DATETIME
);
GO

----------------------------------------------------------------------------------
--        LICENCES                                                              --
----------------------------------------------------------------------------------

--  Table LICENCE
CREATE TABLE LICENCE (
	ID_LICENCE INT NOT NULL,
	CLE VARCHAR(30) NOT NULL,
	DATECREATION DATETIME NOT NULL,
	CONSTRAINT PK_ID_LICENCE PRIMARY KEY (ID_LICENCE)
);
GO

--  Table LICENCE1
CREATE TABLE LICENCE1 (
	ID_LICENCE1 INT IDENTITY(1,1) NOT NULL,
	NOM_POSTE VARCHAR(24) NOT NULL,
	LOGIN VARCHAR(50) NOT NULL,
	APPLICATION VARCHAR(20) NOT NULL,
	DATECREATION DATETIME NOT NULL,
	CONSTRAINT PK_ID_LICENCE1 PRIMARY KEY (ID_LICENCE1)
);
GO

--  Table LICENCE2
CREATE TABLE LICENCE2 (
	ID_LICENCE2 INT IDENTITY(1,1) NOT NULL,
	LOGIN VARCHAR(50) NOT NULL,
	APPLICATION VARCHAR(20) NOT NULL,
	DATECREATION DATETIME NOT NULL,
	CONSTRAINT PK_ID_LICENCE2 PRIMARY KEY (ID_LICENCE2)
);
GO

--  Table LICENCE3
CREATE TABLE LICENCE3 (
	ID_LICENCE3 INT IDENTITY(1,1) NOT NULL,
	LOGIN VARCHAR(50) NOT NULL,
	APPLICATION VARCHAR(20) NOT NULL,
	DATECREATION DATETIME NOT NULL,
	CONSTRAINT PK_ID_LICENCE3 PRIMARY KEY (ID_LICENCE3)
);
GO

--  Table LICENCE1_LOG
CREATE TABLE dbo.LICENCE1_LOG (
	ID_LICENCE1_LOG INT IDENTITY(1,1) NOT NULL,
	NOM_POSTE VARCHAR(50) NOT NULL,
	APPLICATION VARCHAR(20) NOT NULL,
	ACTION VARCHAR(50) NOT NULL,
	DATECREATION DATETIME NOT NULL,
	CONSTRAINT PK_ID_LICENCE1_LOG PRIMARY KEY (ID_LICENCE1_LOG)
);
GO

--  Table LICENCE2_LOG
CREATE TABLE LICENCE2_LOG (
	ID_LICENCE2_LOG INT IDENTITY(1,1) NOT NULL,
	LOGIN VARCHAR(50) NOT NULL,
	APPLICATION VARCHAR(20) NOT NULL,
	ACTION VARCHAR(50) NOT NULL,
	DATECREATION DATETIME NOT NULL,
	CONSTRAINT PK_ID_LICENCE2_LOG PRIMARY KEY (ID_LICENCE2_LOG)
);
GO

--  Table LICENCE3_LOG
CREATE TABLE LICENCE3_LOG (
	ID_LICENCE3_LOG INT IDENTITY(1,1) NOT NULL,
	LOGIN VARCHAR(50) NOT NULL,
	APPLICATION VARCHAR(20) NOT NULL,
	ACTION VARCHAR(50) NOT NULL,
	DATECREATION DATETIME NOT NULL,
	CONSTRAINT PK_ID_LICENCE3_LOG PRIMARY KEY (ID_LICENCE3_LOG)
);
GO

--  Table CONNECTION_LOG
CREATE TABLE CONNECTION_LOG (
	ID_CONNECTION_LOG INT IDENTITY(1,1) NOT NULL,
	LOGIN VARCHAR(50) NOT NULL,
	APPLICATION VARCHAR(100) NOT NULL,
	ACTION VARCHAR(500) NOT NULL,
	DATECREATION DATETIME NOT NULL,
	CONSTRAINT PK_ID_CONNECTION_LOG PRIMARY KEY (ID_CONNECTION_LOG)
);
GO

--  Table VISITE_ACTION
CREATE TABLE dbo.VISITE_ACTION
(
  VISITEACTIONID INTEGER	PRIMARY KEY,
  VISITEID VARCHAR(14),
  ACTION_NATURE VARCHAR(35),
  ACTEUR_NATURE VARCHAR(35),
  NOMACTEUR VARCHAR(70),
  ACTEURID VARCHAR(14),
  RES_ACTION VARCHAR(4000),
  NOM_CHAMP VARCHAR(50),
  RES_AVANT VARCHAR(250),
  RES_APRES VARCHAR(250),
  ACTION_DATE DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATECREATION DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
 );
 GO


--  Table INTER_ACTION
 CREATE TABLE dbo.INTER_ACTION
(
  INTERACTIONID  INTEGER PRIMARY KEY,
  INTERLOCUTEURID VARCHAR(14),
  ACTION_NATURE VARCHAR(35),
  ACTEUR_NATURE VARCHAR(35),
  NOMACTEUR VARCHAR(70),
  ACTEURID VARCHAR(14),
  RES_ACTION VARCHAR(4000),
  NOM_CHAMP VARCHAR(50),
  RES_AVANT VARCHAR(250),
  RES_APRES VARCHAR(250),
  ACTION_DATE DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATECREATION DATETIME NOT NULL,
  DATESYNCHRO DATETIME
 );
GO

CREATE TABLE dbo.SOCIETE_ACTION
(
  SOCACTIONID  INTEGER PRIMARY KEY,
  SOCIETEID VARCHAR(14),
  ACTION_NATURE VARCHAR(35),
  ACTEUR_NATURE VARCHAR(35),
  NOMACTEUR VARCHAR(70),
  ACTEURID VARCHAR(14),
  RES_ACTION VARCHAR(4000),
  NOM_CHAMP VARCHAR(50),
  RES_AVANT VARCHAR(250),
  RES_APRES VARCHAR(250),
  ACTION_DATE DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATECREATION DATETIME NOT NULL,
  DATESYNCHRO DATETIME
 );
GO

CREATE TABLE dbo.FORMULAIRE_MODELE (
  FORMULAIRE_MODELEID INT PRIMARY KEY,
  LIBELLE VARCHAR(50),
  XML VARCHAR(4000),
  OFICHIERID_WORD INT,
  OFICHIERID_EXCEL INT,
  SITEID VARCHAR(14),
  TYPEVISITEID INT,
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME
);
GO

CREATE TABLE dbo.FORMULAIRE (
  FORMULAIREID INT PRIMARY KEY,
  FORMULAIRE_MODELEID INT NOT NULL,
  REFERENCE INT,
  VERSION INT,
  LIBELLE VARCHAR(50),
  XML VARCHAR(MAX),
  AUTEUR VARCHAR(100),
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME
);
GO

CREATE TABLE dbo.FORMULAIRE_VISITE (
  FORMULAIREID INT,
  VISITEID VARCHAR(14),
  CONSTRAINT PK_FORMULAIRE_VISITEID PRIMARY KEY (FORMULAIREID,VISITEID)
);
GO

CREATE TABLE dbo.JOUR_FERIE (
	JOUR_FERIEID INTEGER PRIMARY KEY,
	LIBELLE VARCHAR(100),
	DEBUT DATETIME,
	FIN DATETIME,
	DATECREATION DATETIME NOT NULL,
	DATEMAJ DATETIME NOT NULL
);
GO

CREATE TABLE dbo.FORMULAIRE_OFICHIER (
  FORMULAIREID INT NOT NULL,
  OFICHIERID INT NOT NULL,
  CONSTRAINT PK_FORMULAIRE_OFICHIERID PRIMARY KEY (FORMULAIREID,OFICHIERID)
);
GO

CREATE TABLE dbo.MAIL_OFICHIER (
  MAILID VARCHAR(14),
  OFICHIERID INT
);
GO

---TABLES DEDOUBLONNAGE
CREATE TABLE dbo.TEMPSOC (
TMPID VARCHAR(14) NOT NULL,
TMPNOM  VARCHAR(35) NOT NULL,
TMPRANG INT,
TRAITE VARCHAR(1),
CONSTRAINT PK_TMPID PRIMARY KEY (TMPID)
);
GO

CREATE TABLE dbo.TEMPSOC2 (
TMP2ID VARCHAR(14) NOT NULL,
TMPNOM  VARCHAR(35) NOT NULL,
TMPRANG INT,
TRAITE VARCHAR(1),
CONSTRAINT PK_TMP2ID PRIMARY KEY (TMP2ID)
);
GO

CREATE INDEX TEMPSOC_TMPNOM ON TEMPSOC (TMPNOM);
CREATE INDEX TEMPSOC2_TMPNOM ON TEMPSOC2 (TMPNOM);
GO

CREATE TABLE dbo.DEDUP_DEDUP
( DEDUP1ID VARCHAR(14) NOT NULL,
  DEDUP2ID VARCHAR(14) NOT NULL,
  SIMIL_FLAG VARCHAR(1) DEFAULT(1),
  ENTITE VARCHAR(50),
  JW INT,
 CONSTRAINT PK_DEDUP_DEDUPID PRIMARY KEY (DEDUP1ID,DEDUP2ID)
  );
GO


CREATE TABLE dbo.IMPORT_ROI
(
IMPORT_ROIID VARCHAR(14) PRIMARY KEY,
MVT VARCHAR(03),
SOURCE VARCHAR(12),
ETAT VARCHAR(06),
RAISON VARCHAR(10),
IDENTIFIANT VARCHAR(10),
QUALITECIVILITE VARCHAR(5),
NOM VARCHAR(50),
PRENOM VARCHAR(32),
SOCIETE VARCHAR(05),
UNITEMANAGERIALE Varchar(20),
LABELUNITEMANAGERIALE Varchar(100),
TYPEPOPULATION VARCHAR(02),
TYPEPERSONNE VARCHAR(30),
IESOCIETEPRESTATION Varchar(100),
IEDEBUTMISSION VARCHAR(17),
IEFINMISSION VARCHAR(17),
MAIL VARCHAR(100),
CODEFONCTION VARCHAR(04),
FONCTION VARCHAR(50),
SITE VARCHAR(3),
LIBELLESITE VARCHAR(32),
BATIMENT VARCHAR(3),
ETAGE VARCHAR(3),
NUMEROBUREAU VARCHAR(6),
RUE VARCHAR(120),
CODEPOSTAL VARCHAR(5),
VILLE VARCHAR(32),
PAYS VARCHAR(3),
TELEPHONE VARCHAR(13),
TELEPHONEINTERNE VARCHAR(6),
FAX VARCHAR(13),
CODENATURECONTRATTRAVAIL VARCHAR(05),
INDABSENCELONGUEDUREE Varchar(01),
STATUTPERSONNE VARCHAR(02),
CODEANTENNE VARCHAR(20),
ANCIENSITE VARCHAR(3),
ANCIENCODEANTENNE VARCHAR(20),
DATECREATION DATETIME,
DATEMAJ DATETIME,
THELOGIN VARCHAR(50),
MANAGER VARCHAR(20)
);
GO

CREATE TABLE dbo.LOGDB (
	LOGDBID INT IDENTITY(1,1) PRIMARY KEY,
	QUI VARCHAR(50),
	IP VARCHAR(50),
	URL VARCHAR(250),
	QUAND DATETIME,
	REQUETE VARCHAR(4000),
	LATABLE VARCHAR(100),
	ACTION VARCHAR(100),
	ID VARCHAR(100),
	DONNEES VARCHAR(4000),
	SITE VARCHAR(50),
	POSTE VARCHAR(50)
);
GO

CREATE TABLE dbo.RESIDANT_CTRL(
	RESIDANT_CTRLID INT NOT NULL PRIMARY KEY,
	RESIDANTID VARCHAR(14) NULL,
	ACTION INT NOT NULL,
	SITEID VARCHAR(14) NULL,
	SITE VARCHAR(80) NULL,
	EMETTEUR VARCHAR(80) NULL,
	DH_POST DATETIME NOT NULL,
	DH_PROCEED DATETIME NULL,
	IDENT VARCHAR(80) NOT NULL,
	STATUT INT NULL,
	TXT_ERR VARCHAR(80) NULL,
	DEB_VAL DATETIME NULL,
	FIN_VAL DATETIME NULL,
	NOM VARCHAR(40) NULL,
	PRENOM VARCHAR(40) NULL,
	SOCIETE VARCHAR(40) NULL,
	CODE_ANTENNE VARCHAR(40) NULL,
	MATRICULE VARCHAR(40) NULL,
	ANTI_RETOUR INT NULL,
	CODE_CLASSE INT NULL,
	DATA_01 VARCHAR(80) NULL,
	DATA_02 VARCHAR(80) NULL,
	DATA_03 VARCHAR(80) NULL,
	DATA_04 VARCHAR(80) NULL,
	DATA_05 VARCHAR(80) NULL,
	DATA_06 VARCHAR(80) NULL,
	DATA_07 VARCHAR(80) NULL,
	DATA_08 VARCHAR(80) NULL,
	DATA_09 VARCHAR(80) NULL,
	DATA_10 VARCHAR(80) NULL,
	ACCES_01 VARCHAR(4000) NULL,
	ACCES_02 VARCHAR(4000) NULL,
	ACCES_03 VARCHAR(4000) NULL,
	ACCES_04 VARCHAR(4000) NULL,
	ACCES_05 VARCHAR(4000) NULL,
	ACCES_06 VARCHAR(4000) NULL,
	ACCES_07 VARCHAR(4000) NULL,
	ACCES_08 VARCHAR(4000) NULL,
	ACCES_09 VARCHAR(4000) NULL,
	ACCES_10 VARCHAR(4000) NULL
);
GO

CREATE TABLE dbo.RESIDANT_SITE_PROFIL (
	RESIDANTID	VARCHAR(14),
	SITEID		VARCHAR(14),
	PROFIL_CTRLID	INTEGER,
	DATECREATION DATETIME,
	DATEMAJ		DATETIME,
	DATESYNCHRO	DATETIME
);
GO

CREATE TABLE dbo.ROI_LOG (
	ROI_LOGID INTEGER,
	QUI VARCHAR(100),
	QUAND DATETIME,
	ACTION VARCHAR(100),
	QUOI VARCHAR(100),
	BADGE VARCHAR(100),
	MATRICULE VARCHAR(100),
	NOM VARCHAR(100),
	PRENOM VARCHAR(100),
	SOCIETE VARCHAR(100),
	SITE  VARCHAR(100)
);
GO

CREATE TABLE dbo.FILTRE (
	LIBELLE VARCHAR(50),
	VALEUR VARCHAR(MAX),
	SITEID VARCHAR(14),
	DATECREATION DATETIME NOT NULL,
	DATEMAJ DATETIME NOT NULL,
	DATESYNCHRO DATETIME,
	CONSTRAINT FILTRE_PK PRIMARY KEY (LIBELLE,SITEID)
);
GO

CREATE TABLE dbo.CHECKLIST (
   CHECKLISTID INTEGER PRIMARY KEY,
   LIBELLE  VARCHAR(200),
   NUMERO INTEGER,
   SITEID VARCHAR(14),
   CHKPRISEPOSTE INT DEFAULT(0),
   DATECREATION DATETIME,
   DATEMAJ      DATETIME
);
GO

CREATE TABLE dbo.OCHECKLIST (
   OCHECKLISTID INTEGER PRIMARY KEY,
   LIBELLE VARCHAR(200),
   NUMERO INTEGER,
   PERSONNELID INTEGER,
   UNOMPRENOM VARCHAR(300),
   ETAT VARCHAR(1000),
   DETAIL VARCHAR(4000),
   OBSERVATION VARCHAR(4000),
   CHKITEM VARCHAR(4000),
   SITEID VARCHAR(14),
   CHECKDATE DATETIME,
   DATECREATION DATETIME,
   DATEMAJ      DATETIME
);
GO

CREATE TABLE dbo.CHK_CHECKLIST (
   CHKID INTEGER,
   CHECKLISTID INTEGER,
   NORDER INTEGER
);
GO

CREATE TABLE dbo.CHK (
   CHKID INTEGER PRIMARY KEY,
   LIBELLE VARCHAR(400),
   DATECREATION DATETIME,
   DATEMAJ      DATETIME
);
GO

CREATE TABLE dbo.VALIDATION_ENQUETE(
	[SITEID] [varchar](14) NULL,
	[EXTERNALID] [varchar](14) NOT NULL,
	[EXTERN_TYPE] [varchar](35) NOT NULL,
	[POLE] [varchar](100) NULL,
	[ECHANGES] [int] DEFAULT 0,
	[CUMUL] [varchar](50) NULL,
	[CODEACTIVITE] [varchar](70) NULL,
	[TYPEVISITE] [varchar](35) NOT NULL,
	[VISITEID] [varchar](14) NULL,
	[DEBUTPREVU] [datetime] NULL,
	[FINPREVU] [datetime] NULL,
	[DATESAISIE] [datetime] NULL,
	[CENTRE] [varchar](35) NULL,
	[CIVILITE] [varchar](30) NULL,
	[NOM] [varchar](35) NULL,
	[PRENOM] [varchar](35) NULL,
	[NOMJEUNEFILLE] [varchar](25) NULL,
	[DATENAISSANCE] [datetime] NULL,
	[LIEUNAISSANCE] [varchar](70) NULL,
	[PAYSNAISSANCE] [varchar](50) NULL,
	[NATIONALITE] [varchar](35) NULL,
	[ADRESSE] [varchar](150) NULL,
	[VILLE] [varchar](35) NULL,
	[CP] [varchar](10) NULL,
	[FONCTION] [varchar](35) NULL,
	[SOCIETE] [varchar](35) NULL,
	[ENQUETE] [int] DEFAULT (0),
	[ETAT] [int] DEFAULT (0),
	[RETOUR] [int] DEFAULT (0),
	[DATECREATION] [datetime] NULL,
	[DATERETOUR] [datetime] NULL,
 CONSTRAINT [PK_ENQUETE] PRIMARY KEY CLUSTERED ([EXTERNALID] ASC,[EXTERN_TYPE] ASC,	[TYPEVISITE] ASC)
)
GO
CREATE TABLE [dbo].[ZCL15_CPPA](
	[IDCPPA] [varchar](14) NULL,
	[REGLEID] [varchar](14) NULL,
	[SITEID] [varchar](14) NULL,
	[SITE] [varchar](35) NULL,
	[SOCIETEID] [varchar](14) NULL,
	[SOCIETE] [varchar](35) NULL,
	[PAYSID] [varchar](14) NULL,
	[PAYS] [varchar](35) NULL,
	[TYPEVISITEID] [int] NULL,
	[TYPEVISITE] [varchar](70) NULL,
	[ETAT] [varchar](3) NULL,
	[DATESYNCHRO] [datetime] NULL
)

CREATE TABLE [dbo].ZCL15_DEMANDE_LPE(
	[ZCL15_DEMANDE_LPEID] [varchar](14) NOT NULL PRIMARY KEY,
	[CONSIGNE1_ID] [varchar](14) NULL,
	[CONSIGNE2_ID] [varchar](14) NULL,
	[INTERLOCUTEURID] [varchar](14) NULL,
	[EME_SITEID] [varchar](14) NULL,
	[REM_SITEID] [varchar](14) NULL,
	[REC_SITEID] [varchar](14) NULL,
	[LPE_SAISIE_DCS] [datetime] NULL,
	[LPE_SAISIE_CACS] [datetime] NULL,
	[LPE_REMISE] [datetime] NULL,
	[LPE_ENVOI] [datetime] NULL,
	[LPE_INTERDICTION] [int] NULL,
	[DATECREATION] [datetime] NULL,
	[DATEMAJ] [datetime] NULL

 )
 GO


  --Table GRPVALIDEUR
CREATE TABLE dbo.GRPVALIDEUR (
  GRPVALIDEURID INT NOT NULL,
  GRPVALIDEURN VARCHAR(100),
  RANGVALIDEUR INTEGER DEFAULT (0),
  AVIS INTEGER DEFAULT (0),
  DATECREATION DATETIME NOT NULL,
  DATEMAJ DATETIME NOT NULL,
  DATESYNCHRO DATETIME,
CONSTRAINT PK_GRPVALIDEURID PRIMARY KEY (GRPVALIDEURID));
GO

 CREATE TABLE dbo.POSTE_TYPEVISITE (
  NOM_POSTE VARCHAR(50),
  TYPEVISITEID INT);
GO

CREATE TABLE dbo.REGLE_GRPVALIDEUR (
  REGLEID INT NOT NULL,
  GRPVALIDEURID INT NOT NULL,
CONSTRAINT PK_REGLE_GRPVALIDEUR PRIMARY KEY (REGLEID,GRPVALIDEURID));
GO

CREATE TABLE dbo.LOCALISATION_USER (
  LOCALISATIONID INT NOT NULL,
  USERID VARCHAR(14) NOT NULL,
CONSTRAINT PK_LOCALISATION_USER PRIMARY KEY (USERID,LOCALISATIONID));
GO

CREATE TABLE [dbo].[ZRR](
[ID_ZRR] [int] NOT NULL,
[CODE] [varchar](25) NULL,
[LIBELLE] [varchar](255) NULL,
[DEB_VALITE] [datetime] NULL,
[FIN_VALIDITE] [datetime] NULL,
[ACTIVE] [varchar](1) NULL,
[ZONE_PARTENAIRE] [varchar](1) NULL,
[CENTRE] [varchar](3) NULL,
[SITEID] [varchar](14) NULL,
[LOCAUX_SENSIBLES] [varchar](1) NULL,
[UCREA] [varchar](8) NULL,
[DCREA] [datetime] NULL,
[UDERMAJ] [varchar](8) NULL,
[DDERMAJ] [datetime] NULL,
CONSTRAINT [PK_ZRR] PRIMARY KEY CLUSTERED
(
      [ID_ZRR] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
 GO

 CREATE TABLE dbo.TEMPO_IMPRESID (
RESIDANTID VARCHAR(14),
SITEID VARCHAR(14)
);
GO

CREATE TABLE MISSION_AGENT (
  MISSIONID INT,
  PERSONNELID INT
);
GO

CREATE TABLE [dbo].EQUIPE(
	[EQUIPEID] [int] PRIMARY KEY NOT NULL,
	[LIBELLE] [varchar](35) NULL,
	[DATECREATION] [datetime] NULL,
	[DATEMAJ] [datetime]NULL,
	[DATESYNCHRO] [datetime] NULL
)
GO

CREATE TABLE dbo.APPEL (
	APPELID INT IDENTITY(1,1) PRIMARY KEY,
	USERID VARCHAR(14),
	QUAND DATETIME,
	SITEID VARCHAR(14),
	NOM_POSTE VARCHAR(50),
	RESIDANTID VARCHAR(14),
	INTERLOCUTEURID VARCHAR(14),
	SOCIETE VARCHAR(35),
	OBJET VARCHAR(4000),
	TELEPHONE VARCHAR(30),
	DATECREATION DATETIME
);
GO

CREATE TABLE POSTE_CHECKLIST
(CHECKLISTID INT NOT NULL,
 POSTEID INT NOT NULL,
  PRIMARY KEY (CHECKLISTID, POSTEID)
  );
  GO

  CREATE TABLE CONFERENCE
(
	CONFERENCEID INT PRIMARY KEY,
	LIBELLE VARCHAR(50),
	DESCRIPTION VARCHAR(4000),
	STARTDATE DATETIME,
	ENDDATE DATETIME,
	TICKET VARCHAR(50),
	BADGEID VARCHAR(14),
	SITEID VARCHAR(14),
	OFICHIERID INT,
	DATECREATION DATE,
	DATEMAJ DATE
);
GO
----------------------------------------------------------------------------------
--       Fonctions                                                              --
----------------------------------------------------------------------------------

CREATE FUNCTION dbo.TO_CHAR
(
    @dt DATETIME,
    @format VARCHAR(21)
)
RETURNS VARCHAR(64)
AS
BEGIN
    DECLARE @dtVC VARCHAR(64)
    SELECT @dtVC = CASE @format

    WHEN 'YYYYMMDD' THEN
         CONVERT(CHAR(8), @dt, 112)

    WHEN 'YYYY-MM' THEN
         LEFT(CONVERT(CHAR(10), @dt, 23),7)

    WHEN 'YYYY-MM-DD' THEN
         CONVERT(CHAR(10), @dt, 23)

    WHEN 'YYMMDD' THEN
         CONVERT(VARCHAR(8), @dt, 12)

    WHEN 'MMDDYY' THEN
         REPLACE(CONVERT(CHAR(8), @dt, 10), '-', SPACE(0))

    WHEN 'MM-DD-YY' THEN
         CONVERT(CHAR(8), @dt, 10)

    WHEN 'MM/DD/YY' THEN
         CONVERT(CHAR(8), @dt, 1)

    WHEN 'MM/DD/YYYY' THEN
         CONVERT(CHAR(10), @dt, 101)

    WHEN 'DDMMYY' THEN
        REPLACE(CONVERT(CHAR(8), @dt, 3), '/', SPACE(0))

    WHEN 'DD-MM-YY' THEN
        REPLACE(CONVERT(CHAR(8), @dt, 3), '/', '-')

    WHEN 'DD/MM/YY' THEN
        CONVERT(CHAR(8), @dt, 3)

    WHEN 'DD/MM/YYYY' THEN
        CONVERT(CHAR(10), @dt, 103)

    WHEN 'HH24:MI:SS' THEN
        CONVERT(CHAR(8), @dt, 8)

    WHEN 'HH24' THEN
        LEFT(CONVERT(VARCHAR(8), @dt, 8), 2)

    WHEN 'HH24:MI' THEN
        LEFT(CONVERT(VARCHAR(8), @dt, 8), 5)

    WHEN 'HH:MI:SS' THEN
        LTRIM(RIGHT(CONVERT(VARCHAR(20), @dt, 22), 11))

    WHEN 'HH:MI' THEN
        LTRIM(SUBSTRING(CONVERT(VARCHAR(20), @dt, 22), 10, 5) + RIGHT(CONVERT(VARCHAR(20), @dt, 22), 3))

    WHEN 'DD/MM/YYYY HH24:MI:SS' THEN
        CONVERT(CHAR(10), @dt, 103) +' '+
        CONVERT(CHAR(8), @dt, 8)

    WHEN 'DD/MM/YYYY HH24:MI' THEN
        CONVERT(CHAR(10), @dt, 103) +' '+
        LEFT(CONVERT(VARCHAR(8), @dt, 8), 5)

    WHEN 'YEAR' THEN
        DATENAME(yyyy, @dt)

    WHEN 'MONTH' THEN
        DATENAME(mm , @dt)

    WHEN 'DYEAR' THEN
        DATENAME(dy , @dt)

    WHEN 'DDAY' THEN
        DATENAME(dd , @dt)

    WHEN 'DAY' THEN
        DATENAME(dw , @dt)

    WHEN 'WEEK' THEN
        DATENAME(wk , @dt)

    ELSE
        'MAUVAIS'

    END
    RETURN @dtVC
END
GO

CREATE FUNCTION dbo.TO_DATE
(
    @Str VARCHAR(64),
    @format VARCHAR(21)
)
RETURNS DATETIME
AS
BEGIN
    DECLARE @StrVC DATETIME
    SELECT @StrVC = CASE @format

    WHEN 'MM/DD/YYYY' THEN
        CONVERT(DATETIME, @Str, 101)

    WHEN 'DD/MM/YYYY' THEN
        CONVERT(DATETIME, @Str, 103)

    WHEN 'DD-MM-YY' THEN
        CONVERT(DATETIME, @Str, 105)

    WHEN 'MM-DD-YYYY' THEN
        CONVERT(DATETIME, @Str, 110)

    WHEN 'YYYYMMDD' THEN
        CONVERT(DATETIME, @Str, 112)

    WHEN 'YYYY/MM/DD HH24:MI:SS' THEN
        CONVERT(DATETIME, REPLACE( @Str, '/', '-'), 120)

    WHEN 'DD/MM/YYYY HH24:MI:SS' THEN
        CONVERT(DATETIME, @Str, 104)

    WHEN 'DD-MM-YYYY HH24:MI:SS' THEN
        CONVERT(DATETIME, @Str, 104)

    WHEN 'HH24:MI' THEN
        CONVERT(DATETIME, @Str, 114)

    WHEN 'HH24:MI:SS' THEN
        CONVERT(DATETIME, @Str, 114)

    ELSE
       CONVERT(DATETIME,'01/01/1900', 103)
    END
    RETURN @StrVC
END
GO

CREATE FUNCTION dbo.TRUNC
(   @dt DATETIME
)
RETURNS DATETIME
AS
BEGIN
    RETURN dbo.TO_DATE(dbo.TO_CHAR(@dt,'DD/MM/YYYY'),'DD/MM/YYYY')
END
GO


----------------------------------------------------------------------------------
--       Index definitions for all user tables                                  --
----------------------------------------------------------------------------------
CREATE UNIQUE INDEX SALLE0 ON SALLE(BATIMENTID, CODESALLE);
GO
CREATE UNIQUE INDEX TYPETARIF0 ON TYPETARIF(CODETYPETARIF);
GO
--
CREATE INDEX AMENAG_LIBELLE ON AMENAGEMENT(LIBELLE);
GO
CREATE INDEX ART_FAMILLE ON ARTICLE(CODEFAMILLE);
GO
CREATE INDEX ART_LIBELLE ON ARTICLE(LIBELLE);
GO
CREATE INDEX ART_SFAMILLE ON ARTICLE(CODESOUSFAMILLE, LIBELLE);
GO
CREATE INDEX ARTDEF_SORTORDER ON ARTICLEDEFAULT(SORTORDER);
GO
CREATE INDEX BADGE_LIB ON BADGES(LIBELLE);
GO
CREATE INDEX BAT_LIBELLE ON BATIMENT(LIBELLE);
GO
CREATE INDEX BADGE_SITE ON VISITES(NUMEROBADGE, STATUTID, SITEID);
GO
CREATE INDEX BATSOC ON SOCBAT(BATIMENTID);
GO
CREATE INDEX COLIS_EMIS_RESID ON COLISEMIS(INTERLOCUTEURID, STATUTCOLIS);
GO
CREATE INDEX COLIS_INTERLOC ON COLISRECU(INTERLOCUTEURID, STATUTCOLIS);
GO
CREATE INDEX COLIS_VISIT ON COLISRECU(RESIDANTID, STATUTCOLIS);
GO
CREATE INDEX COLIS_WAIT ON COLISRECU(STATUTCOLIS, ARRIVEE);
GO
CREATE INDEX DEBUTPREVU ON VISITES(DEBUTPREVU);
GO
CREATE INDEX EQUFIXE_LIBELLE ON EQUIPEMENTFIXE(LIBELLE);
GO
CREATE INDEX FAMILLE_LIBELLE ON FAMILLE(LIBELLE);
GO
CREATE INDEX FINPREVU ON VISITES(FINPREVU);
GO
CREATE INDEX INTERLOCUTEUR_SOCINTERLOC ON INTERLOCUTEUR(SOCIETEID, INTERLOCUTEURID);
GO
CREATE INDEX LGRESERVATION_CODE ON LGRESERVATION(CODELGRESERVATION);
GO
CREATE INDEX LGRESERVATION_DATE ON LGRESERVATION(CODERESERVATION, CODESALLE, DATEDEBUT);
GO
CREATE INDEX LIB ON PLANS(LIBELLE);
GO
CREATE INDEX MARQUE_LIBELLE ON MARQUE(LIBELLE);
GO
CREATE INDEX PARK_LIBRE ON PARKING(STATUTPARKING, PARKING);
GO
CREATE INDEX PAYS_LIBELLE ON PAYS(LIBELLE);
GO
CREATE INDEX PRODUIT_LIBELLE ON PRODUIT(LIBELLE);
GO
CREATE INDEX PRODUIT_REFERENCE ON PRODUIT(REFERENCE);
GO
CREATE INDEX RESIDANTS_MAT ON RESIDANTS(MATRICULE);
GO
CREATE INDEX RESIDANTS_SOCINTERLOC ON RESIDANTS(SOCIETEID, RESIDANTID);
GO
CREATE INDEX SALLE_LIBELLE ON SALLE(LIBELLE);
GO
CREATE INDEX SERVICE_LIBELLE ON SERVICE(LIBELLE);
GO
CREATE INDEX SFAMILLE_CODELIBELLE ON SOUSFAMILLE(CODEFAMILLE, SOUSFAMILLE);
GO
CREATE INDEX SFAM_LIBELLE ON SOUSFAMILLE(SOUSFAMILLE);
GO
CREATE INDEX SITE_PARK ON PARKING(SITEID, PARKING);
GO
CREATE INDEX SITE_SOC ON SOCSITE(SITEID);
GO
CREATE INDEX SITELIB ON SITE(LIBELLE);
GO
CREATE INDEX SOC_SITE ON SOCSITE(SOCIETEID);
GO
CREATE INDEX SOCBAT ON SOCBAT(SOCIETEID);
GO
CREATE INDEX SOCIETE_ZONE ON SOCIETE(DEPARTEMENT);
GO
CREATE INDEX STATUT_LIBELLE ON STATUTRESERVATION(LIBELLE);
GO
CREATE INDEX TDEFAULT_LIBELLE ON TYPEDEFAULT(LIBELLE);
GO
CREATE INDEX TRANCHES_LIBELLE ON TRANCHE(LIBELLE);
GO
CREATE INDEX TRESERVATION_LIBELLECOURT ON TYPERESERVATION(LIBELLE);
GO
CREATE INDEX TVA_LIBELLE ON TVA(LIBELLE);
GO
CREATE INDEX USER_LOGIN ON USERS(THELOGIN);
GO
CREATE INDEX VILLE_VILLE ON VILLE(VILLE);
GO
CREATE INDEX VISITE_BADGE ON VISITES(NUMEROBADGE);
GO
CREATE INDEX VISITE_DEBUT ON VISITES(DEBUTVISITE);
GO
CREATE INDEX VISITE_FIN ON VISITES(FINVISITE);
GO

CREATE INDEX VISIT_NOMPRENOM ON INTERLOCUTEUR(NOMPRENOM);
GO
CREATE INDEX RESI_NOMPRENOM ON RESIDANTS(NOMPRENOM);
GO

CREATE INDEX VISITEUR_SUR_SITE ON VISITES(SITEID,INTERLOCUTEURID,STATUTID);
GO

CREATE INDEX SORTIE_VISITEUR ON VISITES(STATUTID, SITEID, NUMEROBADGE);
GO
CREATE INDEX RESIDANT ON VISITES(SITEID, RESIDANTID, STATUTID);
GO

CREATE INDEX VISIT_NOM ON INTERLOCUTEUR(NOM);
GO
CREATE INDEX VISIT_INTER ON VISITES(SITEID,INTERLOCUTEURID,STATUTID,DEBUTPREVU,FINPREVU);
GO

CREATE INDEX VISIT_RES ON RESIDANTS(ISACTIF,NOM);
GO
CREATE INDEX VISIT_RES_SITE ON RESIDANTS(SITEID,ISACTIF,NOM);
GO

CREATE INDEX INTER_NATURE ON INTERLOCUTEUR(INTERLOCUTEURID,NATUREID);
GO
CREATE INDEX VISIT_INTERID ON VISITES(INTERLOCUTEURID);
GO
CREATE INDEX NATURE_NATUREID ON NATURE(TVISITE,NATUREID);
GO
CREATE INDEX VISIT_NUMEROVISITE ON VISITES(NUMEROVISITE);
GO
CREATE INDEX VISIT_NUMEROVISITE1 ON VISITES(NUMEROVISITE,INTERLOCUTEURID);
GO

CREATE INDEX INTERLOCUTEUR_DELEGUE ON INTERLOCUTEUR (NOMPRENOM, PHONKEY);
GO

CREATE INDEX ETATVISITE ON VISITES_TEMP (ETATVISITE);
GO



CREATE INDEX INDEX_ORIGINEVISITE ON VISITES (ORIGINEVISITE);
CREATE INDEX INDEX_BUREAUID ON VISITES (BUREAUID);
GO
----------------------------------------------------------------------------------
--     Index definitions for all user tables                                    --
----------------------------------------------------------------------------------
ALTER TABLE DROITS ADD CONSTRAINT fk_Droit_resiid FOREIGN KEY (RESIDANTID) REFERENCES RESIDANTS(RESIDANTID);
GO
ALTER TABLE DEPARTEMENT ADD CONSTRAINT fk_dep_socid FOREIGN KEY (SOCIETEID) REFERENCES SOCIETE(SOCIETEID);
GO
ALTER TABLE SERVICE ADD CONSTRAINT fk_serv_deptid FOREIGN KEY (DEPTID) REFERENCES DEPARTEMENT(DEPTID);
GO
ALTER TABLE BATIMENT ADD CONSTRAINT fk_bat_siteid FOREIGN KEY (SITEID) REFERENCES SITE(SITEID);
GO
ALTER TABLE RESIDANTS ADD CONSTRAINT fk_resi_socid FOREIGN KEY (SOCIETEID) REFERENCES SOCIETE(SOCIETEID);
GO
ALTER TABLE RESIDANTS ADD CONSTRAINT fk_resi_siteid FOREIGN KEY (SITEID) REFERENCES SITE(SITEID);
GO
ALTER TABLE RESIDANTS ADD CONSTRAINT fk_resi_servid FOREIGN KEY (SERVICEID) REFERENCES SERVICE(SERVICEID);
GO
ALTER TABLE SALLE ADD CONSTRAINT fk_salle_siteid FOREIGN KEY (SITEID) REFERENCES SITE(SITEID);
GO
ALTER TABLE SALLE ADD CONSTRAINT fk_salle_batid FOREIGN KEY (BATIMENTID) REFERENCES BATIMENT(BATIMENTID);
GO
ALTER TABLE ETAGES ADD CONSTRAINT fk_etages_batid FOREIGN KEY (BATIMENTID) REFERENCES BATIMENT(BATIMENTID);
GO
ALTER TABLE VEHICULE ADD CONSTRAINT fk_vehi_resiid FOREIGN KEY (RESIDANTID) REFERENCES RESIDANTS(RESIDANTID);
GO
ALTER TABLE VISITES ADD CONSTRAINT fk_visi_resiid FOREIGN KEY (residantid) REFERENCES residants(residantid);
GO
ALTER TABLE VISITES ADD CONSTRAINT fk_visi_siteid FOREIGN KEY (SITEID) REFERENCES SITE(SITEID);
GO
ALTER TABLE BUREAUX ADD CONSTRAINT fk_bur_etageid FOREIGN KEY (ETAGEID) REFERENCES ETAGES(ETAGEID);
GO
ALTER TABLE PARKING ADD CONSTRAINT fk_park_siteid FOREIGN KEY (SITEID) REFERENCES SITE(SITEID);
GO
ALTER TABLE GUICHET ADD CONSTRAINT fk_guic_siteid FOREIGN KEY (SITEID) REFERENCES SITE(SITEID);
GO

ALTER TABLE SECRETARIAT ADD CONSTRAINT fk_sec_resiid FOREIGN KEY (RESIDANTID) REFERENCES RESIDANTS(RESIDANTID);
GO
ALTER TABLE SECRETARIAT ADD CONSTRAINT fk_sec_resiid2 FOREIGN KEY (RESIDANTID2) REFERENCES RESIDANTS(RESIDANTID);
GO

ALTER TABLE ZCL08_REPAS ADD CONSTRAINT PK_BDG PRIMARY KEY (NUMEROBADGE,DATEPASSAGE2);
GO
----------------------------------------------------------------------------------
--     SEQUENCE                                                                 --
----------------------------------------------------------------------------------
CREATE TABLE dbo.SEQ_IDENTITY (
  SEQ_IDENTITYID  BIGINT NOT NULL IDENTITY,
  LIBELLE VARCHAR(35));
GO
CREATE TABLE dbo.SEQ_RAPPORT (
  SEQ_RAPPORTID  INTEGER NOT NULL IDENTITY,
  LIBELLE VARCHAR(35));
GO
CREATE TABLE dbo.SEQ_NUM_BDG (
  SEQ_NUM_BDGID  INTEGER NOT NULL IDENTITY,
  LIBELLE VARCHAR(35));
GO
CREATE TABLE dbo.SEQ_NUM_BDG_EXT (
  SEQ_NUM_BDG_EXTID  INTEGER NOT NULL IDENTITY,
  LIBELLE VARCHAR(35));
GO
CREATE TABLE dbo.SEQ_NUM_BDG_RES (
  SEQ_NUM_BDG_RESID  INTEGER NOT NULL IDENTITY,
  LIBELLE VARCHAR(35));
GO
CREATE TABLE dbo.SEQ_NUM_BDG_VEH (
  SEQ_NUM_BDG_VEHID  INTEGER NOT NULL IDENTITY,
  LIBELLE VARCHAR(35));
GO
----------------------------------------------------------------------------------
--                                                                              --
----------------------------------------------------------------------------------