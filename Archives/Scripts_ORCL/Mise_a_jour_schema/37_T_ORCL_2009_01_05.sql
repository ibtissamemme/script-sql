ALTER TABLE TQ_COMMUNE ADD PERIPH_ACQUI_LISTE NUMBER;
ALTER TABLE TQ_COMMUNE ADD PERIPH_ACQUI_MAJ_INFOS NUMBER;
COMMIT;

ALTER TABLE USERS ADD SOCIETEID VARCHAR2(14);
ALTER TABLE USERS ADD SOCIETE VARCHAR2(35);
COMMIT;

CREATE TABLE TRACE_ACTION (
  TRACE_ACTIONID VARCHAR2(14) NOT NULL,
  USERID VARCHAR2(14),
  NOMPRENOMUSER VARCHAR2(70),
  SITEID VARCHAR2(14),
  SITE VARCHAR2(35),
  ACTION VARCHAR2(50),
  LIEU VARCHAR2(50),
  DETAILS VARCHAR2(1000),
  GENERIQUEID VARCHAR2(14),
  GENERIQUETABLE VARCHAR2(50),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE
);
COMMIT;

CREATE GLOBAL TEMPORARY TABLE IDENTITE_TMP
(
  TMPID VARCHAR(14)
)
ON COMMIT PRESERVE ROWS ;

COMMIT;

ALTER TABLE VISITES ADD IFONCTION VARCHAR2(35);
ALTER TABLE VISITES ADD IDATENAISSANCE DATE;
ALTER TABLE VISITES ADD ILIEUNAISSANCE VARCHAR2(70);
ALTER TABLE VISITES ADD IPAYS VARCHAR2(35);
ALTER TABLE VISITES ADD INOMJEUNEFILLE VARCHAR2(35);
COMMIT;

UPDATE VISITES SET ILIEUNAISSANCE=(SELECT LIEUNAISSANCE FROM INTERLOCUTEUR WHERE INTERLOCUTEURID=VISITES.INTERLOCUTEURID);
COMMIT;
UPDATE VISITES SET IDATENAISSANCE=(SELECT DATENAISSANCE FROM INTERLOCUTEUR WHERE INTERLOCUTEURID=VISITES.INTERLOCUTEURID);
COMMIT;
UPDATE VISITES SET IFONCTION=(SELECT FONCTION FROM INTERLOCUTEUR WHERE INTERLOCUTEURID=VISITES.INTERLOCUTEURID);
COMMIT;
UPDATE VISITES SET IPAYS=(SELECT LIBELLE FROM INTERLOCUTEUR, PAYS WHERE PAYS.PAYSID=INTERLOCUTEUR.NATIONALITEID AND INTERLOCUTEURID=VISITES.INTERLOCUTEURID);
COMMIT;
UPDATE VISITES SET INOMJEUNEFILLE=(SELECT NOMJEUNEFILLE FROM INTERLOCUTEUR WHERE INTERLOCUTEURID=VISITES.INTERLOCUTEURID);
COMMIT;

ALTER TABLE RESIDANTS MODIFY THELOGIN VARCHAR2(50);
ALTER TABLE USERS MODIFY THELOGIN VARCHAR2(50);
COMMIT;

ALTER TABLE MAIL ADD CONSTRAINT PK_MAILID PRIMARY KEY (MAILID);
ALTER TABLE MAIL MODIFY ETAT VARCHAR2(200);
COMMIT;

ALTER TABLE USERS MODIFY FULLNAME VARCHAR2(70);
COMMIT;

INSERT INTO TYPEIDENTITE (TYPEIDENTITEID,LIBELLE,DATEMAJ,DATECREATION,DATESYNCHRO) VALUES (-1,'PASSEPORT',SYSDATE,SYSDATE,SYSDATE);
COMMIT;
INSERT INTO TYPEIDENTITE (TYPEIDENTITEID,LIBELLE,DATEMAJ,DATECREATION,DATESYNCHRO) VALUES (-2,'CNI',SYSDATE,SYSDATE,SYSDATE);
COMMIT;
INSERT INTO TYPEIDENTITE (TYPEIDENTITEID,LIBELLE,DATEMAJ,DATECREATION,DATESYNCHRO) VALUES (-3,'TITRE DE SEJOUR',SYSDATE,SYSDATE,SYSDATE);
COMMIT;
INSERT INTO TYPEIDENTITE (TYPEIDENTITEID,LIBELLE,DATEMAJ,DATECREATION,DATESYNCHRO) VALUES (-4,'CIE',SYSDATE,SYSDATE,SYSDATE);
COMMIT;

CREATE SEQUENCE SEQ_IDENTITY;
COMMIT;

ALTER TABLE VISITES ADD MODIFICATION VARCHAR2(100);
ALTER TABLE VISITES ADD ETATVISITE VARCHAR2(1);
COMMIT;

--	Table : ZCL27_SITE
CREATE TABLE ZCL27_SITE
(
	ID_SITE INT NOT NULL PRIMARY KEY,
	SITEID VARCHAR(14),
	SERVICEURL VARCHAR(300),
	DATECREATION DATE,
	DATEMAJ DATE
);

CREATE SEQUENCE SEQ_ZCL27_SITE
	START WITH 1
	INCREMENT BY 1
	NOMAXVALUE;

CREATE OR REPLACE TRIGGER TRIGGER_ZCL27_SITE
BEFORE INSERT ON ZCL27_SITE
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
	SELECT SEQ_ZCL27_SITE.NEXTVAL INTO :NEW.ID_SITE FROM DUAL;
END;
/

--	Table : ZCL27_BADGE
CREATE TABLE ZCL27_BADGE
(
	ID_BADGE INT NOT NULL PRIMARY KEY,
	B_CARD_NO VARCHAR(20),
	B_ASSIGNED INT,
	CARDQUALITY VARCHAR(14),
	SITEID VARCHAR(14),
	DATECREATION DATE,
	DATEMAJ DATE
);

CREATE SEQUENCE SEQ_ZCL27_BADGE
	START WITH 1
	INCREMENT BY 1
	NOMAXVALUE;

CREATE OR REPLACE TRIGGER TRIGGER_ZCL27_BADGE
BEFORE INSERT ON ZCL27_BADGE
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
	SELECT SEQ_ZCL27_BADGE.NEXTVAL INTO :NEW.ID_BADGE FROM DUAL;
END;
/

--	Table : ZCL27_WORKGROUP
CREATE TABLE ZCL27_WORKGROUP
(
	ID_WORKGROUP INT NOT NULL PRIMARY KEY,
	WG_NAME VARCHAR(40),
	WG_ID VARCHAR(20),
	SITEID VARCHAR(14),
	DATECREATION DATE,
	DATEMAJ DATE
);

CREATE SEQUENCE SEQ_ZCL27_WORKGROUP
	START WITH 1
	INCREMENT BY 1
	NOMAXVALUE;

CREATE OR REPLACE TRIGGER TRIGGER_ZCL27_WORKGROUP
BEFORE INSERT ON ZCL27_WORKGROUP
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
	SELECT SEQ_ZCL27_WORKGROUP.NEXTVAL INTO :NEW.ID_WORKGROUP FROM DUAL;
END;
/

--	Table : ZCL27_EMPLOYEE
CREATE TABLE ZCL27_EMPLOYEE
(
	ID_EMPLOYEE INT NOT NULL PRIMARY KEY,
	SITEID VARCHAR(14),
	INTERLOCUTEURID VARCHAR(14) NOT NULL,
	E_CARDNUMBER VARCHAR(20) NOT NULL,
	E_CARDASSIGNED INT DEFAULT 0,
	E_FIRSTNAME VARCHAR(30),
	E_LASTNAME VARCHAR(30),
	E_EMPLOYEEID INT,
	E_STARTDATE DATE,
	E_STARTDATETIME DATE,
	E_ENDDATE DATE,
	E_ENDDATETIME DATE,
	E_WG_ID VARCHAR(20),
	E_LASTUPDATEDTIME VARCHAR(19),
	E_REFERENCE INT,
	E_VISITOR INT,
	STATUT_ENTREE INT,
	STATUT_SORTIE INT DEFAULT 0,
	DATECREATION DATE,
	DATEMAJ DATE
);

CREATE SEQUENCE SEQ_ZCL27_EMPLOYEE
	START WITH 1
	INCREMENT BY 1
	NOMAXVALUE;

CREATE OR REPLACE TRIGGER TRIGGER_ZCL27_EMPLOYEE
BEFORE INSERT ON ZCL27_EMPLOYEE
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
	SELECT SEQ_ZCL27_EMPLOYEE.NEXTVAL INTO :NEW.ID_EMPLOYEE FROM DUAL;
END;
/

--	Table : ZCL27_EMPLOYEE_LOG
CREATE TABLE ZCL27_EMPLOYEE_LOG
(
	ID_EMPLOYEE_LOG INT NOT NULL PRIMARY KEY,
	ID_EMPLOYEE INT,
	SITEID VARCHAR(14),
	INTERLOCUTEURID VARCHAR(14),
	E_CARDNUMBER VARCHAR(20),
	E_CARDASSIGNED INT,
	E_FIRSTNAME VARCHAR(30),
	E_LASTNAME VARCHAR(30),
	E_EMPLOYEEID INT,
	E_STARTDATE DATE,
	E_STARTDATETIME DATE,
	E_ENDDATE DATE,
	E_ENDDATETIME DATE,
	E_WG_ID VARCHAR(20),
	E_LASTUPDATEDTIME VARCHAR(19),
	E_REFERENCE INT,
	E_VISITOR INT,
	STATUT_ENTREE INT,
	STATUT_SORTIE INT,
	DATECREATION DATE,
	DATEMAJ DATE,
	DATELOG DATE
);

CREATE SEQUENCE SEQ_ZCL27_EMPLOYEE_LOG
	START WITH 1
	INCREMENT BY 1
	NOMAXVALUE;

CREATE OR REPLACE TRIGGER TRIGGER_ZCL27_EMPLOYEE_LOG
BEFORE INSERT ON ZCL27_EMPLOYEE_LOG
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
	SELECT SEQ_ZCL27_EMPLOYEE_LOG.NEXTVAL INTO :NEW.ID_EMPLOYEE_LOG FROM DUAL;
END;
/

--	Table : ZCL27_PARAMETRE
CREATE TABLE ZCL27_PARAMETRE
(
	ID_PARAMETRE INT NOT NULL PRIMARY KEY,
	H_LISTE DATE,
	FREQ_EMPL INT,
	H_LOG DATE,
	H_SORTIE1 DATE,
	H_SORTIE2 DATE,
	DATECREATION DATE,
	DATEMAJ DATE
);

CREATE SEQUENCE SEQ_ZCL27_PARAMETRE
	START WITH 1
	INCREMENT BY 1
	NOMAXVALUE;

CREATE OR REPLACE TRIGGER TRIGGER_ZCL27_PARAMETRE
BEFORE INSERT ON ZCL27_PARAMETRE
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
	SELECT SEQ_ZCL27_PARAMETRE.NEXTVAL INTO :NEW.ID_PARAMETRE FROM DUAL;
END;
/

-- Insertion
INSERT INTO ZCL27_PARAMETRE (H_LISTE, FREQ_EMPL, H_LOG, H_SORTIE1, H_SORTIE2, DATECREATION, DATEMAJ)
	VALUES (TO_DATE('01/01/2000 06:00','DD/MM/YYYY HH24:MI'), 500, TO_DATE('01/01/2000 22:00','DD/MM/YYYY HH24:MI'), TO_DATE('01/01/2000 13:00','DD/MM/YYYY HH24:MI'), TO_DATE('01/01/2000 23:00','DD/MM/YYYY HH24:MI'), CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);

COMMIT;

ALTER TABLE VISITES ADD MARQUE VARCHAR2(20);
ALTER TABLE VISITES ADD MODELE VARCHAR2(40);
COMMIT;
EXIT;
