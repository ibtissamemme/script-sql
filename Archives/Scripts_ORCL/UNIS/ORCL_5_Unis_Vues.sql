CREATE OR REPLACE VIEW INDIVIDU (
  INDIVIDUID, NOM, PRENOM, FONCTION, SERVICE, SOCIETE, CIVILITE, BATIMENT, ETAGE, BUREAU, TEL_DIR, TEL_SEC, FAX,
  DATECREATION, DATEMAJ, DATESYNCHRO, TAG) AS
  (
  SELECT 'R' || R.RESIDANTID,R.NOM,R.PRENOM,R.FONCTION,R.SERVICE,S.NOM,R.CIVILITE,
  R.BATIMENT,R.ETAGE,R.BUREAU,R.GSM,R.TELEPHONE,R.FAX,R.DATECREATION,R.DATEMAJ,R.DATESYNCHRO,TAG
  FROM RESIDANTS R,SOCIETE S
  WHERE R.SOCIETEID=S.SOCIETEID
  )
  UNION
  (SELECT 'I' || I.INTERLOCUTEURID,I.NOM,I.PRENOM,I.FONCTION,'',S.NOM,I.CIVILITE,'','','',I.GSM,I.TELEPHONE,I.FAX,
  I.DATECREATION,I.DATEMAJ,I.DATESYNCHRO ,TAG
  FROM INTERLOCUTEUR I,SOCIETE S
  WHERE I.SOCIETEID=S.SOCIETEID AND INTERLOCUTEURID<>'VPARDEFAUT'
  )
  UNION
  (SELECT 'P' || CAST(PERSONNELID AS VARCHAR2(14 CHAR)),NOM,PRENOM,F.LIBELLE AS FONCTION,'','','','','','','','','',
  P.DATECREATION,P.DATEMAJ,P.DATESYNCHRO ,TAG
  FROM PERSONNEL P,FONCTION F
  WHERE F.CODEFONCTION=P.CODEFONCTION
  );

CREATE OR REPLACE VIEW V_LISTE_GRPSITE (GRPSITEID,GROUPE,SITEID,SITE,GRP) AS
SELECT GS.GRPSITEID,GS.LIBELLE AS GROUPE,S.SITEID,S.LIBELLE AS SITE,'GROUPE' AS GRP FROM GRPSITE GS, GRPSITE_SITE GSS, SITE S WHERE GSS.GRPSITEID=GS.GRPSITEID AND GSS.SITEID=S.SITEID
UNION
SELECT SITEID AS GRPSITEID,LIBELLE AS GROUPE, SITEID, LIBELLE AS SITE, 'SITE' AS GRP FROM SITE
;

CREATE OR REPLACE VIEW VISITES_EN_COURS (VISITEID, NUMEROBADGE, FINVISITE, SITEID) AS
    (
        SELECT VISITEID, NUMEROBADGE, FINVISITE, SITEID
        FROM VISITES
        WHERE STATUTID IN (1,8,33,34)
    )
;
COMMIT;

CREATE OR REPLACE VIEW VISITES_EN_FIN (VISITEID, NUMEROBADGE, FINVISITE, SITEID) AS
    (
        SELECT VISITEID, NUMEROBADGE, FINVISITE, SITEID
        FROM VISITES
        WHERE STATUTID IN (1,8,33,34)
        AND FINVISITE <= TRUNC(SYSDATE)
    )
;
COMMIT;

CREATE OR REPLACE VIEW V_PAYS AS SELECT TO_CHAR(VALEUR) PAYSID,TEXTE LIBELLE,'A' TRI FROM TABLEREFERENCE WHERE ID='128' UNION SELECT PAYSID PAYSID,LIBELLE LIBELLE,'B' TRI FROM PAYS;
COMMIT;


CREATE OR REPLACE VIEW V_SELECT_LGRESA AS SELECT LGRESERVATION.CODELGRESERVATION, LGRESERVATION.DATEDEBUT, LGRESERVATION.HEUREDEBUT, LGRESERVATION.HEUREFIN, LGRESERVATION.PORTE_CODE, SALLE.LIBELLE, SALLE.PORTE_CLE,SALLE.PORTE_OPTION, RESERVATION.REFRESERVATION FROM LGRESERVATION, SALLE, RESERVATION
WHERE
  LGRESERVATION.CODERESERVATION=RESERVATION.CODERESERVATION
AND
 SALLE.CODESALLE=LGRESERVATION.CODESALLE
AND
 TRUNC(DATEDEBUT)>=TRUNC(SYSDATE)
 AND
  DATEDEBUT<= SYSDATE +12/24
  AND
 (LGRESERVATION.PORTE_CODE IS NULL);
COMMIT;

CREATE OR REPLACE VIEW V_TAXI_COURSE
AS
    SELECT C.ID_COURSE, C.SITEID, SI.LIBELLE AS "SITE", C.ID_STATUTCOURSE, C.DATEHEUREDEPART AS "DATEHEURE", C.DATEHEUREDEMANDE, C.DATEHEUREFIN, C.LIEUDEPART, C.OBJET, C.MOYENPAIEMENT, C.CODECLIENT, I.LIBELLE AS "IMPUTATION", T.LIBELLE AS "TYPEVEHICULE", C.NUMCOURSE, C.REFERENCESTAXI, A.SOCIETE AS "COMPAGNIE", C.DELAI, S.LIBELLE AS "STATUT", S.COLOR, Z.NOMPRENOM, Z.CONTACT, Z.ORDRE FROM STATUTCOURSE S, IMPUTATION I, TYPEVEHICULE T, SITE SI, (SELECT R.NOMPRENOM, P.ORDRE, P.ID_COURSE, P.CONTACT FROM PASSAGERTAXI P, RESIDANTS R WHERE P.RESIDANTID = R.RESIDANTID UNION SELECT I.NOMPRENOM, P.ORDRE, P.ID_COURSE, P.CONTACT FROM PASSAGERTAXI P, INTERLOCUTEUR I WHERE P.INTERLOCUTEURID = I.INTERLOCUTEURID) Z, ADRESSE A, COURSE C WHERE A.ADRESSEID(+)=C.ADRESSEID AND C.ID_STATUTCOURSE = S.ID_STATUTCOURSE AND Z.ID_COURSE = C.ID_COURSE AND (I.IMPUTATIONID = C.IMPUTATIONID OR C.IMPUTATIONID IS NULL) AND C.ID_TYPEVEHICULE = T.ID_TYPEVEHICULE AND SI.SITEID = C.SITEID;

CREATE OR REPLACE VIEW V_TAXI_COURSE_GROUPE
AS
    SELECT C.ID_COURSE, C.SITEID, SI.LIBELLE AS "SITE", C.ID_STATUTCOURSE, C.DATEHEUREDEPART AS "DATEHEURE", C.DATEHEUREDEMANDE, C.DATEHEUREFIN, C.LIEUDEPART, C.OBJET, C.MOYENPAIEMENT, C.CODECLIENT, I.LIBELLE AS "IMPUTATION", T.LIBELLE AS "TYPEVEHICULE", C.NUMCOURSE, C.REFERENCESTAXI, A.SOCIETE AS "COMPAGNIE", C.DELAI, S.LIBELLE AS "STATUT", S.COLOR, Z.COUNT FROM STATUTCOURSE S, IMPUTATION I, TYPEVEHICULE T, SITE SI, (SELECT COUNT(*) AS "COUNT",ID_COURSE FROM PASSAGERTAXI GROUP BY ID_COURSE) Z, ADRESSE A, COURSE C WHERE A.ADRESSEID(+)=C.ADRESSEID AND C.ID_STATUTCOURSE = S.ID_STATUTCOURSE AND Z.ID_COURSE = C.ID_COURSE AND (I.IMPUTATIONID = C.IMPUTATIONID OR C.IMPUTATIONID IS NULL) AND C.ID_TYPEVEHICULE = T.ID_TYPEVEHICULE AND SI.SITEID = C.SITEID;
COMMIT;

-- ACCES PARKING
CREATE OR REPLACE VIEW V_PREVISITE_ENTREE_LPM AS
    SELECT V.* FROM VISITES V, SITE S WHERE S.SITEID=V.SITEID AND S.CTRL IS NOT NULL AND S.CTRL <>'' AND V.IMMATRICULATION IS NOT NULL AND V.IMMATRICULATION <>'' AND (STATUTID=2 OR STATUTID=2)  AND V.ATTENDU=0 AND V.IMMATRICULATION <>'PARKING' AND ((TO_CHAR(V.DEBUTPREVU,'YYYY-MM-DD')=TO_CHAR(SYSDATE,'YYYY-MM-DD')) OR (TO_CHAR(V.DEBUTPREVU,'YYYY-MM-DD')=TO_CHAR(SYSDATE,'YYYY-MM-DD')+1))
;
COMMIT;

CREATE OR REPLACE VIEW V_PREVISITE_SORTIE_LPM AS
    SELECT V.* FROM VISITES V, SITE S WHERE S.SITEID=V.SITEID AND S.CTRL IS NOT NULL AND S.CTRL <>'' AND V.IMMATRICULATION IS NOT NULL AND V.IMMATRICULATION <>'' AND STATUTID=-2 AND V.ATTENDU=1 AND V.IMMATRICULATION <>'PARKING'
;
COMMIT;


CREATE OR REPLACE VIEW VUE_AGENDA2MISSION
(AGENDA_JOUR2ID, HEURE, TOLERANCE, STATUT, DATEMISSION,
 DUREE, DATEMAJ, LIBMISSION, POSTEID, SITEID)
AS
(
    SELECT   J2.AGENDA_JOUR2ID,J2.HEURE, J2.TOLERANCE,
    J2.STATUT,TRUNC(J2.DATEMISSION), M.DUREE , J2.DATEMAJ,M.LIBELLE,J2.POSTEID,J2.SITEID
    FROM AGENDA_JOUR2 J2,MISSION M WHERE J2.MISSIONID=M.MISSIONID AND J2.STATUT IN (0,1,3) AND DATEMISSION<SYSDATE+1);
COMMIT;

CREATE OR REPLACE VIEW VUE_AGENDAMISSION
(AGENDA_JOURID, STATUT, POSTEID, SITEID, MISSIONID,
 TYPE_JOUR, FINVALIDITE, JOURID, DATEOFWEEK, LIBELLE,
 HEURE, DUREE, TOLERANCE)
AS
(
 SELECT AJ.AGENDA_JOURID,AJ.STATUT, AJ.POSTEID,AJ.SITEID,AJ.MISSIONID, J.TYPE_JOUR,J.FIN_VALIDITE FINVALIDITE, J.JOURID,
J.CL,J.LIBELLE, AJ.HEURE HEURE, M.DUREE  DUREE, AJ.TOLERANCE TOLERANCE
    FROM AGENDA_JOUR AJ , MISSION M, JOUR J WHERE M.MISSIONID=AJ.MISSIONID AND J.JOURID=AJ.JOURID AND
    J.JOURID IN ( SELECT JOURID FROM (SELECT JOURID FROM JOUR J WHERE to_char(sysdate,'d')=J.CL  OR ( to_char(sysdate,'d')=to_char(J.FIN_VALIDITE,'d')  AND J.TYPE_JOUR IS NULL AND TRUNC(J.FIN_VALIDITE)=TRUNC(SYSDATE))
        OR (J.TYPE_JOUR='AFERIE' AND TO_CHAR(5,TRUNC(SYSDATE),'DD/MM/YYYY')=TO_CHAR(TRUNC(J.FIN_VALIDITE),'DD/MM/YYYY')) ORDER BY TYPE_JOUR ) WHERE ROWNUM=1)    
  );

COMMIT;
 
CREATE OR REPLACE VIEW VISITES_SORTIE_JOUR AS (
    SELECT V.VISITEID, V.NUMEROBADGE, V.FINVISITE, V.SITEID
        FROM VISITES V, SITE S, TYPEVISITE T
        WHERE S.SITEID=V.SITEID
        AND T.TYPEVISITEID=V.TYPEVISITEID
        AND V.STATUTID IN (1,8,33,34)
        AND S.TLMQ_SORTIE_JOUR=1
        AND T.TYPESORTIE=1
);
COMMIT;

CREATE OR REPLACE VIEW VISITES_SORTIE_FIN AS (
    SELECT V.VISITEID, V.NUMEROBADGE, V.FINVISITE, V.SITEID
        FROM VISITES V, SITE S, TYPEVISITE T
        WHERE S.SITEID=V.SITEID
        AND T.TYPEVISITEID=V.TYPEVISITEID
        AND V.STATUTID IN (1,8,33,34)
        AND S.TLMQ_SORTIE_FVISITE=1
        AND T.TYPESORTIE=2
        AND ((TRUNC(FINVISITE)=TRUNC(SYSDATE) AND TO_DATE(TO_CHAR(HFIN,'HH24:MI'),'HH24:MI')<TO_DATE(TO_CHAR(SYSDATE,'HH24:MI'),'HH24:MI')) OR TRUNC(FINVISITE)<TRUNC(SYSDATE))
);
COMMIT;

CREATE OR REPLACE VIEW V_ENQUETE_PAYS  AS (
SELECT P.PAYSID,P.LIBELLE,P.LIBELLEUS,
CASE WHEN  0<(SELECT COUNT(REGA.FREE2) FROM 
REGLES REGP, REGLE_ACTION RA,REGLES REGA 
WHERE  REGP.REGLEID=RA.REGLEID AND REGA.REGLEID=RA.ACTIONID AND REGA.TYPEREGLE='-24' AND REGP.TYPEREGLE='-1' AND (REGP.FREE1='-2' OR REGP.FREE1=P.PAYSID)
AND (REGP.NATUREVISITE='-2' OR REGP.NATUREVISITE='1')  AND REGP.STATUT='1'
)
THEN 'O'
WHEN  P.PAYSID<>'VPARDEFAUT'  AND 0<(SELECT COUNT(REGA.FREE2) FROM 
REGLES REGP ,REGLE_ACTION RA,REGLES REGA 
WHERE  REGP.REGLEID=RA.REGLEID AND REGA.REGLEID=RA.ACTIONID AND REGA.TYPEREGLE='-24' AND REGP.TYPEREGLE='-1' AND P.LIBELLEUS='UE' AND (REGP.FREE1='-2' OR REGP.FREE1='0')
AND (REGP.NATUREVISITE='-2' OR REGP.NATUREVISITE='1')AND REGP.STATUT='1'
)
THEN 'O' 
WHEN   0<(SELECT COUNT(REGA.FREE2) FROM 
REGLES REGP ,REGLE_ACTION RA,REGLES REGA 
WHERE  REGP.REGLEID=RA.REGLEID AND REGA.REGLEID=RA.ACTIONID AND REGA.TYPEREGLE='-24' AND REGP.TYPEREGLE='-1' AND P.LIBELLEUS ='HORS UE' AND (REGP.FREE1='-2' OR REGP.FREE1='1')
AND (REGP.NATUREVISITE='-2' OR REGP.NATUREVISITE='1') AND REGP.STATUT='1'
)
THEN 'O' 
ELSE 'N' END ENQUETE_TRAVAIL,
CASE WHEN  0<(SELECT COUNT(REGA.FREE2) FROM 
REGLES REGP, REGLE_ACTION RA,REGLES REGA 
WHERE  REGP.REGLEID=RA.REGLEID AND REGA.REGLEID=RA.ACTIONID AND REGA.TYPEREGLE='-24' AND REGP.TYPEREGLE='-1' AND (REGP.FREE1='-2' OR REGP.FREE1=P.PAYSID)
AND (REGP.NATUREVISITE='-2' OR REGP.NATUREVISITE='0') AND REGP.STATUT='1'
)
THEN 'O'
WHEN  P.PAYSID<>'VPARDEFAUT'  AND 0<(SELECT COUNT(REGA.FREE2) FROM 
REGLES REGP ,REGLE_ACTION RA,REGLES REGA 
WHERE  REGP.REGLEID=RA.REGLEID AND REGA.REGLEID=RA.ACTIONID AND REGA.TYPEREGLE='-24' AND REGP.TYPEREGLE='-1' AND P.LIBELLEUS='UE' AND (REGP.FREE1='-2' OR REGP.FREE1='0')
AND (REGP.NATUREVISITE='-2' OR REGP.NATUREVISITE='0') AND REGP.STATUT='1'
)
THEN 'O' 
WHEN   0<(SELECT COUNT(REGA.FREE2) FROM 
REGLES REGP ,REGLE_ACTION RA,REGLES REGA 
WHERE  REGP.REGLEID=RA.REGLEID AND REGA.REGLEID=RA.ACTIONID AND REGA.TYPEREGLE='-24' AND REGP.TYPEREGLE='-1' AND P.LIBELLEUS ='HORS UE' AND (REGP.FREE1='-2' OR REGP.FREE1='1')
AND (REGP.NATUREVISITE='-2' OR REGP.NATUREVISITE='0') AND REGP.STATUT='1'
)
THEN 'O'
ELSE 'N' END ENQUETE_VISITE
 FROM PAYS P );

 COMMIT;


CREATE OR REPLACE VIEW V_ZRR_LST  AS(
  SELECT ID_ZRR,CODE,SUBSTR(LIBELLE,0,50) AS LIBELLE,ACTIVE,ZONE_PARTENAIRE,CENTRE,SITEID,LOCAUX_SENSIBLES FROM ZRR WHERE ACTIVE='O'
);
COMMIT;


CREATE OR REPLACE VIEW V_ZRR_ALL  AS (
  SELECT ID_ZRR,CODE,SUBSTR(LIBELLE,0,50) AS LIBELLE,DEB_VALITE,FIN_VALIDITE,ACTIVE,ZONE_PARTENAIRE,CENTRE,SITEID,LOCAUX_SENSIBLES,DCREA,DDERMAJ FROM ZRR);
COMMIT; 

CREATE VIEW V_LISTE_GRPVALIDEUR AS (
	SELECT DISTINCT G.GRPVALIDEURID,G.GRPVALIDEURN FROM GRPVALIDEUR G,DROITSTELEM D WHERE G.GRPVALIDEURID=D.GRPVALIDEURID );
COMMIT;


EXIT;
