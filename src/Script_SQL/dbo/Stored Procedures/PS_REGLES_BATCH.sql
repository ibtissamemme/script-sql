CREATE PROCEDURE [dbo].[PS_REGLES_BATCH]
AS
DECLARE @MYINDICE INT
DECLARE @FLAG_EXCEPTION NVARCHAR(1)
DECLARE @SITID NVARCHAR(14)
DECLARE @ALL_RULES INT
DECLARE @VISID NVARCHAR(14)
BEGIN
	SET @ALL_RULES=1  -- SI 1 EXECUTER LES REGLES OU FLAG_TIC=1 SINON TOUTES LES REGLES
	SET @MYINDICE=0
	IF EXISTS (SELECT REGLEID FROM REGLES WHERE (PERIODE IS NOT NULL OR (DUREE IS NOT NULL AND CONVERT(VARCHAR(5),CONVERT(DATETIME,DUREE,103),108)<>'00:00')) AND STATUT=1) BEGIN
		DECLARE PREENREG CURSOR
		FOR SELECT VISITEID,SITEID FROM VISITES WHERE STATUTID=2 AND CONVERT(DATETIME,CONVERT(VARCHAR(10),CURRENT_TIMESTAMP,103),103) <=CONVERT(DATETIME,CONVERT(VARCHAR(10),FINPREVU,103),103)  ORDER BY DATECREATION DESC
		Open PREENREG  -- ouverture du curseur
		Fetch NEXT FROM PREENREG
		Into @VISID,@SITID -- Lecture d'une visite
		WHILE @@FETCH_STATUS=0
		BEGIN
			SET @FLAG_EXCEPTION=(SELECT  TOP(1) UPPER(VALEUR)  FROM (SELECT ISNULL(VALEUR,'0') VALEUR,'1' AS A FROM PARAMETRAGE WHERE LIBELLE='OSFIRST' AND SITEID=@SITID UNION SELECT VALEUR,'2' AS A FROM PARAMETRAGE WHERE LIBELLE='OSFIRST' AND SITEID='ALL') AA ORDER BY AA.A)
			EXEC PS_REGLES_TRT_EXT @VISID,@FLAG_EXCEPTION,@ALL_RULES
			Fetch NEXT FROM PREENREG
			Into @VISID,@SITID  -- Lecture d'une visite
			SET @MYINDICE=@MYINDICE+1
		END
		Close  PREENREG  -- fermeture du curseur
		DEALLOCATE PREENREG
	END
 END