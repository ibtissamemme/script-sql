CREATE PROCEDURE [dbo].[PS_UPDATE_AGENDA_JOUR2]
@AGENDA_JOUR2ID VARCHAR(14)
AS
DECLARE @POSTEID INT
DECLARE @SITEID VARCHAR(14)
DECLARE @FLAG VARCHAR(14)
DECLARE @IDENTITY VARCHAR(14)
DECLARE @ID VARCHAR(14)
DECLARE @HEURE_MIS DATETIME
--DECLARE @MISSIONID INT

DECLARE @ANTICIPE INT
DECLARE @LIBMISSION VARCHAR(100)
DECLARE @OBSERVATION VARCHAR(4000)
DECLARE @NEW_STATUT INT
DECLARE @OLD_STATUT INT
DECLARE @DUREE DATETIME
DECLARE @HEUREDEPART DATETIME
DECLARE @TOLERANCE_MIS DATETIME
DECLARE @HEUREJOUR DATETIME
DECLARE @res DATETIME
BEGIN
	SET DATEFIRST 7
	SET @HEUREJOUR=CONVERT(DATETIME,CURRENT_TIMESTAMP,103)
	SET @ANTICIPE=(SELECT TOP 1 OPTION_AVMISS FROM OMNI_PARAM)
	SET @HEURE_MIS=(SELECT  CONVERT(DATETIME,CONVERT(VARCHAR(10),DATEMISSION,103),103)+CONVERT(DATETIME,CONVERT(VARCHAR(5),HEURE,108),103)  FROM AGENDA_JOUR2 WHERE AGENDA_JOUR2ID=@AGENDA_JOUR2ID)
    SET @SITEID=(SELECT SITEID FROM AGENDA_JOUR2 WHERE AGENDA_JOUR2ID=@AGENDA_JOUR2ID)
    SET @TOLERANCE_MIS=(SELECT CONVERT(DATETIME,CONVERT(VARCHAR(5),TOLERANCE,108),103)  FROM VUE_AGENDA2MISSION WHERE AGENDA_JOUR2ID=@AGENDA_JOUR2ID)
	SET @DUREE =(SELECT CONVERT(DATETIME,CONVERT(VARCHAR(5),DUREE,108),103)  FROM VUE_AGENDA2MISSION WHERE AGENDA_JOUR2ID=@AGENDA_JOUR2ID)
	SET @LIBMISSION = (SELECT LIBMISSION FROM VUE_AGENDA2MISSION WHERE AGENDA_JOUR2ID=@AGENDA_JOUR2ID)
	SET @HEUREDEPART = (SELECT CONVERT(DATETIME,DATEMAJ,103)  FROM AGENDA_JOUR2 WHERE AGENDA_JOUR2ID=@AGENDA_JOUR2ID)
	SET @OLD_STATUT = (SELECT STATUT FROM AGENDA_JOUR2 WHERE AGENDA_JOUR2ID=@AGENDA_JOUR2ID)
	SET @NEW_STATUT=dbo.F_GETMISSIONSTATUS(@OLD_STATUT,@TOLERANCE_MIS,@HEURE_MIS,@ANTICIPE,@HEUREJOUR,@DUREE,@HEUREDEPART)
	SET @POSTEID=(SELECT POSTEID FROM AGENDA_JOUR2 WHERE AGENDA_JOUR2ID=@AGENDA_JOUR2ID)
	set @res = CONVERT(DATETIME,@HEURE_MIS+@TOLERANCE_MIS,103)
	--INSERT INTO ALARME(ALARMEID,LIBELLE,DATEMAJ,DATECREATION) VALUES ('-'+@AGENDA_JOUR2ID,CONVERT(VARCHAR,@res,103)+'#'+CAST (dbo.F_GETMISSIONSTATUS(@OLD_STATUT,@TOLERANCE_MIS,@HEURE_MIS,@ANTICIPE,@HEUREJOUR,@DUREE,@HEUREDEPART) AS VARCHAR)+'#'+CONVERT(VARCHAR,@HEURE_MIS,103)+'#'+CONVERT(VARCHAR,@DUREE,103)+'#'+CONVERT(VARCHAR,@TOLERANCE_MIS,103),CURRENT_TIMESTAMP,CURRENT_TIMESTAMP)
	IF @NEW_STATUT<>@OLD_STATUT AND @OLD_STATUT<>7 BEGIN
		UPDATE AGENDA_JOUR2 SET STATUT=dbo.F_GETMISSIONSTATUS(@OLD_STATUT,@TOLERANCE_MIS,@HEURE_MIS,@ANTICIPE,@HEUREJOUR,@DUREE,@HEUREDEPART) WHERE AGENDA_JOUR2ID=@AGENDA_JOUR2ID
		INSERT INTO SEQ_IDENTITY(LIBELLE) VALUES ('OK')
		SET @IDENTITY = (SELECT @@IDENTITY AS ID)
		SET @FLAG = (SELECT TOP 1 SUBSTRING(VERSION, 1, 3) FROM VERSION_SFW)
		SET @ID = @FLAG + @IDENTITY
		IF @NEW_STATUT=2 OR @NEW_STATUT=4 BEGIN
			IF @NEW_STATUT=2 BEGIN
				SET @OBSERVATION= @LIBMISSION+ ' ['+CONVERT(VARCHAR(10),CURRENT_TIMESTAMP,103)+' '+CONVERT(VARCHAR(5),@HEURE_MIS,108)+'] Retard de départ'
			END
			ELSE IF @NEW_STATUT=4 BEGIN
				SET @OBSERVATION= @LIBMISSION+ ' ['+CONVERT(VARCHAR(10),CURRENT_TIMESTAMP,103)+' '+CONVERT(VARCHAR(5),@HEURE_MIS,108)+'] Retard de retour'
			END
			INSERT INTO OJOURNAL(OJOURNALID,EVENEMENTID,PERSONNELDEBUTID,PERSONNELFINID,DEBUT_EFF,FIN_EFF,AGENDA_JOURID,MISSIONTEMPID,AGENDA_JOUR2ID,OBSERVATION,DATECREATION,DATEMAJ,SITEID,POSTEID)
			VALUES (@ID,'-4',-1,-1,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP,0,0,@AGENDA_JOUR2ID,@OBSERVATION,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP,@SITEID,@POSTEID)
		END
	END
END