CREATE PROCEDURE [dbo].[PS_REGLES_TRT_EXT]
  @MYVISITEID  NVARCHAR(14),
 @OSFIRST NVARCHAR(20),
 @ALL_RULES INTEGER,
 @BYPASS NVARCHAR(15)
AS
 DECLARE @MYINDICE INT
 DECLARE @MYDELAI INT
 DECLARE @MYCONDITION INT
 DECLARE @MYDATECREA DATETIME
 DECLARE @MYDATEDEBUT DATETIME
 DECLARE @MYSTATUTVISITE NVARCHAR(50)
 DECLARE @MYACTION INT
 DECLARE @MYMESSAGE NVARCHAR(4000)
 DECLARE @MYMESSAGETORESID NVARCHAR(4000)
 DECLARE @MYMESSAGETOACC NVARCHAR(4000)
 DECLARE @MYCATEGORIE NVARCHAR(30)
 DECLARE @LOCMESSAGE NVARCHAR(4000)
 DECLARE @LOCACTION INT
 DECLARE @MYACTIONBLOQUANTE INT
 DECLARE @LCID INT
 DECLARE @SITEID NVARCHAR(14)
 DECLARE @TRID INT
 DECLARE @MSID NVARCHAR(250)
 DECLARE @MSACC NVARCHAR(250)
 DECLARE @CAT NVARCHAR(30)
 DECLARE @RANID INT
 DECLARE @TMP INT
 DECLARE @OSHASDONE NVARCHAR(50)
 DECLARE @VALIDEUR NVARCHAR(50)
 DECLARE @LASTCOLOR NVARCHAR(50)
 DECLARE @TMPID INT
BEGIN
-- SUPPRIME LES ARBITRAGES RENDUS AVANT SI TYPEVISITEID EST MODIFIE CERTAINS SONT VALABLESPOUR TOUT TYPE DE VISITE (-2)
 DELETE FROM VISITE_REGLE WHERE VISITEID=@MYVISITEID AND REGLEID IN (SELECT REG.REGLEID FROM REGLES REG,VISITES V WHERE
 (REG.TYPEVISITE NOT IN (-2,V.TYPEVISITEID) OR REG.NATUREVISITE<>'-2' OR  REG.NATUREVISITE NOT IN (SELECT CASE WHEN NATUREVISITE='VISITE' THEN 0 ELSE 1 END FROM VISITES WHERE V.VISITEID=@MYVISITEID)) AND V.VISITEID=@MYVISITEID )
 DECLARE EMP_REGLES_EXT CURSOR
 FOR SELECT REG.REGLEID, REG.SITEID,REG.TYPEREGLE,REG.FREE8,REG.RANGREGLE,REG.MESSAGEACC,REG.CATEGORIE FROM REGLES REG,VISITES V WHERE REG.STATUT=1 AND REG.RANGREGLE<>-1 AND ((@ALL_RULES=1 AND REG.FLAG_TIC=1 AND (REG.PERIODE IS NOT NULL OR (REG.DUREE IS NOT NULL AND CONVERT(VARCHAR(5),CONVERT(DATETIME,REG.DUREE,103),108)<>'00:00'))) OR @ALL_RULES=0) AND (REG.NATUREVISITE='-2' OR REG.NATUREVISITE = (SELECT CASE WHEN NATUREVISITE='VISITE' THEN 0 ELSE 1 END FROM VISITES WHERE VISITEID=@MYVISITEID)) AND (REG.TYPEVISITE=V.TYPEVISITEID OR REG.TYPEVISITE=-2) AND (@BYPASS='NOBYPASS' OR @BYPASS='BYPASS' AND REG.BYPASS='0' ) AND V.VISITEID=@MYVISITEID ORDER BY REG.RANGREGLE ASC
 OPEN EMP_REGLES_EXT
 FETCH NEXT FROM EMP_REGLES_EXT
 INTO @LCID,@SITEID,@TRID,@MSID,@RANID,@MSACC,@CAT
 SET @MYACTION=0
 SET @MYMESSAGETORESID=''
 SET @MYMESSAGETOACC=''
 SET @MYCATEGORIE=''
 SET @MYSTATUTVISITE='WEB OK'
 SET @MYMESSAGE=''
 SET @LOCMESSAGE='';
 SET @MYINDICE=0
 SET @MYACTIONBLOQUANTE=0
 SET @VALIDEUR=(SELECT ISNULL(FREE6,'WEB') FROM VISITES WHERE VISITEID=@MYVISITEID)
 SET @LASTCOLOR=(SELECT ISNULL(RES_MOTEUR1,'WEB OK') FROM VISITES WHERE VISITEID=@MYVISITEID)
 WHILE @@FETCH_STATUS = 0
 	BEGIN
		IF EXISTS(SELECT VISITEID FROM VISITES WHERE VISITEID=@MYVISITEID AND SITEID IN (SELECT SITEID FROM V_LISTE_GRPSITE WHERE GRPSITEID=@SITEID))
		BEGIN
			--INSERT INTO ALARME (ALARMEID,LIBELLE,DATEMAJ,DATECREATION) VALUES (@LCID,@MYVISITEID,CURRENt_TIMESTAMp,CURRENt_TIMESTAMp)
			SET @MYMESSAGETORESID=''
			SET @MYMESSAGETOACC=''
			SET @MYMESSAGE=''
			SET @LOCACTION=0
			IF @TRID=0 BEGIN
				EXEC PS_REGLE_INTERDITS @MYVISITEID,@LCID,@LOCACTION OUTPUT,@LOCMESSAGE OUTPUT,@MYACTIONBLOQUANTE OUTPUT
			END
			IF @TRID=-1 BEGIN
				EXEC PS_REGLE_PRECAUTION_ACCES @MYVISITEID,@LCID,@LOCACTION OUTPUT,@LOCMESSAGE OUTPUT,@MYACTIONBLOQUANTE OUTPUT
			END
			IF @TRID=-2 BEGIN
				 EXEC PS_REGLE_DELAI_ANTICIPATION @MYVISITEID,@LCID,@LOCACTION OUTPUT,@LOCMESSAGE OUTPUT,@MYACTIONBLOQUANTE OUTPUT
			END
			IF @TRID=-3 BEGIN
				 EXEC PS_REGLE_CUMUL_VISITES @MYVISITEID,@LCID,@LOCACTION OUTPUT,@LOCMESSAGE OUTPUT,@MYACTIONBLOQUANTE OUTPUT
			END
			IF @TRID=-4 BEGIN
				 EXEC PS_REGLE_ZONE_ACCES @MYVISITEID,@LCID,@LOCACTION OUTPUT,@LOCMESSAGE OUTPUT,@MYACTIONBLOQUANTE OUTPUT
			END
			IF @TRID=-6 BEGIN
				 EXEC PS_REGLE_MCOMPENSATOIRES @MYVISITEID,@LCID,@LOCACTION OUTPUT,@LOCMESSAGE OUTPUT,@MYACTIONBLOQUANTE OUTPUT
			END
			IF @TRID=-7 BEGIN
				 EXEC PS_REGLE_VALIDITE_DOCUMENTS @MYVISITEID,@LCID,@LOCACTION OUTPUT,@LOCMESSAGE OUTPUT,@MYACTIONBLOQUANTE OUTPUT
			END
			IF @TRID=-9 BEGIN
				 EXEC PS_REGLE_SAISIE_RESIDANTS @MYVISITEID,@LCID,@LOCACTION OUTPUT,@LOCMESSAGE OUTPUT,@MYACTIONBLOQUANTE OUTPUT
			END
			IF @TRID=-10 BEGIN
				 EXEC PS_REGLE_TRANSPORT_ADR @MYVISITEID,@LCID,@LOCACTION OUTPUT,@LOCMESSAGE OUTPUT,@MYACTIONBLOQUANTE OUTPUT
			END
			IF @TRID=-12 BEGIN
				 EXEC PS_REGLE_CPPA @MYVISITEID,@LCID,@LOCACTION OUTPUT,@LOCMESSAGE OUTPUT,@MYACTIONBLOQUANTE OUTPUT
			END
			IF @TRID=-13 BEGIN
				 EXEC PS_REGLE_ZRR @MYVISITEID,@LCID,@LOCACTION OUTPUT,@LOCMESSAGE OUTPUT,@MYACTIONBLOQUANTE OUTPUT
			END
			IF @TRID=-14 BEGIN
				 EXEC PS_REGLE_MINEUR @MYVISITEID,@LCID,@LOCACTION OUTPUT,@LOCMESSAGE OUTPUT,@MYACTIONBLOQUANTE OUTPUT
			END
			IF @TRID=-15 BEGIN
				EXEC PS_REGLE_RESTREINTS @MYVISITEID,@LCID,@LOCACTION OUTPUT,@LOCMESSAGE OUTPUT,@MYACTIONBLOQUANTE OUTPUT
			END
			IF @TRID=-16 BEGIN
				EXEC PS_REGLE_LOCALISATIONS @MYVISITEID,@LCID,@LOCACTION OUTPUT,@LOCMESSAGE OUTPUT,@MYACTIONBLOQUANTE OUTPUT
			END
			IF @TRID=-17 BEGIN
				EXEC PS_REGLE_DUREEVISITE @MYVISITEID,@LCID,@LOCACTION OUTPUT,@LOCMESSAGE OUTPUT,@MYACTIONBLOQUANTE OUTPUT
			END
			IF @TRID=-18 BEGIN
				EXEC PS_REGLE_CHAMPS_INCOMPLETS @MYVISITEID,@LCID,@LOCACTION OUTPUT,@LOCMESSAGE OUTPUT,@MYACTIONBLOQUANTE OUTPUT
			END
			DELETE FROM VISITE_REGLE WHERE VISITEID=@MYVISITEID AND REGLEID=@LCID;
			IF @LOCACTION<>0 BEGIN
				SET @MYMESSAGETORESID=@MSID
				SET @MYMESSAGE=@LOCMESSAGE
				SET @MYMESSAGETOACC=@MSACC
				SET @MYCATEGORIE=@CAT
				INSERT INTO VISITE_REGLE (VISITEID,REGLEID,ARBITRAGE,ACTIONBLOQUANTE,RANGREGLE,MES_RESI,MES_VALI,MES_ACC,CATEGORIE,DATECREATION,DATEMAJ)
				VALUES (@MYVISITEID,@LCID,@LOCACTION,@MYACTIONBLOQUANTE,@RANID,SUBSTRING(@MYMESSAGETORESID,0,4000),SUBSTRING(@MYMESSAGE,0,4000),SUBSTRING(@MYMESSAGETOACC,0,4000), SUBSTRING(@MYCATEGORIE,0,2),CURRENT_TIMESTAMP,CURRENT_TIMESTAMP)
			END
		END
		FETCH NEXT FROM EMP_REGLES_EXT
		INTO @LCID,@SITEID,@TRID,@MSID,@RANID,@MSACC,@CAT
	END
	CLOSE EMP_REGLES_EXT
	DEALLOCATE EMP_REGLES_EXT
	IF EXISTS (SELECT REGLEID FROM REGLES WHERE RANGREGLE<>-1 AND STATUT=1 ) BEGIN
		EXEC PS_REGLE_RESULTAT @MYVISITEID,@MYACTION OUTPUT,@MYMESSAGE OUTPUT,@MYMESSAGETORESID OUTPUT,@MYMESSAGETOACC OUTPUT,@MYCATEGORIE OUTPUT
		SET @MYSTATUTVISITE=dbo.GET_STATUTVISITE(@MYACTION)
		IF @VALIDEUR='WEB' BEGIN
			SET @TMPID=0
			UPDATE VISITES SET STATUTVISITE=@MYSTATUTVISITE, RES_MOTEUR1=@MYSTATUTVISITE, FREE8=substring(@MYMESSAGETORESID, 0, 250), FREE9=substring(@MYMESSAGE, 0, 250), FREE2=substring(@MYMESSAGETOACC, 0, 250),LAST_ACTION='WEB',FREE6='WEB', ALERTE=substring(@MYMESSAGE,0,4000),CATEGORIE=substring(@MYCATEGORIE,0,29) WHERE VISITEID=@MYVISITEID;
		END ELSE BEGIN
			IF @OSFIRST='0' BEGIN
				SET @TMPID=0
				UPDATE VISITES SET STATUTVISITE=@MYSTATUTVISITE, RES_MOTEUR1=@MYSTATUTVISITE, FREE8=substring(@MYMESSAGETORESID, 0, 250), FREE9=substring(@MYMESSAGE, 0, 250),FREE2=substring(@MYMESSAGETOACC, 0, 250), LAST_ACTION='WEB', ALERTE=substring(@MYMESSAGE,0,4000),CATEGORIE=substring(@MYCATEGORIE,0,29) WHERE VISITEID=@MYVISITEID;
			END ELSE
				SET @TMPID=0
				UPDATE VISITES SET RES_MOTEUR1=@MYSTATUTVISITE, FREE8=substring(@MYMESSAGETORESID, 0, 250), FREE9=substring(@MYMESSAGE, 0, 250), FREE2=substring(@MYMESSAGETOACC, 0, 250), LAST_ACTION='WEB',ALERTE=substring(@MYMESSAGE,0,4000),CATEGORIE=substring(@MYCATEGORIE,0,29) WHERE VISITEID=@MYVISITEID;
		END
		SET @TMPID=0
		UPDATE VISITES SET DATEMAJ=CURRENT_TIMESTAMP,DATESYNCHRO=NULL,RES_MOTEUR2=@LASTCOLOR WHERE VISITEID=@MYVISITEID;
	END
 END