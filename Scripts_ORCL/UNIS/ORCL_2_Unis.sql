-- *******************************************************************************
-- *                                                                             *
-- *  U N I S   ORACLE                 Date de dernière mise à jour : 20/04/2010 *
-- *                                                                             *
-- *******************************************************************************
--
--
--
--  Table ACTIONCONTACT
CREATE TABLE ACTIONCONTACT (
  CODEACTIONCONTACT VARCHAR2(14 CHAR) NOT NULL,
  LIBELLE VARCHAR2(35 CHAR),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE
);

--  Table ADRESSE
CREATE TABLE ADRESSE (
  ADRESSEID VARCHAR2(14 CHAR) NOT NULL,
  TYPEADRESSEID NUMBER(*, 0),
  SOCIETE VARCHAR2(80 CHAR),
  NOM VARCHAR2(35 CHAR),
  ADRESSE BLOB,
  CODEPOSTAL VARCHAR2(10 CHAR),
  VILLE VARCHAR2(40 CHAR),
  TELEPHONE VARCHAR2(20 CHAR),
  FAX VARCHAR2(20 CHAR),
  OBSERVATION BLOB,
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_ADRESSEID PRIMARY KEY (ADRESSEID));

--  Table AGENDAJOUR2AGENT
CREATE TABLE AGENDAJOUR2AGENT (
  AGENDAJOUR2ID NUMBER(10, 0),
  PERSONNELID NUMBER(10, 0),
  NOMPRENOM VARCHAR2(50 CHAR)
);

--  Table AGENDA_JOUR
CREATE TABLE AGENDA_JOUR (
  AGENDA_JOURID NUMBER(10, 0) NOT NULL,
  JOURID NUMBER(10, 0),
  HEURE DATE,
  TOLERANCE DATE,
  MISSIONID NUMBER(10, 0),
  POSTEID NUMBER(10, 0),
  STATUT NUMBER(10, 0),
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE,
  SITEID  VARCHAR2(14 CHAR),
CONSTRAINT PK_AGENDA_JOURID PRIMARY KEY (AGENDA_JOURID));

--  Table AGENDA_JOUR2
CREATE TABLE AGENDA_JOUR2 (
  AGENDA_JOUR2ID NUMBER(10, 0) NOT NULL,
  AGENDA_JOURID NUMBER(10, 0),
  MISSIONTEMPID NUMBER(10, 0),
  HEURE DATE,
  TOLERANCE DATE,
  MISSIONID NUMBER(10, 0),
  POSTEID NUMBER(10, 0),
  STATUT NUMBER(10, 0),
  DATEMISSION DATE,
  ETAT NUMBER(10, 0),
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE,
  SITEID  VARCHAR2(14 CHAR),
CONSTRAINT PK_AGENDA_JOUR2ID PRIMARY KEY (AGENDA_JOUR2ID));

--  Table AGENTPRESENT
CREATE TABLE AGENTPRESENT (
  PERSONNELID NUMBER(10, 0),
  NOMPRENOM VARCHAR2(50 CHAR),
  ENTREE DATE,
  SORTIE DATE,
  SURSITE NUMBER(*, 0),
  PARPRISE NUMBER(*, 0),
  FONCTION VARCHAR2(35 CHAR),
  SITEID  VARCHAR2(14 CHAR),
  POSTEID NUMBER(10)
);

--  Table AGENTPRESENTLOG
CREATE TABLE AGENTPRESENTLOG (
  AGENTPRESENTLOGID NUMBER(10, 0) NOT NULL,
  PERSONNELID NUMBER(10, 0),
  NOMPRENOM VARCHAR2(50 CHAR),
  PASSAGE DATE,
  ACTION NUMBER(*, 0),
  PARPRISE NUMBER(*, 0),
  SITEID  VARCHAR2(14 CHAR),
  POSTEID NUMBER(10),
CONSTRAINT PK_AGENTPRESENTLOGID PRIMARY KEY (AGENTPRESENTLOGID));

--  Table ALARME
CREATE TABLE ALARME (
  ALARMEID NUMBER(10, 0) NOT NULL,
  LIBELLE VARCHAR2(40 CHAR),
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE,
CONSTRAINT PK_ALARMEID PRIMARY KEY (ALARMEID));

--  Table AMENAGEMENT
CREATE TABLE AMENAGEMENT (
  CODEAMENAGEMENT VARCHAR2(14 CHAR) NOT NULL,
  LIBELLE VARCHAR2(35 CHAR),
  FIXE NUMBER(*),
  PLANIMPLANTATION BLOB,
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
  COEFFICIENT FLOAT,
CONSTRAINT PK_CODEAMENAGEMENT PRIMARY KEY (CODEAMENAGEMENT));

--  Table AMENAGSALLE
CREATE TABLE AMENAGSALLE (
  CODESALLE VARCHAR2(14 CHAR) NOT NULL,
  CODEAMENAGEMENT VARCHAR2(14 CHAR) NOT NULL,
  CAPACITE FLOAT,
  PLANIMPLANTATION BLOB,
  PREPARATION DATE,
  RANGEMENT DATE,
  SORTORDER INTEGER,
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_CODESALLEAMENAGEMENT PRIMARY KEY (CODESALLE, CODEAMENAGEMENT));

-- TABLE ARMOIRE
CREATE TABLE ARMOIRE (
  ARMOIREID VARCHAR2(14 CHAR) not null,
  LIBELLE VARCHAR2(35 CHAR),
  NUMERO number,
  CAPACITE number,
  NBELEMENT number,
  ISACTIF number,
  SITEID VARCHAR2(14 CHAR),
  DATECREATION date not null,
  DATEMAJ date
);

--  Table ARTICLE
CREATE TABLE ARTICLE (
  ALGOCALCPRIX NUMBER(*),
  CODEARTICLE VARCHAR2(14 CHAR) NOT NULL,
  CODEFAMILLE VARCHAR2(14 CHAR),
  CODESOUSFAMILLE VARCHAR2(14 CHAR),
  CODETVA VARCHAR2(14 CHAR),
  CODEMARQUE VARCHAR2(14 CHAR),
  CODERARTICLES VARCHAR2(14 CHAR),
  DESCRIPTION BLOB,
  FULLNAME VARCHAR2(80 CHAR),
  IMAGE BLOB,
  LIBELLE VARCHAR2(50 CHAR),
  LISTEPRIX NUMBER(*),
  MARQUE VARCHAR2(35 CHAR),
  PHONKEY VARCHAR2(35 CHAR),
  PRIXACHATHT FLOAT,
  PRIXVENTEHT FLOAT,
  PRIXVENTETTC FLOAT,
  PRIXPUBLICHT FLOAT,
  REFERENCE VARCHAR2(10 CHAR),
  REFCONSTRUCTEUR VARCHAR2(1000 CHAR),
  TAUXTVA FLOAT,
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
  QUANTITE INTEGER,
  GESTION INTEGER,
  HDEBUT  DATE,
  HFIN    DATE,
  SITEID VARCHAR(14),
CONSTRAINT PK_CODEARTICLE PRIMARY KEY (CODEARTICLE));

--  Table ARTICLEDEFAULT
CREATE TABLE ARTICLEDEFAULT (
  CODEARTICLEDEFAULT VARCHAR2(14 CHAR) NOT NULL,
  CODETYPEDEFAULT VARCHAR2(14 CHAR),
  CODEARTICLE VARCHAR2(14 CHAR),
  QUANTITE NUMBER(*),
  SORTORDER NUMBER(*),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_CODEARTICLEDEFAULT PRIMARY KEY (CODEARTICLEDEFAULT));

--  Table AUTOCLE
CREATE TABLE AUTOCLE (
  CLEID VARCHAR2(14 CHAR),
  INDIVIDUID VARCHAR2(15 CHAR),
  NOM VARCHAR2(100 CHAR),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE
);

--  Table BADGES
CREATE TABLE BADGES (
  BADGEID VARCHAR2(14 CHAR) NOT NULL,
  EXTERNALID VARCHAR2(24 CHAR),
  LIBELLE VARCHAR2(35 CHAR),
  FORMAT BLOB,
  OBSERVATION BLOB,
  HAUTEUR INT,
  LARGEUR INT,
  STATUT INT,
  SITEID VARCHAR2(14 CHAR),
  STATUTVISITEURID VARCHAR2(14 CHAR),
  TYPEVISITEID INT,
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_BADGEID PRIMARY KEY (BADGEID));

CREATE TABLE BADGES_ELEMENTS
(
BADGES_ELEMENTID    VARCHAR2(14 CHAR) PRIMARY KEY,
BADGEID    VARCHAR2(14 CHAR) NOT NULL,
BADGES_IMAGEID    VARCHAR2(14 CHAR),
NATURE    VARCHAR2(35 CHAR),
VALEUR    VARCHAR2(4000 CHAR),
CHAMP    VARCHAR2(50 CHAR),
POLICE    VARCHAR2(50 CHAR),
TAILLE    INT,
ALIGNEMENT VARCHAR2(15 CHAR),
GRAS    INT DEFAULT 0,
ITALIQUE    INT DEFAULT 0,
SOULIGNE    INT DEFAULT 0,
COLOR    INT,
BACKGROUND_COLOR    INT,
HAUT    INT,
GAUCHE    INT,
LARGEUR    INT,
HAUTEUR    INT,
BORDURE INT,
SUBSTR_DEBUT INT,
SUBSTR_LONG INT,
RANG INT,
TRANSPARENT INT,
DATECREATION    DATE NOT NULL,
DATEMAJ    DATE NOT NULL
);
COMMIT;

CREATE TABLE BADGES_ELEMENTS_TMP
(
BADGES_ELEMENTID    VARCHAR2(14 CHAR) PRIMARY KEY,
BADGEID    VARCHAR2(14 CHAR) NOT NULL,
BADGES_IMAGEID    VARCHAR2(14 CHAR),
NATURE    VARCHAR2(35 CHAR),
VALEUR    VARCHAR2(4000 CHAR),
CHAMP    VARCHAR2(50 CHAR),
POLICE    VARCHAR2(50 CHAR),
TAILLE    INT,
ALIGNEMENT VARCHAR2(15 CHAR),
GRAS    INT DEFAULT 0,
ITALIQUE    INT DEFAULT 0,
SOULIGNE    INT DEFAULT 0,
COLOR    INT,
BACKGROUND_COLOR    INT,
HAUT    INT,
GAUCHE    INT,
LARGEUR    INT,
HAUTEUR    INT,
BORDURE INT,
SUBSTR_DEBUT INT,
SUBSTR_LONG INT,
RANG INT,
TRANSPARENT INT,
DATECREATION    DATE NOT NULL,
DATEMAJ    DATE NOT NULL
);
COMMIT;

CREATE TABLE BADGES_IMAGES
(
BADGES_IMAGEID    VARCHAR2(14 CHAR) PRIMARY KEY,
IMAGE BLOB,
CONTENTTYPE VARCHAR2(50 CHAR),
SOURCEFILENAME VARCHAR2(100 CHAR),
DATASIZE INT,
DATECREATION    DATE NOT NULL,
DATEMAJ    DATE NOT NULL
);
COMMIT;

--  Table BATIMENT
CREATE TABLE BATIMENT (
  BATIMENTID VARCHAR2(14 CHAR) NOT NULL,
  EXTERNALID VARCHAR2(24 CHAR),
  SITEID VARCHAR2(14 CHAR),
  PLANID VARCHAR2(14 CHAR),
  LIBELLE VARCHAR2(60 CHAR),
  NOBAT VARCHAR2(15 CHAR),
  ADRESSE BLOB,
  CP VARCHAR2(10 CHAR),
  VILLE VARCHAR2(35 CHAR),
  PAYS VARCHAR2(35 CHAR),
  TELEPHONE VARCHAR2(20 CHAR),
  FAX VARCHAR2(20 CHAR),
  SORTORDER NUMBER(*),
  PROVINCE VARCHAR2(35 CHAR),
  IMMEUBLE INT,
  DATEMAJ DATE NOT NULL,
  DATECREATION DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_BATIMENTID PRIMARY KEY (BATIMENTID));

CREATE TABLE BONTRAVAIL
(
BONTRAVAILID    INTEGER    PRIMARY KEY,
BTR    VARCHAR2(35 CHAR),
SITEID VARCHAR2(14 CHAR),
DATEVALIDITE DATE,
DATECREATION    DATE    NOT NULL,
DATEMAJ    DATE    NOT NULL
);
COMMIT;

--  Table BUREAUX
CREATE TABLE BUREAUX (
  BUREAUID VARCHAR2(14 CHAR) NOT NULL,
  ETAGEID VARCHAR2(14 CHAR) NOT NULL,
  SORTORDER NUMBER(*, 0),
  BUREAU VARCHAR2(15 CHAR) NOT NULL,
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_BUREAUID PRIMARY KEY (BUREAUID));

--  Table CASIER
CREATE TABLE CASIER (
  CASIERID NUMBER(*, 0) NOT NULL,
  BOITE VARCHAR2(6 CHAR),
  CASIER VARCHAR2(6 CHAR),
  STATUTCASIER VARCHAR2(1 CHAR),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_CASIERID PRIMARY KEY (CASIERID));

--  Table CFGARTICLESCURRENT
CREATE TABLE CFGARTICLESCURRENT (
  CODEMARQUE VARCHAR2(14 CHAR),
  CODEFAMILLE VARCHAR2(14 CHAR),
  CODESOUSFAMILLE VARCHAR2(14 CHAR),
  QUANTITE NUMBER(*)
);

--  Table CFGDEFAULTAGENDA
CREATE TABLE CFGDEFAULTAGENDA (
  CODECIVILITE NUMBER(*, 0),
  CODEACTION VARCHAR2(1 CHAR),
  CODEORIGINECONTACT VARCHAR2(14 CHAR)
);

CREATE TABLE CFGETAT (
   CFGETATID    VARCHAR2(50 CHAR),
   ETATNOM      VARCHAR2(50 CHAR),
   VISIBLE      INTEGER,
   REQUETE      VARCHAR2(50 CHAR),
   FILTRE       VARCHAR2(250 CHAR),
   DATECREATION DATE,
   DATEMAJ      DATE
);

CREATE TABLE CFGGSALLES (
  SITE           VARCHAR2(30 CHAR),
  NETTOYAGE       INTEGER,
  E_EMAIL        VARCHAR2(15 CHAR),
  E_HOST         VARCHAR2(50 CHAR),
  E_REPERTOIRE   VARCHAR2(50 CHAR),
  E_USERID       VARCHAR2(50 CHAR),
  E_DESTINATAIRE INTEGER
);

--  Table CFGGSALLESDEFAULT
CREATE TABLE CFGGSALLESDEFAULT (
  CODETYPERESERVATION VARCHAR2(14 CHAR),
  CODESTATUT VARCHAR2(14 CHAR),
  CODEAMMENAGEMENT VARCHAR2(14 CHAR),
  CODETYPETARIF VARCHAR2(14 CHAR),
  HEUREDEBUT DATE,
  HEUREFIN DATE,
  PREPARATIONDEFAUT DATE,
  RANGEMENTDEFAUT DATE
);

--  Table CFGGSALLESPARAM
CREATE TABLE CFGGSALLESPARAM (
  HEUREOUVERTURE DATE,
  HEUREFERMETURE DATE,
  TRANCHE DATE,
  PRINTPREVIEW NUMBER(*),
  SURBOOKING NUMBER(*),
  REFRESERVATION VARCHAR2(15 CHAR),
  FORMATREFRESERVATION VARCHAR2(15 CHAR),
  GESTIONINTERNE NUMBER(*),
  GESTIONINTERNEMONOSOC NUMBER(*),
  CODESOCIETEINTERNE VARCHAR2(14 CHAR),
  ACTIVATIONTEMPSPREPA NUMBER,
  CTRL_PA_HORSHORAIRE INTEGER,
  CTRL_NB_PARTICIPANT INTEGER,
  CTRL_MATERIEL_DISPO INTEGER,
  RESA_ORDRE_SALLE  INTEGER,
  RESA_PRESTA_STYLE INTEGER,
  FILTRE_ORDRE_TRI  INTEGER,
  DRAGDROP NUMBER,
  CTRLDEFAUTHORAIRE NUMBER,
  CTRLDEFAUTPRESTA NUMBER
);

--  Table CFGPLANNING
CREATE TABLE CFGPLANNING (
  USERID VARCHAR2(14 CHAR) NOT NULL,
  DERNIEREDATE DATE,
  PERIODE NUMBER(2, 0) NOT NULL,
  POSITIONJOUR DATE,
  DELEGANT VARCHAR2(14 CHAR),
  CODESALLE VARCHAR2(14 CHAR)
);

--  Table CFGPRODUIT
CREATE TABLE CFGPRODUIT (
  CODETVA VARCHAR2(14 CHAR),
  LISTEPRIX NUMBER(*),
  MARGE FLOAT,
  OBSERVATIONDEVIS BLOB,
  OBSERVATIONFACTURE BLOB,
  IMPDETAILDEVIS NUMBER(*),
  IMPDETAILFACTURE NUMBER(*),
  PROCHAINENO NUMBER(*, 0),
  FORMATNO VARCHAR2(15 CHAR)
);

-- TABLE CFG_FICHIER
CREATE TABLE CFG_FICHIER (
  CFG_FICHIERID NUMBER PRIMARY KEY,
  TYPECFG VARCHAR2(20),
  LIBELLE VARCHAR2(200 CHAR),
  DOCUMENT1 VARCHAR2(4000 CHAR),
  DOCUMENT2 VARCHAR2(4000 CHAR),
  DOCUMENT BLOB,
  TYPEFILE INTEGER,
  CONTENTTYPE VARCHAR2(50 CHAR),
  DATASIZE INTEGER,
  STATUT INTEGER DEFAULT 1,
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE
);
COMMIT;

--  Table CIVILITE
CREATE TABLE CIVILITE (
  CODECIVILITE NUMBER(*, 0) NOT NULL,
  CIVILITE VARCHAR2(30 CHAR),
  LIBELLECOURT VARCHAR2(5 CHAR),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_CODECIVILITE PRIMARY KEY (CODECIVILITE));

--  Table CLEFS
CREATE TABLE CLEFS (
  CLEID VARCHAR2(14 CHAR) NOT NULL,
  REFERENCE VARCHAR2(14 CHAR),
  ACCROCHAGE1 VARCHAR2(14 CHAR),
  ACCROCHAGE2 VARCHAR2(14 CHAR),
  NIVEAU NUMBER(*, 0),
  NATURE NUMBER(*, 0),
  ETAT NUMBER(*, 0),
  DUREEAUTO NUMBER(*, 0),
  LIEU VARCHAR2(100 CHAR),
  LIBELLE VARCHAR2(100 CHAR),
  SITEID VARCHAR2(14 CHAR),
  TYPECLEF VARCHAR2(100 CHAR),
  COMBINAISON VARCHAR2(100 CHAR),
  SERVICE VARCHAR2(100 CHAR),
  TYPEACCES VARCHAR2(100 CHAR),
  NODEMANDE VARCHAR2(100 CHAR),
  AUTOSPECIAL NUMBER(*, 0),
  NATURES VARCHAR2(100 CHAR),
  TAG VARCHAR2(30 CHAR),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_CLEID PRIMARY KEY (CLEID));

--  Table COLISEMIS
CREATE TABLE COLISEMIS (
  COLISID VARCHAR2(14 CHAR) NOT NULL,
  INTERLOCUTEURID VARCHAR2(14 CHAR),
  RESIDANTID VARCHAR2(14 CHAR),
  STATUTCOLIS VARCHAR2(1 CHAR),
  NBCOLIS NUMBER(*, 0),
  DATEAR DATE,
  NUMAR VARCHAR2(20 CHAR),
  LETTRECOLIS VARCHAR2(1 CHAR),
  TYPEENVOI VARCHAR2(20 CHAR),
  OBSERVATION VARCHAR2(4000),
  ADRESSEID VARCHAR2(14 CHAR) NOT NULL,
  TICKET VARCHAR2(50 CHAR),
  POIDS VARCHAR2(10 CHAR),
  D_ACOURSE DATE,
  D_ENLPREVU DATE,
  D_ENLREEL DATE,
  D_DEPPREVU DATE,
  D_DEPREELLE DATE,
  PRIX NUMBER,
  D_APROB DATE,
  GENRE_PROB VARCHAR2(14 CHAR),
  GUICHETID VARCHAR2(14 CHAR),
  ID_STATUTCOLIS INTEGER,
  TRACKING VARCHAR2(500 CHAR),
  TRACKING_CRM VARCHAR2(500 CHAR),
  TRACKING_TRANSPORTEUR VARCHAR2(500 CHAR),
  OFICHIERID INTEGER,
  LIEU VARCHAR2(50 CHAR),
  SERVICEID VARCHAR2(14 CHAR),
  VALEUR VARCHAR2(10 CHAR),
  NATURECOLISID INTEGER,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
  DATECREATION DATE,
CONSTRAINT PK_COLISID PRIMARY KEY (COLISID));

--  Table COLISRECU
CREATE TABLE COLISRECU (
  COLISID VARCHAR2(14 CHAR) NOT NULL,
  INTERLOCUTEURID VARCHAR2(14 CHAR),
  RESIDANTID VARCHAR2(14 CHAR),
  ARRIVEE DATE,
  PREVENU DATE,
  PREVENUID VARCHAR2(14 CHAR),
  NOTEPREVENU BLOB,
  RELANCE DATE,
  RELANCEID VARCHAR2(14 CHAR),
  ENLEVE DATE,
  ENLEVEID VARCHAR2(14 CHAR),
  NOTEENLEVE BLOB,
  STATUTCOLIS VARCHAR2(1 CHAR),
  OBSERVATION BLOB,
  ADRESSEID VARCHAR2(14 CHAR),
  NBCOLIS NUMBER(*, 0),
  LIEU VARCHAR2(50 CHAR),
  GUICHETID VARCHAR2(14 CHAR),
  ID_STATUTCOLIS INTEGER,
  TRACKING VARCHAR2(500 CHAR),
  TRACKING_CRM VARCHAR2(500 CHAR),
  TRACKING_TRANSPORTEUR VARCHAR2(500 CHAR),
  TICKET VARCHAR2(50 CHAR),
  OFICHIERID INTEGER,
  POIDS VARCHAR2(10 CHAR),
  SERVICEID VARCHAR2(14 CHAR),
  NATURECOLISID INTEGER,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE NOT NULL,
  DATECREATION DATE,
CONSTRAINT PK_RECUCOLISID PRIMARY KEY (COLISID));

CREATE TABLE NATURECOLIS (
  NATURECOLISID INTEGER PRIMARY KEY,
  LIBELLE VARCHAR2(50 CHAR),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL);
COMMIT;

--  Table CONSIGNE
CREATE TABLE CONSIGNE (
  CONSIGNEID VARCHAR2(14 CHAR) NOT NULL,
  INTERLOCUTEURID VARCHAR2(14 CHAR),
  RESIDANTID VARCHAR2(14 CHAR),
  OBJET BLOB,
  DATELU DATE,
  OBSERVATION BLOB,
  STATUTCONSIGNE VARCHAR2(1 CHAR),
  TYPECONSIGNE VARCHAR2(35 CHAR),
  TYPECONSIGNEID NUMBER(*, 0),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
  SITEID VARCHAR2(14),
  EMETTEUR_NOM VARCHAR2(70),
  EMETTEUR_PROFIL VARCHAR2(50),
  EMETTEUID VARCHAR2(14),
  TYPEOBJET INT,
CONSTRAINT PK_CONSIGNEID PRIMARY KEY (CONSIGNEID));

--  Table CONSIGNETEMP
CREATE TABLE CONSIGNETEMP (
  CONSIGNETEMPID NUMBER(10, 0) NOT NULL,
  AUTEURID NUMBER(10, 0),
  SITEID VARCHAR2(14 CHAR),
  POSTEID NUMBER(10, 0),
  QUALIFID NUMBER(10, 0),
  DEBUT DATE,
  FIN DATE,
  OBSERVATION VARCHAR2(1000 CHAR),
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE,
CONSTRAINT PK_CONSIGNETEMPID PRIMARY KEY (CONSIGNETEMPID));

--  Table CONSIGNETEMP2
CREATE TABLE CONSIGNETEMP2 (
  CONSIGNETEMP2ID NUMBER(10, 0) NOT NULL,
  AUTEURID NUMBER(10, 0),
  SITEID VARCHAR2(14 CHAR),
  POSTEID NUMBER(10, 0),
  QUALIFID NUMBER(10, 0),
  DEBUT DATE,
  FIN DATE,
  OBSERVATION VARCHAR2(1000 CHAR),
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE,
CONSTRAINT PK_CONSIGNETEMP2ID PRIMARY KEY (CONSIGNETEMP2ID));

CREATE TABLE CONSTEMP_SITE (
  CONSIGNETEMPID NUMBER(10, 0),
  SITEID VARCHAR2(14 CHAR)
);

CREATE TABLE CONSTEMP_POSTE (
  CONSIGNETEMPID NUMBER(10, 0),
  POSTEID NUMBER(10, 0)
);

CREATE TABLE CONSTEMP_QUALIF (
  CONSIGNETEMPID NUMBER(10, 0),
  QUALIFID NUMBER(10, 0)
);

CREATE TABLE CONSTEMP_AGENT (
  CONSIGNETEMPID NUMBER(10, 0),
  PERSONNELID NUMBER(10, 0)
);

--  Table CONTACT
CREATE TABLE CONTACT (
  SOCIETEID VARCHAR2(14 CHAR),
  CODECONTACT VARCHAR2(14 CHAR) NOT NULL,
  DATECONTACT DATE,
  DATEACTION DATE,
  INTERLOCUTEURID VARCHAR2(14 CHAR),
  CODEORIGINECONTACT VARCHAR2(14 CHAR),
  CODEDOSSIER VARCHAR2(14 CHAR),
  CODEAFFAIRE VARCHAR2(14 CHAR),
  USERID VARCHAR2(14 CHAR),
  CODECOLLABOACTION VARCHAR2(14 CHAR),
  CODEACTIONCONTACT VARCHAR2(14 CHAR),
  CONTACTGENERE NUMBER(*, 0),
  ACTIONAUTO NUMBER(*, 0),
  ACTIONFAITLE DATE,
  ACTIONFAIT NUMBER(*, 0),
  TEXTCONTACT BLOB,
  TEXTACTION BLOB,
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_CODECONTACT PRIMARY KEY (CODECONTACT));

--  Table DEPARTEMENT
CREATE TABLE DEPARTEMENT (
  DEPTID VARCHAR2(14 CHAR) NOT NULL,
  SOCIETEID VARCHAR2(14 CHAR),
  EXTERNALID VARCHAR2(24 CHAR),
  LIBELLE VARCHAR2(40 CHAR),
  OBSERVATION BLOB,
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_DEPTID PRIMARY KEY (DEPTID));

--  Table DEVIS
CREATE TABLE DEVIS (
  CODEDEVIS VARCHAR2(14 CHAR) NOT NULL,
  SOCIETEID VARCHAR2(14 CHAR),
  INTERLOCUTEURID VARCHAR2(14 CHAR),
  CODEAFFAIRE VARCHAR2(14 CHAR),
  CODECLIENT VARCHAR2(14 CHAR) NOT NULL,
  COMMERCIALID VARCHAR2(14 CHAR),
  CODEMODEPAIE VARCHAR2(14 CHAR),
  CODEDELAIPAIE VARCHAR2(14 CHAR),
  CODEINTERVENNANT VARCHAR2(14 CHAR),
  NODEVIS VARCHAR2(15 CHAR),
  LIBELLE VARCHAR2(80 CHAR),
  INDICEDEVIS NUMBER(*),
  DATEEMISSION DATE NOT NULL,
  TOTALAR FLOAT,
  REMISE FLOAT,
  REMISE_SALLE FLOAT,
  TOTALHT FLOAT,
  TOTALTVA FLOAT,
  TOTALTTC FLOAT,
  WIZARD NUMBER(*),
  OBSERVATION BLOB,
  ACOMPTE FLOAT,
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_CODEDEVIS PRIMARY KEY (CODEDEVIS));

--  Table DIPLOME
CREATE TABLE DIPLOME (
  DIPLOMEID NUMBER(5, 0) NOT NULL,
  PERSONNELID NUMBER(10, 0),
  LIBELLE VARCHAR2(40 CHAR),
  OBTENTION DATE,
  RENOUVELLEMENT DATE,
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE
);

--  Table EQUIPEMENTFIXE
CREATE TABLE EQUIPEMENTFIXE (
  CODEEQUIPEMENTFIXE VARCHAR2(14 CHAR) NOT NULL,
  LIBELLE VARCHAR2(35 CHAR),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_CODEEQUIPEMENTFIXE PRIMARY KEY (CODEEQUIPEMENTFIXE));

--  Table ETAGES
CREATE TABLE ETAGES (
  ETAGEID VARCHAR2(14 CHAR) NOT NULL,
  BATIMENTID VARCHAR2(14 CHAR),
  ETAGE VARCHAR2(7 CHAR),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_ETAGEID PRIMARY KEY (ETAGEID));

CREATE TABLE ETATS
(
ETATID        INT    PRIMARY KEY,
LIBELLE        VARCHAR2(100 CHAR),
REQUETE_MSSQL        VARCHAR2(4000 CHAR),
REQUETE_ORACLE        VARCHAR2(4000 CHAR),
MODIFICATION    VARCHAR2(1000 CHAR),
MODIFICATION_OPERATEUR    VARCHAR2(1000 CHAR),
MODIFICATION_VALEUR    VARCHAR2(1000 CHAR),
DATECREATION    DATE NOT NULL,
DATEMAJ            DATE NOT NULL
);
COMMIT;

--  Table EVENEMENT
CREATE TABLE EVENEMENT (
  EVENEMENTID NUMBER(10, 0) PRIMARY KEY,
  LIBELLE VARCHAR2(40 CHAR),
  RAPPORTID NUMBER(10, 0),
  CONSIGNEID NUMBER(10, 0),
  ISRAPPORT NUMBER(10, 0),
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE,
  DOUBLE_SIGNATURE NUMBER(10, 0),
  SITEID  VARCHAR2(14 CHAR),
  COLOR NUMBER(10),
  GRPEVENEMENTID INTEGER DEFAULT -1
);

--  Table EVENEMENT_TYPE
CREATE TABLE EVENEMENT_TYPE (
  EVENEMENT_TYPEID NUMBER(10, 0) NOT NULL,
  EVENEMENTID NUMBER(10, 0),
  LIBELLE VARCHAR2(40 CHAR),
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE
);

CREATE TABLE EVENEMENT_SITE (
  EVENEMENTID NUMBER(10, 0),
  SITEID VARCHAR2(14 CHAR)
);

CREATE TABLE EVENEMENT_DEST_SITE (
  EVENEMENTID      NUMBER(10, 0),
  GROUPEDESTID     NUMBER(10, 0),
  SITEID           VARCHAR2(14 CHAR)
);

--  Table EVTPERSONNEL
CREATE TABLE EVTPERSONNEL (
  PERSONNELID NUMBER(10, 0) NOT NULL,
  EVENEMENTID NUMBER(10, 0),
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE
);

--  Table FACTURE
CREATE TABLE FACTURE (
  CODEFACTURE VARCHAR2(14 CHAR) NOT NULL,
  CODEAFFAIRE VARCHAR2(14 CHAR),
  CODECLIENT VARCHAR2(14 CHAR) NOT NULL,
  RESIDANTID VARCHAR2(14 CHAR),
  CODEMODEPAIE VARCHAR2(14 CHAR),
  CODEDELAIPAIE VARCHAR2(14 CHAR),
  NOFACTURE VARCHAR2(15 CHAR),
  DATEEMISSION DATE,
  TOTALHT FLOAT,
  TOTALTVA FLOAT,
  TOTALTTC FLOAT,
  REGLE NUMBER(*),
  DATEREGLEMENT DATE,
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_CODEFACTURE PRIMARY KEY (CODEFACTURE));

--  Table FAMILLE
CREATE TABLE FAMILLE (
  CODEFAMILLE VARCHAR2(14 CHAR) NOT NULL,
  LIBELLE VARCHAR2(35 CHAR),
  REMARQUES BLOB,
  LISTEPRIX NUMBER(*),
  IMAGE BLOB,
  MARGE FLOAT,
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_CODEFAMILLE PRIMARY KEY (CODEFAMILLE));

--  Table FONCTION
CREATE TABLE FONCTION (
  CODEFONCTION NUMBER(*, 0) NOT NULL,
  LIBELLE VARCHAR2(35 CHAR),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_CODEFONCTION PRIMARY KEY (CODEFONCTION));

--  Table FORMATION
CREATE TABLE FORMATION (
  FORMATIONID NUMBER(10, 0) NOT NULL,
  PERSONNELID NUMBER(10, 0),
  LIBELLE VARCHAR2(40 CHAR),
  DATE_DEBUT DATE,
  DATE_FIN DATE,
  INSTRUCTEUR VARCHAR2(40 CHAR),
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE
);


--  Table GROUPE
CREATE TABLE GROUPE (
  GROUPEID VARCHAR2(14 CHAR) NOT NULL,
  EXTERNALID VARCHAR2(24 CHAR),
  GROUPE VARCHAR2(80 CHAR),
  ADRESSE BLOB,
  CODEPOSTAL VARCHAR2(10 CHAR),
  VILLE VARCHAR2(40 CHAR),
  PROVINCE VARCHAR2(35 CHAR),
  PAYS VARCHAR2(35 CHAR),
  INTERDIT VARCHAR2(1 CHAR),
  DEBUTINTERDIT DATE,
  FININTERDIT DATE,
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_GROUPEID PRIMARY KEY (GROUPEID));

CREATE TABLE GROUPEDEST (
  GROUPEDESTID     NUMBER(10, 0) PRIMARY KEY,
  LIBELLE          VARCHAR2(50 CHAR),
  TOADDRESS        VARCHAR2(2000 CHAR),
  SITEID           VARCHAR2(14 CHAR),
  DATECREATION     DATE,
  DATEMAJ          DATE
);

CREATE TABLE GRPUSER_TYPEDOCUMENT
( GRPUSERID VARCHAR2(14) NOT NULL,
  TYPEDOCUMENTID NUMBER NOT NULL,
  CONSTRAINT PK_GRPUSER_TYPDOC PRIMARY KEY (GRPUSERID, TYPEDOCUMENTID));
 COMMIT;

CREATE TABLE OBJVISITE
( OBJVISITEID NUMBER NOT NULL PRIMARY KEY,
  LIBELLE VARCHAR2(100),
  DATECREATION DATE,
  DATEMAJ DATE,
  DATESYNCHRO DATE);

  
CREATE TABLE GRPUSER (
   GRPUSERID      VARCHAR2(14 CHAR) PRIMARY KEY,
   LIBELLE        VARCHAR2(50 CHAR),
   NIVEAU         VARCHAR2(14 CHAR),
   STATUT         VARCHAR2(14 CHAR),
   STATUTCHECK    INTEGER,
   SURRESERVATION VARCHAR2(1 CHAR),
   RESAPERIODIQUE VARCHAR2(1 CHAR),
   ACCESDRAGDROP  VARCHAR2(1 CHAR),
   PLANNING       VARCHAR2(5 CHAR),
   RESA           VARCHAR2(15 CHAR),
   PRESTA         VARCHAR2(15 CHAR),
   DATECREATION DATE,
   DATEMAJ      DATE,
   EMAILAUTO VARCHAR2(1 CHAR),
   VALIDEUR     INTEGER DEFAULT 0,
   PAYANT INT DEFAULT 0
);

CREATE TABLE GRPSALLE(
   GRPSALLEID   VARCHAR2(14 CHAR) PRIMARY KEY,
   LIBELLE      VARCHAR2(50 CHAR),
   HEUREDEBUT   DATE,
   HEUREFIN     DATE,
   OPENPRERESA  INTEGER,
   CLOSEPRERESA INTEGER,
   RESA         VARCHAR2(15 CHAR),
   SITEID        VARCHAR2(14 CHAR),
   DATECREATION DATE,
   DATEMAJ      DATE,
   SALLE_VALIDATION INTEGER DEFAULT 0,
   SALLE_STATUTFORCE VARCHAR2(14 CHAR),
   USERID VARCHAR2(14 CHAR)
);

CREATE TABLE GRPSALLES_SAL(
   GRPSALLEID   VARCHAR2(14 CHAR),
   SALLEID      VARCHAR2(14 CHAR)
);

CREATE TABLE GRPSALLES_VALIDATION(
   GRPSALLEID   VARCHAR2(14 CHAR),
   GRPUSERID    VARCHAR2(14 CHAR)
);

--  Table GUICHET
CREATE TABLE GUICHET (
  GUICHETID VARCHAR2(14 CHAR) NOT NULL,
  SITEID VARCHAR2(14 CHAR),
  GUICHET VARCHAR2(40 CHAR),
  BOITE VARCHAR2(6 CHAR),
  ADRESSE BLOB,
  POSTE VARCHAR2(35 CHAR) NULL,
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_GUICHETID PRIMARY KEY (GUICHETID));

CREATE TABLE GRPEVENEMENT (
  GRPEVENEMENTID   NUMBER(10, 0) PRIMARY KEY,
  LIBELLE          VARCHAR2(50 CHAR),
  DATECREATION     DATE,
  DATEMAJ          DATE
);

CREATE TABLE GRPEVENEMENT_POSTE (
    GRPEVENEMENTID INT NOT NULL,
    POSTEID INT NOT NULL
);




--  Table HLGPA
CREATE TABLE HLGPA (
  CODERESERVATION     VARCHAR2(14 CHAR),
  CODELGRESERVATION   VARCHAR2(14 CHAR),
  CODESALLE           VARCHAR2(14 CHAR),
  CODELGPA            VARCHAR2(14 CHAR),
  CODEARTICLE         VARCHAR2(14 CHAR),
  DATEDEBUT           DATE,
  DATEFIN             DATE,
  QUANTITE            FLOAT,
  PRIX                FLOAT,
  CODETVA             VARCHAR2(14 CHAR),
  TAUXTVA             FLOAT,
  HEUREDEBUT          DATE,
  HEUREFIN            DATE,
  HEURECONTINU        NUMBER(*),
  REMISE              FLOAT,
  LIBELLESALLE        VARCHAR2(35 CHAR),
  NOSALLE             VARCHAR2(15 CHAR),
  PRIXCLIENT          FLOAT,
  WIZARD              NUMBER(*),
  DATECREATION        DATE,
  DATEMAJ             DATE,
  DATESYNCHRO         DATE,
  COMMENTAIRE         BLOB,
  CONFIRMER           INTEGER,
  ARTICLE             VARCHAR2(50 CHAR),
  TVA                 VARCHAR2(30 CHAR)
);

--  Table HLGPARTICIPANT
CREATE TABLE HLGPARTICIPANT (
  LGPARTICIPANTID     VARCHAR2(14 CHAR),
  CODELGRESERVATION   VARCHAR2(14 CHAR),
  RESIDANTID          VARCHAR2(14 CHAR),
  INTERLOCUTEURID     VARCHAR2(14 CHAR),
  CIVILITE            VARCHAR2(14 CHAR),
  NOM                 VARCHAR2(35 CHAR),
  PRENOM              VARCHAR2(35 CHAR),
  SOCIETE             VARCHAR2(35 CHAR),
  EMAIL               VARCHAR2(50 CHAR),
  DATECREATION        DATE,
  DATEMAJ             DATE,
  DATESYNCHRO         DATE
);

--  Table HLGRESERVATION
CREATE TABLE HLGRESERVATION (
  CODERESERVATION     VARCHAR2(14 CHAR),
  CODESALLE           VARCHAR2(14 CHAR),
  CODESTATUT          VARCHAR2(14 CHAR),
  CODELGRESERVATION   VARCHAR2(14 CHAR),
  CODEAMMENAGEMENT    VARCHAR2(14 CHAR),
  DATEDEBUT           DATE,
  DATEFIN             DATE,
  NBJOURS             NUMBER(*),
  PRIX                FLOAT,
  CODETYPETARIF       VARCHAR2(14 CHAR),
  HEUREDEBUT          DATE,
  HEUREFIN            DATE,
  HEURECONTINU        NUMBER(*),
  REMISE              FLOAT,
  LIBELLESALLE        VARCHAR2(35 CHAR),
  NOSALLE             VARCHAR2(15 CHAR),
  PRIXCLIENT          FLOAT,
  WIZARD              NUMBER(*),
  CAPACITE            NUMBER(*),
  DATECREATION        DATE,
  DATEMAJ             DATE,
  DATESYNCHRO         DATE,
  AMENAGEMENT         VARCHAR2(35 CHAR),
  TYPETARIF           VARCHAR2(35 CHAR),
  CODESALLEASS VARCHAR2(14 CHAR)
);

--  Table HRESERVATION
CREATE TABLE HRESERVATION (
  CODERESERVATION     VARCHAR2(14 CHAR),
  CODETYPERESERVATION VARCHAR2(14 CHAR),
  PRIORITE            NUMBER(*),
  SOCIETEID           VARCHAR2(14 CHAR),
  INTERLOCUTEURID     VARCHAR2(14 CHAR),
  USERID              VARCHAR2(14 CHAR),
  CODEANIMATEUR       VARCHAR2(14 CHAR),
  DATERETROCESSION    DATE,
  CODESTATUT          VARCHAR2(14 CHAR),
  REFRESERVATION      VARCHAR2(15 CHAR),
  NBPERSDEMANDE       NUMBER(*, 0),
  NBPERSREEL          NUMBER(*, 0),
  LIBELLE             VARCHAR2(35 CHAR),
  REMISE              FLOAT,
  PRIXRESERVATION     FLOAT,
  PRIXFACTUREE        FLOAT,
  COMMENTAIRE         BLOB,
  UPDATEDBY           VARCHAR2(14 CHAR),
  DEVIS               NUMBER(*),
  FACTURE             NUMBER(*),
  DATECREATION        DATE,
  DATEMAJ             DATE,
  DATESYNCHRO         DATE,
  IMPUTATIONID        VARCHAR2(14 CHAR),
  TYPERESERVATION     VARCHAR2(35 CHAR),
  STATUTRESERVATION   VARCHAR2(35 CHAR),
  IMPUTATION          VARCHAR2(35 CHAR),
  TYPEIMPUTATION      VARCHAR2(35 CHAR),
  SOCIETE             VARCHAR2(35 CHAR),
  INTER_NOMP          VARCHAR2(70 CHAR),
  INTER_DEPTSERV      VARCHAR2(70 CHAR),
  INTER_TEL           VARCHAR2(20 CHAR),
  INTER_EMAIL         VARCHAR2(100 CHAR),
  ANIMATEUR_NOMP      VARCHAR2(70 CHAR),
  ANIMATEUR_SOCIETE   VARCHAR2(35 CHAR),
  USER_FULLNAME       VARCHAR2(50 CHAR)
);

--TABLE HVISITES
CREATE TABLE HVISITES (
  VISITEID VARCHAR2(14 CHAR),
  INTERLOCUTEURID VARCHAR2(14 CHAR),
  RESIDANTID VARCHAR2(14 CHAR),
  CODESALLE VARCHAR2(14 CHAR),
  SITEID VARCHAR2(14 CHAR),
  STATUTID NUMBER(*, 0),
  EXTERNALID VARCHAR2(24 CHAR),
  SOCIETERESID VARCHAR2(35 CHAR),
  NOMPRENOMRESID VARCHAR2(70 CHAR),
  SOCIETEVISIT VARCHAR2(35 CHAR),
  NOMPRENOMVISIT VARCHAR2(70 CHAR),
  DEBUTPREVU DATE,
  FINPREVU DATE,
  HDEBUTPREVU DATE,
  HFINPREVU DATE,
  NUMEROBADGE VARCHAR2(200 CHAR),
  NUMEROVISITE NUMBER(*, 0),
  DEBUTVISITE DATE,
  FINVISITE DATE,
  HDEBUT DATE,
  HFIN DATE,
  STATUTVISITE VARCHAR2(50 CHAR),
  TYPEVISITEID NUMBER(*, 0),
  BOITE VARCHAR2(6 CHAR),
  CASIER VARCHAR2(6 CHAR),
  OBJET VARCHAR2(200 CHAR),
  CASIERID NUMBER(*, 0),
  PIECE VARCHAR2(35 CHAR),
  NUMERO VARCHAR2(20 CHAR),
  VALIDITE DATE,
  PARKING VARCHAR2(6 CHAR),
  IMMATRICULATION VARCHAR2(15 CHAR),
  GUICHETID VARCHAR2(14 CHAR),
  OBSERVATION VARCHAR2(200 CHAR),
  BUREAUID VARCHAR2(14 CHAR),
  LIEU VARCHAR2(50 CHAR),
  DATECREATION DATE,
  DATEMAJ DATE,
  DATESYNCHRO DATE,
  ORIGINEVISITE        NUMBER,
  NBBDGIMPR        NUMBER,
  NBBDGIMPRTOTAL    NUMBER,
  FREE1  VARCHAR2(50 CHAR),
  FREE2  VARCHAR2(50 CHAR),
  FREE3  VARCHAR2(50 CHAR),
  FREE4  VARCHAR2(50 CHAR),
  FREE5  VARCHAR2(50 CHAR),
  FREE6  VARCHAR2(50 CHAR),
  FREE7  VARCHAR2(50 CHAR),
  FREE8  VARCHAR2(50 CHAR),
  FREE9  VARCHAR2(50 CHAR),
  FREE10 VARCHAR2(50 CHAR),
  MARQUE VARCHAR2(20 CHAR),
  MODELE VARCHAR2(40 CHAR),
  COTE     NUMBER
);

CREATE TABLE VEHICULE_DEMANDE (
    VEHICULEID    VARCHAR2(14 CHAR),
    RESIDANTID    VARCHAR2(14 CHAR),
    DATEDEMANDE    DATE,
    IMMATRICULATION    VARCHAR2(14 CHAR),
    MARQUE        VARCHAR2(20 CHAR),
    MODELE        VARCHAR2(40 CHAR),
    COTE        NUMBER,
    STATUT        VARCHAR2(40 CHAR),
    DATECREATION    DATE
);


--  Table IDENTITES
CREATE TABLE IDENTITES (
  IDENTITEID VARCHAR2(14 CHAR) NOT NULL,
  TYPEIDENTITEID NUMBER(*, 0),
  DELIVREPAR VARCHAR2(80 CHAR),
  FINVALIDITE DATE,
  NUMERO VARCHAR2(20 CHAR),
  IMAGE BLOB,
  INTERLOCUTEURID VARCHAR2(14 CHAR),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
  OFICHIERID NUMBER,
CONSTRAINT PK_IDENTITEID PRIMARY KEY (IDENTITEID));

--  Table IMPUTATION
CREATE TABLE IMPUTATION (
  IMPUTATIONID VARCHAR2(14 CHAR) NOT NULL,
  LIBELLE VARCHAR2(35 CHAR),
  LIBELLE2 VARCHAR2(35 CHAR),
  IMPUTATION_TYPEID VARCHAR2(14 CHAR),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_IMPUTATIONID PRIMARY KEY (IMPUTATIONID));

--  Table IMPUTATION_TYPE
CREATE TABLE IMPUTATION_TYPE (
  IMPUTATION_TYPEID VARCHAR2(14 CHAR) NOT NULL,
  LIBELLE VARCHAR2(35 CHAR) );

--  Table INDCLE
CREATE TABLE INDCLE (
  CLEID VARCHAR2(14 CHAR),
  INDIVIDUID VARCHAR2(15 CHAR),
  RESERVANTID VARCHAR2(15 CHAR),
  INDIVIDU VARCHAR2(100 CHAR),
  RESERVANT VARCHAR2(100 CHAR),
  UTILISATEURID VARCHAR2(100 CHAR),
  JOUR_DEPART DATE,
  JOUR_RETOUR DATE,
  ETAT NUMBER(*, 0),
  OBSERVATIONSALLER VARCHAR2(4000 CHAR),
  OBSERVATIONSRETOUR VARCHAR2(4000 CHAR),
  NEMPRUNT NUMBER(*, 0),
  SIGNATURE_ENTREE INT,
  SIGNATURE_SORTIE INT,
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE
);

--  Table INTERLOCUTEUR
CREATE TABLE INTERLOCUTEUR (
  SOCIETEID VARCHAR2(14 CHAR) NOT NULL,
  INTERLOCUTEURID VARCHAR2(14 CHAR) NOT NULL,
  CODECIVILITE NUMBER(*, 0),
  CODEFONCTION NUMBER(*, 0),
  PHONKEY VARCHAR2(35 CHAR) DEFAULT '1',
  EXTERNALID VARCHAR2(24 CHAR),
  PAYS VARCHAR2(35 CHAR),
  CIVILITE VARCHAR2(30 CHAR),
  SOCIETE VARCHAR2(35 CHAR),
  NOMPRENOM VARCHAR2(70 CHAR),
  CPNOM VARCHAR2(40 CHAR),
  NOM VARCHAR2(35 CHAR),
  PRENOM VARCHAR2(35 CHAR),
  IDENTITEID VARCHAR2(14 CHAR),
  FONCTION VARCHAR2(35 CHAR),
  TELEPHONE VARCHAR2(20 CHAR),
  EMAIL VARCHAR2(150 CHAR),
  GSM VARCHAR2(20 CHAR),
  FAX VARCHAR2(20 CHAR),
  CANDIDATMAILING NUMBER(*, 0),
  OBS VARCHAR2(200 CHAR),
  PHOTO BLOB,
  REFIMPORTATION VARCHAR2(48 CHAR),
  IMMATRICULATION VARCHAR2(15 CHAR),
  INTERDIT VARCHAR2(1 CHAR),
  DEBUTINTERDIT DATE,
  FININTERDIT DATE,
  NATUREID VARCHAR2(14 CHAR),
  DATENAISSANCE DATE,
  LIEUNAISSANCE VARCHAR2(70 CHAR),
  NATIONALITEID VARCHAR2(14 CHAR),
  FINVALIDITEAUTO DATE,
  DATEDERNVISITE DATE,
  DATEMAJ DATE NOT NULL,
  DATECREATION DATE NOT NULL,
  DATESYNCHRO DATE,
  NOMJEUNEFILLE VARCHAR2(35 CHAR),
  ADRESSE VARCHAR2(150 CHAR),
  CODEPOSTAL VARCHAR2(10 CHAR),
  VILLE VARCHAR2(35 CHAR),
  SITE_CREATION    VARCHAR2(35 CHAR),
  SITE_MODIF    VARCHAR2(35 CHAR),
  PAYS_ADRESSE VARCHAR2(50 CHAR),
  PAYS_NAISSANCE VARCHAR2(50 CHAR),
  ENQUETE_VE INT DEFAULT 0,
  ENQUETE_LPE INT DEFAULT 0,
  TAG VARCHAR2(30 CHAR),
  DOUBLON_TRAITE INT DEFAULT 0,
  OFICHIERID INTEGER,
  NATIONALITE_ORIGINE VARCHAR2(50 CHAR),
  DEPFRID INT NULL,
CONSTRAINT PK_INTERLOCUTEURID PRIMARY KEY (INTERLOCUTEURID));

--  Table INTER_RSERVICE
CREATE TABLE INTER_RSERVICE (
  INTERLOCUTEURID VARCHAR2(14 CHAR),
  RSERVICEID VARCHAR2(14 CHAR),
  RESIDANTID VARCHAR2(14 CHAR),
CONSTRAINT UNIK_INTER_RSERVICE UNIQUE (INTERLOCUTEURID,RSERVICEID));

--  Table JAGENT
CREATE TABLE JAGENT (
  JAGENTID NUMBER(10, 0) NOT NULL,
  AGENTID NUMBER(10, 0),
  ETAT NUMBER(10, 0),
  DATECREATION DATE,
  DATEMAJ DATE,
  DATESYNCHRO DATE,
CONSTRAINT PK_JAGENTID PRIMARY KEY (JAGENTID));

--  Table JMATERIEL
CREATE TABLE JMATERIEL (
  MATERIELID NUMBER(10, 0),
  EVENEMENTID NUMBER(10, 0)
);

--  Table JOUR
CREATE TABLE JOUR (
  JOURID NUMBER(10, 0) PRIMARY KEY,
  LIBELLE VARCHAR2(40 CHAR),
  TYPE_JOUR VARCHAR2(40 CHAR),
  CL INT,
  DEBUT_VALIDITE DATE,
  FIN_VALIDITE DATE,
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE,
  DATEOFWEEK INTEGER
);

--  Table JOURNAL
CREATE TABLE JOURNAL (
  JOURNALID VARCHAR2(14 CHAR) NOT NULL,
  USERID VARCHAR2(14 CHAR),
  TYPEACTION VARCHAR2(10 CHAR),
  TABLEID VARCHAR2(30 CHAR),
  FICHEID VARCHAR2(14 CHAR),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
  RESA_REF VARCHAR2(15 CHAR),
  NOMPRENOM VARCHAR2(40 CHAR),
  SALLE_NO_LIB VARCHAR2(40 CHAR),
  RESA_DHDEBUT DATE,
  RESA_DHFIN DATE,
  RESA_CREATION DATE,
CONSTRAINT PK_JOURNALID PRIMARY KEY (JOURNALID));

--  Table JPERSONNE
CREATE TABLE JPERSONNE (
  PERSONNEID NUMBER(10, 0),
  EVENEMENTID NUMBER(10, 0)
);

--  Table JRAPPORT
CREATE TABLE JRAPPORT (
  JOURNALID NUMBER(10, 0),
  RAPPORTID NUMBER(10, 0),
  EVENEMENTID NUMBER(10, 0),
  REF VARCHAR2(20 CHAR),
  MISSIONID NUMBER(10, 0),
  CLOTURER    NUMBER(2, 0)
);


CREATE TABLE JRAPPORTLOG (
  OJOURNALID  NUMBER(10,0),
  RAPPORTID   NUMBER(10,0),
  RPTID       NUMBER(10,0),
  RPTNOM      VARCHAR2(20 CHAR),
  REF         VARCHAR2(20 CHAR),
  VERSION     NUMBER(3,0),
  PERSONNELID NUMBER(10,0),
  SITEID      VARCHAR2(14 CHAR),
  POSTEID     NUMBER(10),
  DATEMAJ     DATE
);

--  Table JSECOURS
CREATE TABLE JSECOURS (
  SECOURSID NUMBER(10, 0),
  EVENEMENTID NUMBER(10, 0)
);

--  Table JVACATION
CREATE TABLE JVACATION (
  JVACATIONID NUMBER(10, 0) NOT NULL,
  VACATIONID NUMBER(10, 0),
  OUVERTUREID NUMBER(10, 0),
  OUVERTURE DATE,
  FERMETUREID NUMBER(10, 0),
  FERMETURE DATE,
  SITEID  VARCHAR2(14 CHAR),
  POSTEID NUMBER(10),
CONSTRAINT PK_CJVACATIONID PRIMARY KEY (JVACATIONID));

--  Table LGDEVIS
CREATE TABLE LGDEVIS (
  CODEDEVIS VARCHAR2(14 CHAR) NOT NULL,
  CODELGDEVIS VARCHAR2(14 CHAR) NOT NULL,
  OPTIONLEVEL NUMBER(*),
  GROUPLEVEL NUMBER(*),
  CODEPRODUIT VARCHAR2(14 CHAR),
  CODEFOURNISSEUR VARCHAR2(14 CHAR),
  QUANTITE NUMBER(*, 0),
  LIBELLE VARCHAR2(80 CHAR),
  PRIXACHATHT FLOAT,
  MARGE FLOAT,
  PRIXVENTEHT FLOAT,
  REMISE FLOAT,
  PRIXHT FLOAT,
  CODETVA VARCHAR2(14 CHAR) NOT NULL,
  TVA FLOAT,
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_CODEDEVISLGDEVIS PRIMARY KEY (CODEDEVIS, CODELGDEVIS));

--  Table LGFACTURE
CREATE TABLE LGFACTURE (
  CODEFACTURE VARCHAR2(14 CHAR) NOT NULL,
  LGFACTURE VARCHAR2(14 CHAR) NOT NULL,
  CODEPRODUIT VARCHAR2(14 CHAR) NOT NULL,
  CODETVA VARCHAR2(14 CHAR) NOT NULL,
  QUANTITE NUMBER(*) NOT NULL,
  LIBELLE VARCHAR2(80 CHAR),
  PRIXHT FLOAT NOT NULL,
  REMISE FLOAT,
  PRIXHTREEL FLOAT,
  TAUXTVA FLOAT NOT NULL,
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_CODEFACTURELGFACTURE PRIMARY KEY (CODEFACTURE, LGFACTURE));

--  Table LGPA
CREATE TABLE LGPA (
  CODERESERVATION VARCHAR2(14 CHAR) NOT NULL,
  CODELGRESERVATION VARCHAR2(14 CHAR) NOT NULL,
  CODESALLE VARCHAR2(14 CHAR) NOT NULL,
  CODELGPA VARCHAR2(14 CHAR) NOT NULL,
  CODEARTICLE VARCHAR2(14 CHAR),
  DATEDEBUT DATE NOT NULL,
  DATEFIN DATE NOT NULL,
  QUANTITE FLOAT,
  PRIX FLOAT,
  CODETVA VARCHAR2(14 CHAR),
  TAUXTVA FLOAT,
  HEUREDEBUT DATE,
  HEUREFIN DATE,
  HEURECONTINU NUMBER(*),
  REMISE FLOAT,
  LIBELLESALLE VARCHAR2(35 CHAR) NOT NULL,
  NOSALLE VARCHAR2(15 CHAR),
  PRIXCLIENT FLOAT,
  WIZARD NUMBER(*),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
  COMMENTAIRE VARCHAR2(3000 CHAR),
  CONFIRMER INTEGER,
  IMPUTATION VARCHAR2(200 CHAR),
CONSTRAINT PK_CODERESERVATIONSALLELGPA PRIMARY KEY (CODERESERVATION, CODESALLE, CODELGPA));

--  Table LGPARTICIPANT
CREATE TABLE LGPARTICIPANT (
  LGPARTICIPANTID VARCHAR2(14 CHAR) NOT NULL,
  CODELGRESERVATION VARCHAR2(14 CHAR),
  RESIDANTID VARCHAR2(14 CHAR),
  INTERLOCUTEURID VARCHAR2(14 CHAR),
  CIVILITE VARCHAR2(14 CHAR),
  NOM VARCHAR2(35 CHAR),
  PRENOM VARCHAR2(35 CHAR),
  SOCIETE VARCHAR2(35 CHAR),
  EMAIL VARCHAR2(150 CHAR),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE
);

--  Table LGRESERVATION
CREATE TABLE LGRESERVATION (
  CODERESERVATION VARCHAR2(14 CHAR) NOT NULL,
  CODESALLE VARCHAR2(14 CHAR) NOT NULL,
  CODESTATUT VARCHAR2(14 CHAR),
  CODELGRESERVATION VARCHAR2(14 CHAR) PRIMARY KEY,
  CODEAMMENAGEMENT VARCHAR2(14 CHAR),
  DATEDEBUT DATE NOT NULL,
  DATEFIN DATE NOT NULL,
  NBJOURS NUMBER(*),
  PRIX FLOAT,
  CODETYPETARIF VARCHAR2(14 CHAR),
  HEUREDEBUT DATE,
  HEUREFIN DATE,
  HEURECONTINU NUMBER(*),
  REMISE FLOAT,
  LIBELLESALLE VARCHAR2(35 CHAR) NOT NULL,
  NOSALLE VARCHAR2(15 CHAR),
  PRIXCLIENT FLOAT,
  WIZARD NUMBER(*),
  CAPACITE NUMBER(*),
  PORTE_CODE VARCHAR2(50 CHAR),
  PAYANT INT DEFAULT 0,
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
  CODESALLEASS VARCHAR2(14 CHAR)
);

--  Table LGSALLE
CREATE TABLE LGSALLE (
  CODESALLE VARCHAR2(14 CHAR) NOT NULL,
  CODEEQUIPEMENTFIXE VARCHAR2(14 CHAR) NOT NULL,
  QUANTITE NUMBER(*),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_CODESALLEEQUIPEMENTFIXE PRIMARY KEY (CODESALLE, CODEEQUIPEMENTFIXE));

--  Table LIEU
CREATE TABLE LIEU (
  LIEUID NUMBER(10, 0) NOT NULL,
  LIBELLE VARCHAR2(40 CHAR),
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE,
  SITEID  VARCHAR2(14 CHAR)
);

--  Table LIEUPERMIS
CREATE TABLE LIEUPERMIS (
  RESIDANTID VARCHAR2(14 CHAR) NOT NULL,
  CODESALLE VARCHAR2(14 CHAR) NOT NULL,
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_RESIDANTIDCODESALLE PRIMARY KEY (RESIDANTID, CODESALLE));

--  Table LU_CSG
CREATE TABLE LU_CSG (
  PERSONNELID NUMBER(10, 0) NOT NULL,
  CONSIGNEID NUMBER(10, 0),
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE
);

--  Table LU_CSGT
CREATE TABLE LU_CSGT (
  PERSONNELID NUMBER(10, 0) NOT NULL,
  CONSIGNETEMPID NUMBER(10, 0),
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE
);

--  Table MARQUE
CREATE TABLE MARQUE (
  CODEMARQUE VARCHAR2(14 CHAR) NOT NULL,
  SOCIETEID VARCHAR2(14 CHAR),
  LIBELLE VARCHAR2(35 CHAR),
  REMARQUES BLOB,
  IMAGE BLOB,
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_CODEMARQUE PRIMARY KEY (CODEMARQUE));

--  Table MATERIEL
CREATE TABLE MATERIEL (
  MATERIELID NUMBER(10, 0) NOT NULL,
  LIBELLE VARCHAR2(40 CHAR),
  OBSERVATION VARCHAR2(250 CHAR),
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE,
  SITEID  VARCHAR2(14 CHAR),
CONSTRAINT PK_MATERIELID PRIMARY KEY (MATERIELID));

--  Table MISSION
CREATE TABLE MISSION (
  MISSIONID NUMBER(10, 0) NOT NULL,
  DUREE DATE,
  TYPE_MISSIONID NUMBER(5, 0),
  LIBELLE VARCHAR2(80 CHAR),
  DESCRIPTION VARCHAR2(1000 CHAR),
  PRIORITE NUMBER(10, 0),
  QUALIFID NUMBER(5, 0),
  DOUBLE_SIGNATURE NUMBER(10, 0),
  CONSIGNEID NUMBER(10, 0),
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE,
  RAPPORTID NUMBER(10, 0),
  ISRAPPORT NUMBER(10, 0),
  SITEID  VARCHAR2(14 CHAR),
  POSTEID NUMBER(10),
CONSTRAINT PK_MISSIONID PRIMARY KEY (MISSIONID));

--  Table MISSIONTEMP
CREATE TABLE MISSIONTEMP (
  MISSIONTEMPID NUMBER(10, 0) NOT NULL,
  DUREE DATE,
  TOLERANCE DATE,
  TYPE_MISSIONID NUMBER(5, 0),
  LIBELLE VARCHAR2(40 CHAR),
  DESCRIPTION VARCHAR2(1000 CHAR),
  PRIORITE NUMBER(10, 0),
  QUALIFID NUMBER(5, 0),
  DOUBLE_SIGNATURE NUMBER(10, 0),
  CONSIGNEID NUMBER(10, 0),
  DEBUTVALIDITE DATE,
  FINVALIDITE DATE,
  AUTEURID NUMBER(10, 0),
  POSTEID NUMBER(10, 0),
  HEURE DATE,
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE,
  RAPPORTID NUMBER(10, 0),
  ISRAPPORT NUMBER(10, 0),
  SITEID  VARCHAR2(14 CHAR),
CONSTRAINT PK_MISSIONTEMPID PRIMARY KEY (MISSIONTEMPID));

--  Table NATURE
CREATE TABLE NATURE (
  NATUREID VARCHAR2(14 CHAR) NOT NULL,
  LIBELLE VARCHAR2(35 CHAR),
  ABREGE VARCHAR2(6 CHAR),
  TVISITE VARCHAR2(1 CHAR),
  PROFIL VARCHAR2(20 CHAR),
  INTERDIT VARCHAR2(1 CHAR),
  DEBUTINTERDIT DATE,
  FININTERDIT DATE,
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_NATUREID PRIMARY KEY (NATUREID));

--  Table OCONS_ETAT
CREATE TABLE OCONS_ETAT (
  OCONSIGNEID NUMBER(10, 0) NOT NULL,
  LIBELLE VARCHAR2(500 CHAR),
  PAGE NUMBER(10, 0),
  ETAT NUMBER(10, 0),
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE,
CONSTRAINT PK_OCONSIGNEEID PRIMARY KEY (OCONSIGNEID));

--  Table OCONSIGNE
CREATE TABLE OCONSIGNE (
  OCONSIGNEID NUMBER(10, 0) NOT NULL,
  LIBELLE VARCHAR2(500 CHAR),
  PAGE NUMBER(10, 0),
  DATECONS DATE,
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE,
  FILE_PDF VARCHAR2(250 CHAR),
  SITEID  VARCHAR2(14 CHAR),
  POSTEID NUMBER(10),
CONSTRAINT PK_OCONSIGNEID PRIMARY KEY (OCONSIGNEID));

--  Table ODROIT
CREATE TABLE ODROIT (
  ODROITID NUMBER(10, 0) NOT NULL,
  LIBELLE VARCHAR2(50 CHAR),
  OMACCESS VARCHAR2(15 CHAR),
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE,
CONSTRAINT PK_ODROITID PRIMARY KEY (ODROITID));

--  Table OJOURNAL
CREATE TABLE OJOURNAL (
  OJOURNALID NUMBER(10, 0) NOT NULL,
  DEBUT_REEL DATE,
  FIN_REEL DATE,
  DEBUT_THEORIQUE DATE,
  FIN_THEORIQUE DATE,
  DEBUT_EFF DATE,
  FIN_EFF DATE,
  OBSERVATION VARCHAR2(4000 CHAR),
  EVENEMENTID NUMBER(10, 0),
  MISSIONTEMPID NUMBER(10, 0),
  AGENDA_JOURID NUMBER(10, 0),
  PERSONNELDEBUTID NUMBER(10, 0),
  PERSONNELFINID NUMBER(10, 0),
  AGENDA_JOUR2ID NUMBER(10, 0),
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE,
  SITEID  VARCHAR2(14 CHAR),
  POSTEID NUMBER(10),
  LIEUID INTEGER DEFAULT -1,
  CODESALLE VARCHAR2(14) DEFAULT 'VPARDEFAUT',
CONSTRAINT PK_OJOURNALID PRIMARY KEY (OJOURNALID));

CREATE TABLE OJOURNALLOG (
  OJOURNALID  NUMBER(10,0),
  ACTION      NUMBER(5,0),
  PERSONNELID NUMBER(10,0),
  SITEID      VARCHAR2(14 CHAR),
  POSTEID     NUMBER(10),
  OBSERVATION VARCHAR2(4000 CHAR),
  DATEMAJ     DATE
);

--  Table OJOURNALAGENT
CREATE TABLE OJOURNALAGENT (
  OJOURNALID NUMBER(10, 0),
  PERSONNELID NUMBER(10, 0),
  NOMPRENOM VARCHAR2(50 CHAR)
);

CREATE TABLE OJOURNAL_PERSMVT (
  OJOURNALID       NUMBER(10, 0) PRIMARY KEY,
  TYPEPERSID       NUMBER(10, 0),
  NOMPRENOM        VARCHAR2(70 CHAR),
  SOCIETE          VARCHAR2(35 CHAR),
  INTERLOCUTEURID  VARCHAR2(14 CHAR),
  VEHICULE         VARCHAR2(35 CHAR),
  IMMATRICULATION  VARCHAR2(35 CHAR),
  BADGE            VARCHAR2(20 CHAR),
  CA               VARCHAR2(20 CHAR),
  DESTINATION      VARCHAR2(200 CHAR),
  OBSERVATION      VARCHAR2(4000 CHAR),
  ENTREE           DATE,
  SORTIE           DATE,
  SITEID           VARCHAR2(14 CHAR),
  POSTEID          NUMBER(10,0),
  PERSONNELDEBUTID NUMBER (10,0),
  PERSONNELFINID   NUMBER (10,0),
  DATECREATION     DATE,
  TYPE_ACCES        VARCHAR2(35 CHAR),
  PERSONNELID        INTEGER,
  NB_LIEUX            INTEGER,
  DEBUT_ACCOMP        DATE,
  FIN_ACCOMP        DATE,
  DATEVALIDITE         DATE
);

--  Table OMESSAGE
CREATE TABLE OMESSAGE (
  OMESSAGEID NUMBER(10, 0) NOT NULL,
  AGENTID NUMBER(10, 0),
  DATERAPPEL DATE,
  DATEFIN DATE,
  ETAT NUMBER(10, 0),
  MESSAGE VARCHAR2(1000 CHAR),
  DATECREATION DATE,
  DATEMAJ DATE,
  SITEID  VARCHAR2(14 CHAR),
  POSTEID NUMBER(10),
CONSTRAINT PK_OMESSAGEID PRIMARY KEY (OMESSAGEID));

--  Table OMNI_PARAM
CREATE TABLE OMNI_PARAM (
  PARAMACCES NUMBER(10, 0),
  OPTION_NBJMC NUMBER(2, 0),
  OPTION_NBJMI NUMBER(2, 0),
  OPTION_DUBIP NUMBER(2, 0),
  OPTION_BIPLONG NUMBER(2, 0),
  SEPARATEUR VARCHAR2(15 CHAR),
  OPTION_AVMISS NUMBER(10),
  OPTION_TIMER_MISSION NUMBER(10),
  OPTION_PASSWORD INTEGER,
  CARTEPRO_CTRL INTEGER DEFAULT 0,
  CARTEPRO_NBJ INTEGER DEFAULT 0,
  MC_FILTRAGE INTEGER,
  PASS_SENSIBLE INTEGER,
  STATION_POSTE_ONLY INTEGER,
  STATION_ALERT_LOCK INTEGER,
  ALERT_NOLOCK INTEGER
);

--  Table ORIGINECONTACT
CREATE TABLE ORIGINECONTACT (
  CODEORIGINECONTACT VARCHAR2(14 CHAR) NOT NULL,
  LIBELLE VARCHAR2(35 CHAR),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_CODEORIGINECONTACT PRIMARY KEY (CODEORIGINECONTACT));

CREATE TABLE ORONDE (
  ORONDEID         NUMBER(10, 0) PRIMARY KEY,
  RONDIERID        NUMBER(10, 0),
  RONDIERLIB       VARCHAR2(50 CHAR),
  RONDENUM         INTEGER,
  RONDELIB         VARCHAR2(50 CHAR),
  SITEID           VARCHAR2(14 CHAR),
  RONDEDATE        DATE,
  DETAILS          VARCHAR2(4000 CHAR),
  ETAT             INTEGER,
  RONDEAGENT       VARCHAR2(50 CHAR),
  AGENTID           NUMBER(10, 0),
  DATECREATION     DATE,
  DATEMAJ          DATE
);

-- TABLE OFICHIER
CREATE TABLE OFICHIER (
  OFICHIERID NUMBER PRIMARY KEY,
  LIBELLE VARCHAR2(200 CHAR),
  DOCUMENT BLOB,
  TYPEFILE INTEGER,
  CONTENTTYPE VARCHAR2(100 CHAR),
  DATASIZE INTEGER,
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE
);

CREATE TABLE OFICHIER_POSTE (
  OFICHIERID INT NOT NULL,
  POSTEID INT NOT NULL
);

-- TABLE ONOTE
CREATE TABLE ONOTE (
  ONOTEID        NUMBER(10, 0)  PRIMARY KEY,
  EXPEDITEURID   NUMBER(10, 0),
  DESTINATAIREID NUMBER(10, 0),
  EXPEDITEUR     VARCHAR2(70 CHAR),
  DESTINATAIRE   VARCHAR2(70 CHAR),
  OBJET          VARCHAR2(70 CHAR),
  CORPS          VARCHAR2(2000 CHAR),
  SUPPEXP        INTEGER,
  SUPPDEST       INTEGER,
  NEW            INTEGER,
  DATECREATION   DATE not null,
  DATEMAJ        DATE
);

--  Table OJVACATION
CREATE TABLE OJVACATION (
  JVACATIONID INT NOT NULL,
  OJOURNALID INT NOT NULL
);

--  Table PAGENT
CREATE TABLE PAGENT (
  PAGENTID NUMBER(10, 0) NOT NULL,
  DATE_PLANNING DATE,
  SEMAINE NUMBER(10, 0),
  VACATIONID NUMBER(5, 0),
  AGENTID NUMBER(10, 0),
  POSTEID NUMBER(10, 0),
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE,
CONSTRAINT PK_PAGENTID PRIMARY KEY (PAGENTID));

--  Table PARAMETRES
CREATE TABLE PARAMETRES (
  PREENREG NUMBER(*, 0),
  SECURITE NUMBER(*, 0),
  I_PLAN NUMBER(*, 0),
  IMPRESSION NUMBER(*, 0),
  INFOBULLES NUMBER(*, 0),
  CHIMGVT VARCHAR2(4000 CHAR),
  DATESORTIVI DATE,
  CHIMGRE VARCHAR2(4000 CHAR),
  DERNVISITE NUMBER(*, 0),
  CHIMGPL VARCHAR2(4000 CHAR),
  SORTIVI NUMBER(*, 0),
  PURGEVP NUMBER(*, 0),
  APPETEL NUMBER(*, 0),
  MONOSOC NUMBER(*, 0) NOT NULL,
  MODULE NUMBER(*, 0),
  GESPHOTO VARCHAR2(1 CHAR),
  TRCLUNIK NUMBER(*, 0),
  TYPEANNU VARCHAR2(1 CHAR),
  DATEIMP DATE,
  IMPORTAUTO VARCHAR2(1 CHAR),
  GESTCASIER VARCHAR2(1 CHAR),
  NBESSAIS NUMBER(*, 0) NOT NULL,
  REFIMPORTATION VARCHAR2(48 CHAR),
  SORTIFINVI INT,
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE
);

--  Table PARKING
CREATE TABLE PARKING (
  SITEID VARCHAR2(14 CHAR),
  PARKINGID VARCHAR2(14 CHAR) NOT NULL,
  SOCIETEID VARCHAR2(14 CHAR),
  PARKING VARCHAR2(6 CHAR),
  STATUTPARKING VARCHAR2(20 CHAR),
  TYPE_PARKING VARCHAR2(30 CHAR),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
  CAPACITE INT,
CONSTRAINT PK_PARKINGID PRIMARY KEY (PARKINGID));

--  Table PASSAGER
CREATE TABLE PASSAGER (
  PASSAGERID VARCHAR2(14 CHAR) NOT NULL,
  RESIDANTID VARCHAR2(14 CHAR),
  NOMPRENOM VARCHAR2(35 CHAR),
  CODEACCES VARCHAR2(34 CHAR),
  PASSAGE DATE,
  CIRCULATION VARCHAR2(20 CHAR),
  OBSERVATION VARCHAR2(200 CHAR),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO     DATE
);

--  Table PAYS
CREATE TABLE PAYS (
  PAYSID VARCHAR2(14 CHAR) NOT NULL,
  LIBELLE VARCHAR2(35 CHAR),
  LIBELLEGR VARCHAR2(50 CHAR),
  LIBELLEUS VARCHAR2(35 CHAR),
  NATIONALITE VARCHAR2(50 CHAR),
  CODEISO1 VARCHAR2(2 CHAR),
  CODEISO2 VARCHAR2(3 CHAR),
  CODEISO3 VARCHAR2(3 CHAR),
  INDICATIF VARCHAR2(5 CHAR),
  SHORTLIB VARCHAR2(3 CHAR),
  DEVISE VARCHAR2(3 CHAR),
  DEVISELIBELLE VARCHAR2(35 CHAR),
  INTERDIT VARCHAR2(1 CHAR),
  DEBUTINTERDIT DATE,
  FININTERDIT DATE,
  ENQUETE1 VARCHAR2(10 CHAR),
  STATUT1 VARCHAR2(10 CHAR),
  ENQUETE2 VARCHAR2(10 CHAR),
  STATUT2 VARCHAR2(10 CHAR),
  ENQUETE3 VARCHAR2(10 CHAR),
  STATUT3 VARCHAR2(10 CHAR),
  DATEMAJ DATE NOT NULL,
  DATECREATION DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_PAYSID PRIMARY KEY (PAYSID));

CREATE TABLE PERIPHERIQUE
(
PERIPHERIQUEID    INT PRIMARY KEY,
PERIPHERIQUE_TRAITEMENTID    INT,
NOM VARCHAR2(50 CHAR),
AVANT VARCHAR2(20 CHAR),
APRES VARCHAR2(20 CHAR),
DEBUT INT,
LONGUEUR INT,
LONGUEUR_MAX INT,
DECOUPE INT,
CONVERSION INT,
TYPE_PORT VARCHAR2(35 CHAR),
BIT_SECONDE INT,
BIT_DONNEE INT,
PARITE VARCHAR2(15 CHAR),
BIT_ARRET VARCHAR2(15 CHAR),
CONTROLE_FLUX VARCHAR2(15 CHAR),
DATECREATION    DATE NOT NULL,
DATEMAJ    DATE NOT NULL
);
COMMIT;

CREATE TABLE PERIPHERIQUE_TRAITEMENT
(
PERIPHERIQUE_TRAITEMENTID    INT PRIMARY KEY,
LIBELLE VARCHAR2(50 CHAR),
FAMILLE INT,
DATECREATION    DATE NOT NULL,
DATEMAJ    DATE NOT NULL
);
COMMIT;

CREATE TABLE PERIPHERIQUE_POSTE
(
PERIPHERIQUEID    INT,
NOM_POSTE VARCHAR2(50 CHAR),
PORT VARCHAR2(15 CHAR),
DATECREATION    DATE NOT NULL,
DATEMAJ    DATE NOT NULL
);
COMMIT;

--  Table PERSONNE
CREATE TABLE PERSONNE (
  PERSONNEID NUMBER(10, 0) NOT NULL,
  LIBELLE VARCHAR2(100 CHAR),
  OBSERVATION VARCHAR2(250 CHAR),
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE,
  SITEID  VARCHAR2(14 CHAR),
CONSTRAINT PK_PERSONNEID PRIMARY KEY (PERSONNEID));

--  Table PERSONNEL
CREATE TABLE PERSONNEL (
  PERSONNELID NUMBER(10, 0) NOT NULL,
  THEPASSWORD VARCHAR2(20 CHAR),
  THELOGIN VARCHAR2(15 CHAR),
  NOM VARCHAR2(50 CHAR),
  PRENOM VARCHAR2(50 CHAR),
  DATE_NAISSANCE DATE,
  DATE_EMBAUCHE DATE,
  DATE_ARRIVEE DATE,
  TEL VARCHAR2(10 CHAR),
  DEBUT_VALIDITE DATE,
  FIN_VALIDITE DATE,
  QUALIFID NUMBER(5, 0),
  CODEFONCTION INTEGER,
  MEDICAL_LAST DATE,
  MEDICAL_NEXT DATE,
  ODROITID NUMBER(10, 0),
  SITEID VARCHAR2(14 CHAR),
  PHOTO BLOB,
  EMPPK BLOB,
  EMPPK_LEN INTEGER,
  TAG VARCHAR2(30 CHAR),
  CSECURITENUM VARCHAR2(50 CHAR),
  CSECURITEFIN DATE,
  CSECURITEACT VARCHAR2(10 CHAR),
  CSECURITEDEP VARCHAR2(100 CHAR),
  ACTIF INTEGER DEFAULT 1,
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE,
CONSTRAINT PK_PERSONNELID PRIMARY KEY (PERSONNELID));

--  Table PLANS
CREATE TABLE PLANS (
  PLANID VARCHAR2(14 CHAR) NOT NULL,
  EXTERNALID VARCHAR2(24 CHAR),
  LIBELLE VARCHAR2(35 CHAR),
  IMAGE BLOB,
  OBSERVATION BLOB,
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_PLANID PRIMARY KEY (PLANID));

--  Table POSTE
CREATE TABLE POSTE (
  POSTEID NUMBER(10, 0) NOT NULL,
  LIBELLE VARCHAR2(40 CHAR),
  SITEID VARCHAR2(14 CHAR),
  SOCIETEID VARCHAR2(14 CHAR),
  REP_LOCAL VARCHAR2(100 CHAR),
  REP_DOC VARCHAR2(100 CHAR),
  REP_PDF VARCHAR2(100 CHAR),
  REP_IMG VARCHAR2(100 CHAR),
  REP_WAV VARCHAR2(100 CHAR),
  REP_TMP VARCHAR2(100 CHAR),
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE,
  LIBELLE2  VARCHAR2(40 CHAR),
  TYPEPOSTE INTEGER,
  PRISEPOSTE INTEGER,
  OPTIONADMIN_AUTOSTART INTEGER,
  OPTIONADMIN_LOCKDESKTOP INTEGER,
  OPTIONADMIN_SHUTDOWN INTEGER,
  CODESALLE VARCHAR2(14),
  BATIMENTID VARCHAR2(14),
CONSTRAINT PK_POSTEID PRIMARY KEY (POSTEID));

--  Table PRODUIT
CREATE TABLE PRODUIT (
  CODEPRODUIT VARCHAR2(14 CHAR) NOT NULL,
  REFERENCE VARCHAR2(10 CHAR),
  CODESOUSFAMILLE VARCHAR2(14 CHAR),
  CODEFAMILLE VARCHAR2(14 CHAR),
  LIBELLE VARCHAR2(35 CHAR),
  LISTEPRIX NUMBER(*),
  DESCRIPTION BLOB,
  PRIXACHATHT FLOAT,
  PRIXVENTEHT FLOAT,
  PRIXVENTETTC FLOAT,
  CODETVA VARCHAR2(14 CHAR),
  TVA FLOAT,
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_CODEPRODUIT PRIMARY KEY (CODEPRODUIT));

--  Table PXACHAT
CREATE TABLE PXACHAT (
  CODEARTICLE VARCHAR2(14 CHAR) NOT NULL,
  SOCIETEID VARCHAR2(14 CHAR) NOT NULL,
  REFARTICLE VARCHAR2(15 CHAR),
  PRIXHT FLOAT,
  PRIXCATALOGUE FLOAT,
  ACCEPTABLE NUMBER(*),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
  CONTACTID VARCHAR2(14 CHAR),
CONSTRAINT PK_CODEARTICLESOCIETEID PRIMARY KEY (CODEARTICLE, SOCIETEID));

--  Table QPERSONNEL
CREATE TABLE QPERSONNEL (
  PERSONNELID NUMBER(10, 0),
  QUALIFID NUMBER(10, 0)
);

--  Table QUALIF
CREATE TABLE QUALIF (
  QUALIFID NUMBER(5, 0) NOT NULL,
  LIBELLE VARCHAR2(20 CHAR),
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE,
CONSTRAINT PK_QUALIFID PRIMARY KEY (QUALIFID));

--  Table RAISON
CREATE TABLE RAISON (
  RAISONID NUMBER(5, 0) NOT NULL,
  LIBELLE VARCHAR2(40 CHAR),
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE,
CONSTRAINT PK_RAISONID PRIMARY KEY (RAISONID));

--  Table RAPPORT
CREATE TABLE RAPPORT (
  RAPPORTID NUMBER(10, 0) NOT NULL,
  LIBELLE VARCHAR2(40 CHAR),
  NOMTABLE VARCHAR2(20 CHAR),
  DETAILS VARCHAR2(4000 CHAR),
  AUTEURID NUMBER(10, 0),
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE,
  SITEID  VARCHAR2(14 CHAR),
  POSTEID NUMBER(10),
  TYPERAPPORT INTEGER,
CONSTRAINT PK_RAPPORTID PRIMARY KEY (RAPPORTID));

--  Table REGROUPARTICLES
CREATE TABLE REGROUPARTICLES (
  CODERARTICLES VARCHAR2(14 CHAR) NOT NULL,
  LIBELLE VARCHAR2(35 CHAR),
  SORTORDER NUMBER(*) NOT NULL,
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_SORTORDER PRIMARY KEY (SORTORDER));

--  Table RELATION
CREATE TABLE RELATION (
  RELATIONID NUMBER(*, 0) NOT NULL,
  RELATION VARCHAR2(15 CHAR),
CONSTRAINT PK_RELATIONID PRIMARY KEY (RELATIONID));

--  Table RENSEIGNEMENT
CREATE TABLE RENSEIGNEMENT (
  RENSEIGNEMENTID NUMBER(10, 0) NOT NULL,
  LIBELLE VARCHAR2(40 CHAR),
  DETAILS VARCHAR2(250 CHAR),
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE,
  SITEID  VARCHAR2(14 CHAR),
  POSTEID NUMBER(10),
CONSTRAINT PK_RENSEIGNEMENTID PRIMARY KEY (RENSEIGNEMENTID));

--  Table RESERVATION
CREATE TABLE RESERVATION (
  CODERESERVATION VARCHAR2(14 CHAR) NOT NULL,
  CODETYPERESERVATION VARCHAR2(14 CHAR),
  PRIORITE NUMBER(*),
  SOCIETEID VARCHAR2(14 CHAR),
  INTERLOCUTEURID VARCHAR2(14 CHAR),
  USERID VARCHAR2(14 CHAR) NOT NULL,
  CODEANIMATEUR VARCHAR2(14 CHAR),
  DATERETROCESSION DATE,
  CODESTATUT VARCHAR2(14 CHAR),
  REFRESERVATION VARCHAR2(15 CHAR),
  NBPERSDEMANDE NUMBER(*, 0),
  NBPERSREEL NUMBER(*, 0),
  LIBELLE VARCHAR2(1000 CHAR),
  REMISE FLOAT,
  PRIXRESERVATION FLOAT,
  PRIXFACTUREE FLOAT,
  COMMENTAIRE VARCHAR2(3000 CHAR),
  UPDATEDBY VARCHAR2(14 CHAR),
  DEVIS NUMBER(*),
  FACTURE NUMBER(*),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
  IMPUTATIONID VARCHAR2(14 CHAR),
  SALLE_VALIDEE INTEGER DEFAULT 0,
  EMETTEUR VARCHAR2(200 CHAR),
  EMETTEURID VARCHAR2(14 CHAR),
CONSTRAINT PK_CODERESERVATION PRIMARY KEY (CODERESERVATION));

--  Table RESERVATIONCELL
CREATE TABLE RESERVATIONCELL (
  CODERESERVATION VARCHAR2(14 CHAR) NOT NULL,
  CODELGRESERVATION VARCHAR2(14 CHAR) NOT NULL,
  CODERESERVATIONCELL VARCHAR2(14 CHAR) NOT NULL,
  CODESTATUT VARCHAR2(14 CHAR),
  CODESALLE VARCHAR2(14 CHAR),
  COLOR NUMBER(*, 0),
  CELLTYPE VARCHAR2(1 CHAR),
  HEUREDEBUT DATE,
  HEUREFIN DATE,
  RESERVATIONDATE DATE,
CONSTRAINT PK_CODERESALGRESARESACELL PRIMARY KEY (CODERESERVATION, CODELGRESERVATION, CODERESERVATIONCELL));

--  Table RESIDANTS
CREATE TABLE RESIDANTS (
  SOCIETEID VARCHAR2(14 CHAR) NOT NULL,
  RESIDANTID VARCHAR2(14 CHAR) NOT NULL,
  PLANID VARCHAR2(14 CHAR),
  BUREAUID VARCHAR2(250 CHAR),
  CODECIVILITE NUMBER(*),
  CODEFONCTION NUMBER(10, 0),
  PHONKEY VARCHAR2(35 CHAR) DEFAULT '0',
  EXTERNALID VARCHAR2(24 CHAR),
  SOCIETE VARCHAR2(35 CHAR),
  CIVILITE VARCHAR2(30 CHAR),
  NOMPRENOM VARCHAR2(70 CHAR),
  NOMJEUNEFILLE  VARCHAR2(35 CHAR),
  CPNOM VARCHAR2(250 CHAR),
  NOM VARCHAR2(35 CHAR),
  PRENOM VARCHAR2(35 CHAR),
  FONCTION VARCHAR2(35 CHAR),
  SERVICEID VARCHAR2(14 CHAR),
  TELEPHONE VARCHAR2(20 CHAR),
  EMAIL VARCHAR2(150 CHAR),
  GSM VARCHAR2(20 CHAR),
  FAX VARCHAR2(20 CHAR),
  CANDIDATMAILING VARCHAR2(1 CHAR),
  MATRICULE VARCHAR2(50 CHAR),
  OBSERVATIONS BLOB,
  PHOTO BLOB,
  PERSOADRESSE BLOB,
  PERSOCP VARCHAR2(10 CHAR),
  PERSOVILLE VARCHAR2(35 CHAR),
  PERSOPROVINCE VARCHAR2(35 CHAR),
  PERSOPAYS VARCHAR2(35 CHAR),
  PERSOTELEPHONE VARCHAR2(20 CHAR),
  ISUSER VARCHAR2(10 CHAR),
  MUSTCHANGEPWD NUMBER(*, 0),
  THEPASSWORD VARCHAR2(250 CHAR) NOT NULL,
  THELOGIN VARCHAR2(50 CHAR) NOT NULL,
  USERTYPE NUMBER(*, 0),
  SHORTNAME INTEGER,
  ENABLED VARCHAR2(1 CHAR),
  SITEID VARCHAR2(14 CHAR),
  SITE VARCHAR2(40 CHAR),
  SERVICE VARCHAR2(40 CHAR),
  DEPARTEMENT VARCHAR2(40 CHAR),
  PLANSLIBELLE VARCHAR2(40 CHAR),
  DEPTID VARCHAR2(14 CHAR),
  ETAGEID VARCHAR2(14 CHAR),
  BATIMENT VARCHAR2(60 CHAR),
  BATIMENTID VARCHAR2(14 CHAR),
  ETAGE VARCHAR2(7 CHAR),
  BUREAU VARCHAR2(15 CHAR),
  REFIMPORTATION VARCHAR2(48 CHAR),
  CODEACCES VARCHAR2(24 CHAR),
  DATEENTREE DATE,
  DATESORTIE DATE,
  BOITEPOSTALE VARCHAR2(7 CHAR),
  PARKING VARCHAR2(7 CHAR),
  HABILITATIONVISITE VARCHAR2(1 CHAR),
  LISTEROUGE VARCHAR2(1 CHAR),
  ISEXTERN VARCHAR2(1 CHAR),
  ISRESIDENT VARCHAR2(1 CHAR) DEFAULT '1',
  ISACTIF VARCHAR2(1 CHAR),
  HARRIVEE DATE,
  HDEPART DATE,
  INTERDIT VARCHAR2(1 CHAR),
  DEBUTINTERDIT DATE,
  FININTERDIT DATE,
  NATUREID VARCHAR2(14 CHAR),
  DATENAISSANCE DATE,
  LIEUNAISSANCE VARCHAR2(70 CHAR),
  NATIONALITEID VARCHAR2(14 CHAR),
  NBBDGIMPR NUMBER,
  DIRECTIONID VARCHAR2(14 CHAR),
  DIRECTION VARCHAR2(35 CHAR),
  PASSWORD1 VARCHAR2(250 CHAR),
  PASSWORD2 VARCHAR2(250 CHAR),
  PASSWORD3 VARCHAR2(250 CHAR),
  DATEFINVALPWD DATE,
  IMMATRICULATION VARCHAR2(15 CHAR),
  TAG VARCHAR2(30 CHAR),
  DATEMAJ DATE NOT NULL,
  DATECREATION DATE NOT NULL,
  DATESYNCHRO DATE,
  VERROU NUMBER DEFAULT 0,
  VIP INTEGER DEFAULT 0,
  ETRANGER INTEGER DEFAULT 0,
  CONTRAT VARCHAR2(50 CHAR),
CONSTRAINT PK_RESIDANTID PRIMARY KEY (RESIDANTID));


CREATE TABLE RONDE (
  RONDEID          INTEGER PRIMARY KEY,
  NUMERO       INTEGER,
  LIBELLE          VARCHAR2(50 CHAR),
  SITEID           VARCHAR2(14 CHAR),
  DATECREATION     DATE,
  DATEMAJ          DATE
);

CREATE TABLE RONDECLEEVT (
  RONDECLEEVTID   NUMBER(10, 0) PRIMARY KEY,
  MOTCLE           VARCHAR2(50 CHAR),
  EVENEMENTID      INTEGER,
  DATECREATION     DATE,
  DATEMAJ          DATE
);

CREATE TABLE RONDIER (
  RONDIERID        INTEGER PRIMARY KEY,
  LIBELLE          VARCHAR2(50 CHAR),
  SITEID           VARCHAR2(14 CHAR),
  ETAT             INTEGER,
  DATECREATION     DATE,
  DATEMAJ          DATE
);
CREATE TABLE RONDEMOTCLE (
  RONDEMOTCLEID    NUMBER(10, 0) PRIMARY KEY,
  LIBELLE          VARCHAR2(50 CHAR),
  ETAT           INTEGER,
  DATECREATION     DATE,
  DATEMAJ          DATE
);

CREATE TABLE RONDEMOTCLE_EVT (
  RONDEMOTCLEID    NUMBER(10,0),
  EVENEMENTID     NUMBER(10,0)
);

--  Table RPT_0002
CREATE TABLE RPT_0002 (
  RPT_0002ID NUMBER(10, 0) NOT NULL,
  REF VARCHAR2(20 CHAR),
  VERSION NUMBER(3, 0),
  DATEMAJ DATE,
  AUTEUR VARCHAR2(30 CHAR),
  EVENEMENT VARCHAR2(50 CHAR),
  SOUSEVENEMENT VARCHAR2(30 CHAR),
  DATEINCIDENT DATE,
  TITRE VARCHAR2(50 CHAR),
  PERSONNE VARCHAR2(30 CHAR),
  MATERIEL VARCHAR2(30 CHAR),
  SECOURS VARCHAR2(30 CHAR),
  AGENT VARCHAR2(30 CHAR),
  LIEU VARCHAR2(30 CHAR),
  DETAILS1 VARCHAR2(2000 CHAR),
  DETAILS2 VARCHAR2(2000 CHAR)
);

--  Table RPT_SEM5
CREATE TABLE RPT_SEM5(
     RPT_SEM5ID NUMBER(10) NOT NULL PRIMARY KEY,
     REF VARCHAR2(20 CHAR),
     VERSION NUMBER(3),
     DATEMAJ DATE,
     AUTEUR VARCHAR2(30 CHAR),
     REPRESENTANT VARCHAR2(30 CHAR),
     RAISONSOC VARCHAR2(30 CHAR),
     SELECTDATE DATE,
     HEUREDEB DATE,
     HEUREFIN DATE,
     BATIMENT VARCHAR2(35 CHAR),
     RUE VARCHAR2(60 CHAR),
     SECTEUR VARCHAR2(40 CHAR),
     BAT VARCHAR2(10 CHAR),
     ORGANEAT VARCHAR2(30 CHAR),
     OPERATION VARCHAR2(30 CHAR),
     AGENT VARCHAR2(30 CHAR),
     OPERATEUR VARCHAR2(30 CHAR),
     AUXILIAIRE VARCHAR2(30 CHAR),
     CONSIGNE VARCHAR2(240 CHAR),
     RISQUE VARCHAR2(240 CHAR),
     MOYEN VARCHAR2(240 CHAR),
     MOYENA VARCHAR2(50 CHAR),
     MOYENI VARCHAR2(50 CHAR),
     SITEID VARCHAR2(14 CHAR)
);

--  Table RUE
CREATE TABLE RUE (
  RUEID NUMBER(10, 0) NOT NULL,
  LIBELLE VARCHAR2(60 CHAR),
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE,
  SITEID  VARCHAR2(14 CHAR),
CONSTRAINT PK_RUEID PRIMARY KEY (RUEID));

--  Table SALLE
CREATE TABLE SALLE (
  SITEID VARCHAR2(14 CHAR),
  SOCIETEID VARCHAR2(14 CHAR),
  BATIMENTID VARCHAR2(14 CHAR) NOT NULL,
  CODESALLE VARCHAR2(14 CHAR) NOT NULL,
  LIBELLE VARCHAR2(35 CHAR),
  NOSALLE VARCHAR2(15 CHAR),
  SORTORDER NUMBER(*),
  INDISPONIBLE NUMBER(*),
  INDISPCAUSE BLOB,
  INDISPDEBUT DATE,
  INDISPFIN DATE,
  AMENAGFIXE NUMBER(*),
  RAISONSOCIALE VARCHAR2(35 CHAR),
  ADRESSE BLOB,
  CP VARCHAR2(7 CHAR),
  VILLE VARCHAR2(35 CHAR),
  TELEPHONE VARCHAR2(20 CHAR),
  TELEPHONE2 VARCHAR2(20 CHAR),
  OBSERVATIONS VARCHAR2(3000 CHAR),
  PLANACCES BLOB,
  IMAGE BLOB,
  PORTE_CLE VARCHAR2(50 CHAR),
  PORTE_OPTION VARCHAR2(300 CHAR),
  EMAIL VARCHAR2(150 CHAR),
  DATEMAJ DATE NOT NULL,
  DATECREATION DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_CODESALLE PRIMARY KEY (CODESALLE));

CREATE TABLE SALLEFUS (
   CODESALLEFUS VARCHAR2(14 CHAR),
   LIBELLE  VARCHAR2(50 CHAR),
   DECODESALLE VARCHAR2(14 CHAR),
   DATECREATION DATE,
   DATEMAJ      DATE
);

CREATE TABLE SALLEFUS_COMP (
   CODESALLEFUS VARCHAR2(14 CHAR),
   CODESALLE VARCHAR2(14 CHAR)
);

--  Table SECOURS
CREATE TABLE SECOURS (
  SECOURSID NUMBER(10, 0) NOT NULL,
  LIBELLE VARCHAR2(40 CHAR),
  OBSERVATION VARCHAR2(250 CHAR),
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE,
  SITEID  VARCHAR2(14 CHAR),
CONSTRAINT PK_SECOURSID PRIMARY KEY (SECOURSID));

--  Table SECRETARIAT
CREATE TABLE SECRETARIAT (
  RESIDANTID2 VARCHAR2(14 CHAR) NOT NULL,
  RESIDANTID VARCHAR2(14 CHAR) NOT NULL,
  RELATION VARCHAR2(15 CHAR),
  RELATIONID NUMBER(*, 0),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_RESIDANTID2RESIDANTID PRIMARY KEY (RESIDANTID2,RESIDANTID));

--  Table SECTEUR
CREATE TABLE SECTEUR (
  SECTEURID NUMBER(10, 0) NOT NULL,
  LIBELLE VARCHAR2(40 CHAR),
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE,
  SITEID  VARCHAR2(14 CHAR),
CONSTRAINT PK_SECTEURID PRIMARY KEY (SECTEURID));

--  Table SERVICE
CREATE TABLE SERVICE (
  SERVICEID VARCHAR2(14 CHAR) NOT NULL,
  DEPTID VARCHAR2(14 CHAR),
  EXTERNALID VARCHAR2(24 CHAR),
  LIBELLE VARCHAR2(40 CHAR),
  OBSERVATION BLOB,
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_SERVICEID PRIMARY KEY (SERVICEID));

--  Table SITE
CREATE TABLE SITE (
  SITEID VARCHAR2(14 CHAR) NOT NULL,
  LIBELLE VARCHAR2(35 CHAR),
  ADRESSE BLOB,
  CP VARCHAR2(10 CHAR),
  VILLE VARCHAR2(35 CHAR),
  PAYS VARCHAR2(35 CHAR),
  TELEPHONE VARCHAR2(20 CHAR),
  FAX VARCHAR2(20 CHAR),
  SORTORDER NUMBER(*),
  PROVINCE VARCHAR2(35 CHAR),
  EXTERNALID VARCHAR2(24 CHAR),
  PLANID VARCHAR2(14 CHAR),
  IS_SECURED VARCHAR2(1 CHAR),
  PIECEOBLIGATOIRE NUMBER(*),
  RECHTOLERANTE NUMBER(*),
  OUVERTURE DATE,
  FERMETURE DATE,
  USERID VARCHAR2(50 CHAR),
  SMTP VARCHAR2(50 CHAR),
  FROMADDRESS VARCHAR2(50 CHAR),
  TOADDRESS VARCHAR2(1000 CHAR),
  CARBONCOPY VARCHAR2(1000 CHAR),
  ACTIF INTEGER,
  SUPPRESSION    VARCHAR2(5 CHAR),
  HEURESUPP VARCHAR2(10 CHAR),
  INTERVAL INTEGER,
  OEMAILPARAM  VARCHAR2(20 CHAR),
  TELEM_ACCESS VARCHAR2(50 CHAR),
  CTRL VARCHAR2(5 CHAR),
  WIFI_PRESENT INT,
  WIFI_LIB VARCHAR2(250 CHAR),
  WIFI_HOST VARCHAR2(250 CHAR),
  WIFI_LOGIN VARCHAR2(50 CHAR),
  WIFI_PWD VARCHAR2(50 CHAR),
  WIFI_ENABLEPWD VARCHAR2(20 CHAR),
  WIFI_GRP VARCHAR2(50 CHAR),
  WIFI_HFIN VARCHAR2(10 CHAR),
  TLMQ_SORTIE_FVISITE INT,
  TLMQ_SORTIE_JOUR INT,
  TLMQ_PURGE_PREENRG INT,
  TLMQ_HEURE_FIN VARCHAR2(50 CHAR),
  TLMQ_HEURE_EXEC VARCHAR2(50 CHAR),
  TLMQ_DERN_EXEC DATE,
  BDG_GENERATION INT,
  BDG_DEBUT VARCHAR2(10 CHAR),
  BDG_MILIEU VARCHAR2(20 CHAR),
  BDG_FIN VARCHAR2(10 CHAR),
  BDG_MAX INT,
  BDG_GENERATIONR INT,
  BDG_DEBUTR VARCHAR2(20 CHAR),
  BDG_MILIEUR VARCHAR2(20 CHAR),
  BDG_FINR VARCHAR2(20 CHAR),
  BDG_MAXR INT,
  BDG_GENERATIONVEH INT,
  BDG_DEBUTVEH VARCHAR2(20 CHAR),
  BDG_MILIEUVEH VARCHAR2(20 CHAR),
  BDG_FINVEH VARCHAR2(20 CHAR),
  BDG_MAXVEH INT,
  DATEMAJ DATE NOT NULL,
  DATECREATION DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_SITEID PRIMARY KEY (SITEID));

--  Table SOCBAT
CREATE TABLE SOCBAT (
  BATIMENTID VARCHAR2(14 CHAR) NOT NULL,
  SOCIETEID VARCHAR2(14 CHAR) NOT NULL,
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_BATIMENTIDSOCIETEID PRIMARY KEY (BATIMENTID, SOCIETEID));

--  Table SOCIETE
CREATE TABLE SOCIETE (
  SOCIETEID VARCHAR2(14 CHAR) NOT NULL,
  ISRESIDANT VARCHAR2(1 CHAR),
  EXTERNALID VARCHAR2(24 CHAR),
  GROUPEID VARCHAR2(14 CHAR),
  BADGEID VARCHAR2(14 CHAR),
  PLANID VARCHAR2(14 CHAR),
  USERID VARCHAR2(14 CHAR),
  NATUREID VARCHAR2(14 CHAR),
  NOM VARCHAR2(35 CHAR) NOT NULL,
  DEPARTEMENT VARCHAR2(35 CHAR),
  ADRESSE BLOB,
  ADRESSE2 VARCHAR2(150 CHAR),
  CP VARCHAR2(10 CHAR),
  VILLE VARCHAR2(35 CHAR),
  PROVINCE VARCHAR2(35 CHAR),
  PAYS VARCHAR2(35 CHAR),
  TELEPHONE VARCHAR2(20 CHAR),
  FAX VARCHAR2(20 CHAR),
  EMAIL VARCHAR2(150 CHAR),
  WEB VARCHAR2(50 CHAR),
  PROSPECT NUMBER(*),
  SIRET VARCHAR2(40 CHAR),
  APE VARCHAR2(5 CHAR),
  COMPTECLIENT VARCHAR2(10 CHAR),
  COMPTEFOURNISSEUR VARCHAR2(10 CHAR),
  DISTANCEKM NUMBER(*),
  OBSERVATIONS BLOB,
  PHONKEY VARCHAR2(35 CHAR) DEFAULT '0',
  REFIMPORTATION VARCHAR2(20 CHAR),
  INTERN NUMBER(*),
  CLIENT NUMBER(*),
  FOURNISSEUR NUMBER(*),
  INTERDIT NUMBER(*),
  DEBUTINTERDIT DATE,
  FININTERDIT DATE,
  DATEMAJ DATE NOT NULL,
  DATECREATION DATE NOT NULL,
  DATESYNCHRO DATE,
  ESCORT INT,
CONSTRAINT PK_SOCIETEID PRIMARY KEY (SOCIETEID));

--  Table SOCSITE
CREATE TABLE SOCSITE (
  SOCIETEID VARCHAR2(14 CHAR) NOT NULL,
  SITEID VARCHAR2(14 CHAR) NOT NULL,
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_SOCIETEIDSITEID PRIMARY KEY (SOCIETEID, SITEID));

--  Table SOUSFAMILLE
CREATE TABLE SOUSFAMILLE (
  CODESOUSFAMILLE VARCHAR2(14 CHAR) NOT NULL,
  CODEFAMILLE VARCHAR2(14 CHAR) NOT NULL,
  SOUSFAMILLE VARCHAR2(35 CHAR),
  REMARQUES BLOB,
  LISTEPRIX NUMBER(*),
  IMAGE BLOB,
  MARGE FLOAT,
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_CODESOUSFAMILLECODEFAMILLE PRIMARY KEY (CODESOUSFAMILLE, CODEFAMILLE));

--  Table STATUTPARKING
CREATE TABLE STATUTPARKING (
  CODE_STATUT VARCHAR2(1 CHAR),
  STATUT_NAME VARCHAR2(25 CHAR)
);

--  Table STATUTRESERVATION
CREATE TABLE STATUTRESERVATION (
  CODESTATUT VARCHAR2(14 CHAR) NOT NULL,
  LIBELLE VARCHAR2(35 CHAR),
  COLOR NUMBER(*, 0),
  COLORNAME VARCHAR2(30 CHAR),
  RETROCESSIBLE NUMBER(*),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
  CONFIRMATION NUMBER,
  MESSAGE BLOB,
  NBJOURAD NUMBER,
  NBJOURAR NUMBER,
  NBJOURDELAI NUMBER,
CONSTRAINT PK_CODESTATUT PRIMARY KEY (CODESTATUT));

-- TABLE STATUTRESERVATION_ETAT
CREATE TABLE STATUTRESERVATION_ETAT (
  ID                NUMBER,
  TEXTE             VARCHAR2(50 CHAR),
  DATECREATION      DATE          NOT NULL,
  DATEMAJ           DATE          NOT NULL,
  DATESYNCHRO       DATE);

-- TABLE STATUTRESERVATION_SET
CREATE TABLE STATUTRESERVATION_SET (
  ID                NUMBER,
  TEXTE             VARCHAR2(50 CHAR),
  DATECREATION      DATE          NOT NULL,
  DATEMAJ           DATE          NOT NULL,
  DATESYNCHRO       DATE);

--  Table STATUTVISITE
CREATE TABLE STATUTVISITE (
  STATUTID NUMBER(*, 0) NOT NULL,
  STATUTVISITE VARCHAR2(50 CHAR),
CONSTRAINT PK_STATUTID PRIMARY KEY (STATUTID));


--  Table SUIVI
CREATE TABLE SUIVI (
  SUIVIID NUMBER(10, 0) NOT NULL,
  LIBELLE VARCHAR2(40 CHAR),
  PERSONNELID NUMBER(10, 0),
  OBSERVATION VARCHAR2(800 CHAR),
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE,
CONSTRAINT PK_SUIVIID PRIMARY KEY (SUIVIID));

--  Table TABLEREFERENCE
CREATE TABLE TABLEREFERENCE (
  TABLEREFERENCEID NUMBER(*, 0),
  ID NUMBER(*, 0),
  VALEUR NUMBER(*, 0),
  TEXTE VARCHAR2(100 CHAR),
  TEXTE_FR VARCHAR2(100 CHAR),
  TEXTE_EN VARCHAR2(100 CHAR),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE
);

CREATE TABLE TACHE (
TACHEID    INTEGER PRIMARY KEY,
TACHE_NOM    VARCHAR2(200 CHAR),
TACHE_RANG    INTEGER DEFAULT 0,
TYPEJOUR    VARCHAR2(20 CHAR),
HEUREEXECUTION    DATE,
ACT_NOM    VARCHAR2(50 CHAR),
ACT_PARAM    VARCHAR2(100 CHAR),
FREE01 VARCHAR2(200 CHAR),
FREE02 VARCHAR2(50 CHAR),
FREE03 VARCHAR2(50 CHAR),
MODEA    INTEGER DEFAULT 0,
ACTIF    INTEGER DEFAULT 1,
PROCHAINEEXECUTION DATE,
DERNIEREEXECUTION DATE,
DERNIERRESULTAT    INTEGER DEFAULT 1,
SITEID    VARCHAR2(20 CHAR),
GROUPEDESTID    INTEGER,
NUMSESSIONPROCHAINEEXECUTION INTEGER,
OWNERID VARCHAR2(14) DEFAULT('VPARDEFAUT'),
ROLEOWNER VARCHAR2(20) DEFAULT('USERS'),
DATECREATION DATE NOT NULL,
DATEMAJ DATE
);
COMMIT;


CREATE TABLE CORRESPONDANCE(
    CORRESID INT PRIMARY KEY,
    LIBSSRC VARCHAR2(240),
    RANGSSRC VARCHAR2(20),
    LIBDST VARCHAR2(80),
    CFG_FICHIERID INT,
    CORRES_RANG INT,
    DATEMAJ DATE,
    DATECREATION DATE
);
commit;

CREATE TABLE TACHE_LOG(
    LOGID INT PRIMARY KEY,
    TACHEID NUMBER ,
    NUMSESSION NUMBER ,
    USERID VARCHAR2(14),
    DATECREATION DATE,
    FREEFLAG01 NUMBER,
    FREEFLAG02 NUMBER,
    FREEFLAG03 NUMBER,
    FREEFLAG04 NUMBER,
    IDLIGNE VARCHAR2(14),
    NIVEAUSECU NUMBER,
    ROLEUSER VARCHAR2(20) DEFAULT ('USERS'),
    COMMENTAIRE VARCHAR2(4000)
    );
COMMIT;




CREATE TABLE TAG
(
TAGID    INT    PRIMARY KEY,
TAG    VARCHAR2(35 CHAR),
DESCRIPTION    VARCHAR2(100 CHAR),
TYPE_TAG    INT,
SITEID    VARCHAR2(14 CHAR),
DATECREATION    DATE    NOT NULL,
DATEMAJ    DATE    NOT NULL
);

CREATE TABLE TAG_RONDE
(
TAGID    INT    NOT NULL,
RONDEID    INT    NOT NULL,
ORDRE    INT
);

--  Table TARIFSALLE
CREATE TABLE TARIFSALLE (
  CODESALLE VARCHAR2(14 CHAR) NOT NULL,
  CODETYPETARIF VARCHAR2(14 CHAR) NOT NULL,
  PRIX FLOAT NOT NULL,
  CODETVA VARCHAR(14 CHAR),
  TAUXTVA FLOAT,
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_CODESALLETYPETARIF PRIMARY KEY (CODESALLE, CODETYPETARIF));

--  Table TMPIMPORT
CREATE TABLE TMPIMPORT (
  ID_TMPI NUMBER(10, 0),
  USERNEDAP VARCHAR2(20 CHAR),
  PASSNEDAP VARCHAR2(20 CHAR),
  NOM VARCHAR2(50 CHAR),
  PRENOM VARCHAR2(50 CHAR),
  TEL VARCHAR2(20 CHAR),
  SOCIETE VARCHAR2(50 CHAR),
  NOM2 VARCHAR2(50 CHAR),
  DEBUT DATE,
  FIN DATE,
  PROFIL VARCHAR2(50 CHAR),
  T VARCHAR2(50 CHAR),
  CODEBARRE VARCHAR2(20 CHAR),
  SITEID VARCHAR2(20 CHAR),
  GUICHETID VARCHAR2(20 CHAR),
  BOITE VARCHAR2(20 CHAR)
);

--  Table TRANCHE
CREATE TABLE TRANCHE (
  CODETRANCHE VARCHAR2(14 CHAR) NOT NULL,
  LIBELLE VARCHAR2(35 CHAR),
  HEUREDEBUT DATE,
  HEUREFIN DATE,
  CODETARIF VARCHAR2(14 CHAR),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_CODETRANCHE PRIMARY KEY (CODETRANCHE));

--  Table TVA
CREATE TABLE TVA (
  CODETVA VARCHAR2(14 CHAR) NOT NULL,
  LIBELLE VARCHAR2(30 CHAR),
  TAUXTVA FLOAT NOT NULL,
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_CODETVA PRIMARY KEY (CODETVA));

--  Table TYPEADRESSE
CREATE TABLE TYPEADRESSE (
  TYPEADRESSEID NUMBER(*, 0) NOT NULL,
  TYPEADRESSE VARCHAR2(40 CHAR),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_TYPEADRESSEID PRIMARY KEY (TYPEADRESSEID));

--  Table TYPECONSIGNE
CREATE TABLE TYPECONSIGNE (
  TYPECONSIGNEID NUMBER(*, 0) NOT NULL,
  TYPECONSIGNE VARCHAR2(35 CHAR),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO     DATE,
CONSTRAINT PK_TYPECONSIGNEID PRIMARY KEY (TYPECONSIGNEID));

--  Table TYPEDEFAULT
CREATE TABLE TYPEDEFAULT (
  CODETYPEDEFAULT VARCHAR2(14 CHAR) NOT NULL,
  LIBELLE VARCHAR2(35 CHAR),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_CODETYPEDEFAULT PRIMARY KEY (CODETYPEDEFAULT));

--  Table TYPEIDENTITE
CREATE TABLE TYPEIDENTITE (
  TYPEIDENTITEID NUMBER(*, 0) NOT NULL,
  LIBELLE VARCHAR2(35 CHAR),
  DATEMAJ DATE NOT NULL,
  DATECREATION DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_TYPEIDENTITEID PRIMARY KEY (TYPEIDENTITEID));

--  Table TYPERESERVATION
CREATE TABLE TYPERESERVATION (
  CODETYPERESERVATION VARCHAR2(14 CHAR) NOT NULL,
  LIBELLE VARCHAR2(35 CHAR),
  DATEMAJ DATE NOT NULL,
  DATECREATION DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_CODETYPERESERVATION PRIMARY KEY (CODETYPERESERVATION));

--  Table TYPETARIF
CREATE TABLE TYPETARIF (
  CODETYPETARIF VARCHAR2(24 CHAR) NOT NULL,
  LIBELLE VARCHAR2(35 CHAR),
  COEFICIENT FLOAT,
  HEUREDEBUT DATE,
  HEUREFIN DATE,
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE);

--  Table TYPEVISITE
CREATE TABLE TYPEVISITE (
  TYPEVISITEID NUMBER(*, 0) NOT NULL,
  TYPEVISITE VARCHAR2(70 CHAR),
  TRAVAIL INT DEFAULT 0,
  TYPESORTIE INT DEFAULT 0,
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO     DATE,
CONSTRAINT PK_TYPEVISITEID PRIMARY KEY (TYPEVISITEID));

--  Table TYPE_MISSION
CREATE TABLE TYPE_MISSION (
  TYPE_MISSIONID NUMBER(5, 0) NOT NULL,
  LIBELLE VARCHAR2(40 CHAR),
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE,
  SITEID  VARCHAR2(14 CHAR),
  POSTEID NUMBER(10),
CONSTRAINT PK_TYPE_MISSIONID PRIMARY KEY (TYPE_MISSIONID));

--  Table USERS
CREATE TABLE USERS (
  USERID VARCHAR2(14 CHAR) NOT NULL,
  CIVILITEID NUMBER(*, 0),
  FIRSTNAME VARCHAR2(35 CHAR),
  ENABLED NUMBER(*),
  LASTNAME VARCHAR2(35 CHAR),
  PHONNAME VARCHAR2(50 CHAR),
  USERTYPEID VARCHAR2(24 CHAR),
  GSACCESS NUMBER(*, 0) DEFAULT (0),
  GVACCESS NUMBER(*, 0),
  EXTERNALID VARCHAR2(24 CHAR),
  FULLNAME VARCHAR2(70 CHAR),
  INTERNETMAILADR VARCHAR2(120 CHAR),
  MATRICULE VARCHAR2(50 CHAR),
  OBSERVATIONS BLOB,
  PHONKEY VARCHAR2(50 CHAR),
  PROFIL_PARAMCOMPTE VARCHAR2(14 CHAR),
  PROFIL_ID_ORGA VARCHAR2(14 CHAR),
  PROFIL_ID_INTER VARCHAR2(14 CHAR),
  PROFIL_ID_SALLE VARCHAR2(14 CHAR),
  PROFIL_ID_BATIMENT VARCHAR2(14 CHAR),
  PROFIL_ID_SITE VARCHAR2(14 CHAR),
  PROFIL_ETAGE VARCHAR2(14 CHAR),
  PROFIL_SURBOOKING NUMBER(*, 0),
  PROFIL_PARAMVALIDE VARCHAR2(14 CHAR),
  PROFIL_ID_STATUT VARCHAR2(14 CHAR),
  SHORTNAME VARCHAR2(5 CHAR),
  THELOGIN VARCHAR2(50 CHAR),
  THEPASSWORD VARCHAR2(250 CHAR),
  USERTYPE NUMBER(*),
  DATEMAJ DATE NOT NULL,
  DATECREATION DATE NOT NULL,
  DATESYNCHRO DATE,
  GCACCESS NUMBER(*, 0),
  SITE    VARCHAR2(35 CHAR),
  SITEID VARCHAR2(14 CHAR),
  GRPUSERID VARCHAR2(14 CHAR),
  DATEMAJPWD DATE,
  SOCIETEID VARCHAR2(14 CHAR),
  SOCIETE VARCHAR2(35 CHAR),
  TYPEUSERID INT,
  ID_DROITSTAXI INT,
  EMPPK BLOB,
  EMPPK_LEN INTEGER,
  ID_DROITSTELEM INT,
CONSTRAINT PK_USERID PRIMARY KEY (USERID));

CREATE TABLE USER_GRPS(
    USERID VARCHAR2(14 CHAR),
    GRPSALLEID VARCHAR2(14 CHAR)
);


--  Table VACATION
CREATE TABLE VACATION (
  VACATIONID NUMBER(5, 0) NOT NULL,
  JOUR_SEM VARCHAR2(20 CHAR),
  VSERVICE VARCHAR2(40 CHAR),
  HEURE_DEBUT DATE,
  HEURE_FIN DATE,
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE,
  SITEID  VARCHAR2(14 CHAR),
  POSTEID NUMBER(10),
  CL INT,
CONSTRAINT PK_VACATIONID PRIMARY KEY (VACATIONID));

--  Table VEHICULE
CREATE TABLE VEHICULE (
  VEHICULEID VARCHAR2(14 CHAR) NOT NULL,
  RESIDANTID VARCHAR2(14 CHAR),
  IMMATRICULATION VARCHAR2(15 CHAR),
  MARQUE VARCHAR2(20 CHAR),
  MODELE VARCHAR2(40 CHAR),
  TYPE VARCHAR2(50 CHAR),
  ENERGIE VARCHAR2(20 CHAR),
  DATELIMITE DATE,
  NUMEROPASS VARCHAR2(40 CHAR),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_VEHICULEID PRIMARY KEY (VEHICULEID));

--  Table VERSION_SFW
CREATE TABLE VERSION_SFW (
  COMPATIBLE VARCHAR2(10 CHAR),
  SCHEMAS VARCHAR2(10 CHAR),
  INFO VARCHAR2(50 CHAR),
  DATECREATION DATE,
  DATEMAJ DATE,
  FORMATDATE VARCHAR2(10 CHAR),
  VERSION VARCHAR2(50 CHAR)
);

--  Table VILLE
CREATE TABLE VILLE (
  CODEVILLE VARCHAR2(14 CHAR) NOT NULL,
  CODEPOSTAL VARCHAR2(5 CHAR),
  PHONKEY VARCHAR2(35 CHAR),
  VILLE VARCHAR2(35 CHAR),
  PAYSID VARCHAR2(14 CHAR),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_CODEVILLE PRIMARY KEY (CODEVILLE));

--  Table VISITES
CREATE TABLE VISITES (
  VISITEID VARCHAR2(14 CHAR) NOT NULL,
  INTERLOCUTEURID VARCHAR2(14 CHAR),
  RESIDANTID VARCHAR2(14 CHAR),
  CODESALLE VARCHAR2(14 CHAR),
  SITEID VARCHAR2(14 CHAR),
  STATUTID NUMBER(*, 0),
  EXTERNALID VARCHAR2(24 CHAR),
  SOCIETERESID VARCHAR2(35 CHAR),
  NOMPRENOMRESID VARCHAR2(70 CHAR),
  SOCIETEVISIT VARCHAR2(35 CHAR),
  NOMPRENOMVISIT VARCHAR2(70 CHAR),
  DEBUTPREVU DATE,
  FINPREVU DATE,
  HDEBUTPREVU DATE,
  HFINPREVU DATE,
  NUMEROBADGE VARCHAR2(200 CHAR),
  NUMEROVISITE NUMBER(*, 0),
  DEBUTVISITE DATE,
  FINVISITE DATE,
  HDEBUT DATE,
  HFIN DATE,
  STATUTVISITE VARCHAR2(50 CHAR),
  TYPEVISITEID NUMBER(*, 0),
  BOITE VARCHAR2(6 CHAR),
  CASIER VARCHAR2(6 CHAR),
  OBJET VARCHAR2(200 CHAR),
  CASIERID NUMBER(*, 0),
  PIECE VARCHAR2(35 CHAR),
  NUMERO VARCHAR2(20 CHAR),
  VALIDITE DATE,
  PARKING VARCHAR2(35 CHAR),
  IMMATRICULATION VARCHAR2(15 CHAR),
  GUICHETID VARCHAR2(14 CHAR),
  OBSERVATION VARCHAR2(200 CHAR),
  BUREAUID VARCHAR2(14 CHAR),
  LIEU VARCHAR2(60 CHAR),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
  ORIGINEVISITE        NUMBER,
  NBBDGIMPR        NUMBER,
  NBBDGIMPRTOTAL    NUMBER  DEFAULT 0,
  FREE1  VARCHAR2(50 CHAR),
  FREE2  VARCHAR2(250 CHAR),
  FREE3  VARCHAR2(50 CHAR),
  FREE4  VARCHAR2(50 CHAR),
  FREE5  VARCHAR2(50 CHAR),
  FREE6  VARCHAR2(50 CHAR),
  FREE7  VARCHAR2(50 CHAR),
  FREE8  VARCHAR2(250 CHAR),
  FREE9  VARCHAR2(250 CHAR),
  FREE10 VARCHAR2(50 CHAR),
  MARQUE VARCHAR2(20 CHAR),
  MODELE VARCHAR2(40 CHAR),
  COTE     NUMBER,
  PREMIER INT,
  PREENREG INT DEFAULT 0,
  ECHANGES INT DEFAULT 0,
  ZONE VARCHAR2(1 CHAR),
  DESCENTE INT DEFAULT 0,
  BADGEPHYSIQUE    VARCHAR2(50 CHAR),
  ATTENDU     INTEGER DEFAULT 0,
  ATTENDU_VENU     INTEGER DEFAULT 0,
  DATEHEUREENTREEPARKING DATE,
  DATEHEURESORTIEPARKING DATE,
  STATUTPARKING    VARCHAR2(20 CHAR) DEFAULT '0',
  DEBLOC NUMBER,
  DEBLOC_USER VARCHAR2(50 CHAR),
  DEBLOC_USERID VARCHAR2(14 CHAR),
  DEBLOC_HEURE DATE,
  IFONCTION VARCHAR2(35 CHAR),
  IDATENAISSANCE DATE,
  ILIEUNAISSANCE VARCHAR2(70 CHAR),
  IPAYS VARCHAR2(35 CHAR),
  INOMJEUNEFILLE VARCHAR2(35 CHAR),
  MODIFICATION VARCHAR2(100 CHAR),
  ETATVISITE VARCHAR2(1 CHAR),
  VIP INTEGER DEFAULT 0,
  ISTATUT VARCHAR2(35 CHAR),
  CODELGRESERVATION VARCHAR2(14 CHAR),
  TICKET VARCHAR2(50 CHAR),
  RONDIER VARCHAR2(50 CHAR),
  RONDIERID INTEGER,
  CLE VARCHAR2(500 CHAR),
  PROFIL_CTRL VARCHAR2(4000 CHAR),
  PROFIL_CTRL2 VARCHAR2(4000 CHAR),
  PROFIL_CTRL_ID VARCHAR2(4000 CHAR),
  WIFI_LOGIN VARCHAR2(50 CHAR),
  WIFI_PWD VARCHAR2(50 CHAR),
  ALERTE VARCHAR2(4000),
  LAST_ACTION VARCHAR2(50),
  RES_OS VARCHAR2(50),
  RES_FINAL VARCHAR2(50),
  RES_MOTEUR1 VARCHAR2(50),
  RES_MOTEUR2 VARCHAR2(50),
  INFO VARCHAR2(50),
  SIGNATURE_ENTREE INT,
  SIGNATURE_SORTIE INT,
  FUSION INT DEFAULT '0',
  REFIMPORTATION VARCHAR2(30 CHAR) DEFAULT 'UNIS',
  ZRR_CODE VARCHAR2(25),
  ZRR_LIB VARCHAR2(255),
  ZRR_LS VARCHAR2(3),
  NATUREVISITE VARCHAR2(7) DEFAULT 'VISITE' NOT NULL ,
  MESSAGEVALIDEUR VARCHAR2(1000 CHAR),
  ACCOMPAGNATEURID VARCHAR2(14 CHAR),
  CATEGORIE VARCHAR2(30),
  GRPVALIDEUR2 VARCHAR2(50) NULL,
  GRPVALIDEUR3 VARCHAR2(50) NULL,
  GRPVALIDEUR4 VARCHAR2(50) NULL,
  RANKLASTVAL INT NULL,
  IDEPFR VARCHAR2(100),
  EMETTEUR VARCHAR(200),
  USER_IN VARCHAR(200),
  USER_OUT VARCHAR(200),
CONSTRAINT PK_VISITEID PRIMARY KEY (VISITEID));

-- premier pour dire si c la premier visite, et dire dans le champ condidatmailing 1 pour ne pas refaire le test sur les autres visites
-- preenreg pour dire si c une visite qui avait un preenreg ou pas


--  Table VISITES_TEMP
CREATE TABLE VISITES_TEMP (
  VISITEID VARCHAR2(14 CHAR) NOT NULL,
  INTERLOCUTEURID VARCHAR2(14 CHAR),
  RESIDANTID VARCHAR2(14 CHAR),
  CODESALLE VARCHAR2(14 CHAR),
  SITEID VARCHAR2(14 CHAR),
  STATUTID NUMBER(*, 0),
  EXTERNALID VARCHAR2(24 CHAR),
  SOCIETERESID VARCHAR2(35 CHAR),
  NOMPRENOMRESID VARCHAR2(35 CHAR),
  SOCIETEVISIT VARCHAR2(35 CHAR),
  NOMPRENOMVISIT VARCHAR2(35 CHAR),
  DEBUTPREVU DATE,
  FINPREVU DATE,
  HDEBUTPREVU DATE,
  HFINPREVU DATE,
  NUMEROBADGE VARCHAR2(200 CHAR),
  NUMEROVISITE NUMBER(*, 0),
  DEBUTVISITE DATE,
  FINVISITE DATE,
  HDEBUT DATE,
  HFIN DATE,
  STATUTVISITE VARCHAR2(50 CHAR),
  TYPEVISITEID NUMBER(*, 0),
  BOITE VARCHAR2(6 CHAR),
  CASIER VARCHAR2(6 CHAR),
  OBJET VARCHAR2(200 CHAR),
  CASIERID NUMBER(*, 0),
  PIECE VARCHAR2(35 CHAR),
  NUMERO VARCHAR2(20 CHAR),
  VALIDITE DATE,
  PARKING VARCHAR2(6 CHAR),
  IMMATRICULATION VARCHAR2(15 CHAR),
  GUICHETID VARCHAR2(14 CHAR),
  OBSERVATION VARCHAR2(200 CHAR),
  BUREAUID VARCHAR2(14 CHAR),
  LIEU VARCHAR2(50 CHAR),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
  ORIGINEVISITE        NUMBER,
  NBBDGIMPR        NUMBER,
  NBBDGIMPRTOTAL    NUMBER,
  FREE1  VARCHAR2(50 CHAR),
  FREE2  VARCHAR2(50 CHAR),
  FREE3  VARCHAR2(50 CHAR),
  FREE4  VARCHAR2(50 CHAR),
  FREE5  VARCHAR2(50 CHAR),
  FREE6  VARCHAR2(50 CHAR),
  FREE7  VARCHAR2(50 CHAR),
  FREE8  VARCHAR2(50 CHAR),
  FREE9  VARCHAR2(50 CHAR),
  FREE10 VARCHAR2(50 CHAR),
  ETATVISITE    VARCHAR2(1 CHAR));

-- TABLE VISITES_EXT
CREATE TABLE VISITES_EXT (
  VISITES_EXTID    VARCHAR2(14 CHAR),
  FREE1        VARCHAR2(50 CHAR),
  FREE2        VARCHAR2(50 CHAR),
  FREE3        VARCHAR2(50 CHAR),
  FREE4        VARCHAR2(50 CHAR),
  FREE5        VARCHAR2(50 CHAR),
  FREE6        VARCHAR2(50 CHAR),
  FREE7        VARCHAR2(50 CHAR),
  FREE8        VARCHAR2(50 CHAR),
  FREE9        VARCHAR2(50 CHAR),
  FREE10    VARCHAR2(50 CHAR),
  MARCHEID    VARCHAR2(14 CHAR)
);

-- TABLE VISITES_EXT_L
CREATE TABLE VISITES_EXT_L (
  VISITEID_ANCIEN    VARCHAR2(14 CHAR),
  VISITEID_NOUVEAU     VARCHAR2(14 CHAR)
);

-- VISITES_EXT_ZO
CREATE TABLE VISITES_EXT_ZO (
  VISITEID    VARCHAR2(14 CHAR),
  ZONEID     VARCHAR2(14 CHAR)
);

--  Table VSERVICE
CREATE TABLE VSERVICE (
  VSERVICEID NUMBER(10, 0) NOT NULL,
  LIBELLE VARCHAR2(40 CHAR),
  DATEMAJ DATE,
  DATECREATION DATE,
  DATESYNCHRO DATE,
CONSTRAINT PK_VSERVICEID PRIMARY KEY (VSERVICEID));

--  Table WEBPLANNING
CREATE TABLE WEBPLANNING (
  DATEBEGIN DATE NOT NULL,
  DATEEND DATE NOT NULL,
  IMAGEPATH VARCHAR2(80 CHAR),
PRIMARY KEY (DATEBEGIN, DATEEND));

-- TABLE ZONE
CREATE TABLE ZONE(
  ZONEID           VARCHAR2(14 CHAR) NOT NULL,
  ZONENOM          VARCHAR2(20 CHAR),
  ZONERESPONSABLE  VARCHAR2(30 CHAR),
  DATEMAJ          DATE,
  DATECREATION     DATE,
  DATESYNCHRO      DATE);

CREATE TABLE VISITE_CONTROLE (
 VISITEID VARCHAR2(14 CHAR),
 NUMEROVISITE NUMBER,
 RESIDANTID VARCHAR2(14 CHAR),
 DATEVISITE DATE
);

CREATE TABLE TRACE_ACTION (
  TRACE_ACTIONID VARCHAR2(14 CHAR) NOT NULL,
  USERID VARCHAR2(14 CHAR),
  NOMPRENOMUSER VARCHAR2(70 CHAR),
  SITEID VARCHAR2(14 CHAR),
  SITE VARCHAR2(35 CHAR),
  ACTION VARCHAR2(50 CHAR),
  LIEU VARCHAR2(50 CHAR),
  DETAILS VARCHAR2(1000 CHAR),
  GENERIQUEID VARCHAR2(14 CHAR),
  GENERIQUETABLE VARCHAR2(50 CHAR),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE
);

CREATE TABLE GSVALIDATION_LOG
(
  GSVALIDATION_LOGID    VARCHAR2(14 CHAR)    NOT NULL,
  CODERESERVATION    VARCHAR2(14 CHAR),
  REFRESERVATION    VARCHAR2(15 CHAR),
  LIBELLESALLE    VARCHAR2(70 CHAR),
  DATEDEBUT    DATE,
  DATEFIN    DATE,
  STATUT_OLD VARCHAR2(35 CHAR),
  STATUT VARCHAR2(35 CHAR),
  VALIDEUR VARCHAR2(70 CHAR),
  DATECREATION    DATE,
  DATEMAJ    DATE
);

-- Table ESVISITES_LOG
CREATE TABLE ESVISITES_LOG (
  ESVISITES_LOGID VARCHAR2(14 CHAR) NOT NULL,
  QUIID VARCHAR2(14 CHAR),
  QUITYPE VARCHAR2(40 CHAR),
  NOMPRENOM VARCHAR2(70 CHAR),
  SOCIETE  VARCHAR2(70 CHAR),
  NUMBADGE VARCHAR2(200 CHAR),
  SENS     VARCHAR2(50 CHAR),
  ETAT     VARCHAR2(50 CHAR),
  DETAILS  VARCHAR2(200 CHAR),
  PASSAGE DATE,
  TYPEINSERT VARCHAR2(14 CHAR),
  REMOTEDATE VARCHAR2(20 CHAR),
  SITEID VARCHAR2(14 CHAR),
  GUICHETID VARCHAR2(14 CHAR),
  POSTE     VARCHAR2(50 CHAR),
  TYPELECTEUR VARCHAR2(40 CHAR),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO     DATE
);

COMMIT;

CREATE TABLE LOCALISATION (
    LOCALISATIONID INTEGER PRIMARY KEY,
    LIBELLE VARCHAR2(100 CHAR),
    SITEID VARCHAR2(14 CHAR),
    SALLE_CAGE VARCHAR2(100 CHAR),
    BAIE VARCHAR2(100 CHAR),
    LOCALISATION_TYPE VARCHAR2(50 CHAR),
    CODE VARCHAR2(100 CHAR),
    EMPREINTE VARCHAR2(100 CHAR),
    DATECREATION DATE NOT NULL,
    DATEMAJ DATE NOT NULL,
    DATESYNCHRO DATE
);
COMMIT;

CREATE TABLE CLEFS_LOCALISATION (
    CLEID VARCHAR2(14 CHAR),
    LOCALISATIONID INTEGER
);
COMMIT;

CREATE TABLE PROFIL_CTRL_LOCALISATION (
    PROFIL_CTRLID INTEGER,
    LOCALISATIONID INTEGER
);
COMMIT;

CREATE TABLE VISITES_LOCALISATION (
    VISITEID VARCHAR2(14 CHAR),
    LOCALISATIONID INTEGER
);
COMMIT;

CREATE TABLE SOCIETE_LOCALISATION (
    SOCIETEID VARCHAR2(14 CHAR),
    LOCALISATIONID INTEGER
);
COMMIT;

CREATE TABLE PROFIL_CTRL (
    PROFIL_CTRLID INTEGER PRIMARY KEY,
    PROFIL_CTRL VARCHAR2(100 CHAR),
    PROFIL_CTRLID_EXT VARCHAR2(50 CHAR),
    PROFILDEFAULT INTEGER DEFAULT 0,
    SITEID VARCHAR2(14 CHAR),
    CODE_CLASSE NUMBER(10, 0),
	ASCENSEUR VARCHAR2(50 CHAR),
    DATECREATION DATE NOT NULL,
    DATEMAJ DATE NOT NULL,
    DATESYNCHRO DATE
);
COMMIT;

CREATE TABLE TYPEDOCUMENT (
    TYPEDOCUMENTID NUMBER PRIMARY KEY,
    LIBELLE VARCHAR2(35 CHAR),
    PORTEEID NUMBER,
    OBLIGATOIRE NUMBER,
    MODIFIABLE NUMBER,
    VALIDITEPARDEFAUT NUMBER,
    CREATCTRL NUMBER,
    IN_PREENREG NUMBER DEFAULT 2,
    DATECREATION DATE,
    DATEMAJ DATE,
    DATESYNCHRO DATE,
	ISMULTISITE NUMBER DEFAULT 1,
	INTER_EFFECT INT DEFAULT 2
);
COMMIT;



CREATE TABLE TYPEVISDOC (
  TYPEDOCUMENTID  NUMBER,
  TYPEVISITEID    NUMBER
);
COMMIT;

CREATE TABLE REGLES (
    REGLEID NUMBER PRIMARY KEY,
    LIBELLE VARCHAR2(50 CHAR),
    RANGREGLE NUMBER,
    TYPEVISITE NUMBER,
    TYPEACTION NUMBER,
    ACTIONBLOQUANTE NUMBER,
    TYPEREGLE NUMBER,
    FREE1 VARCHAR2(35 CHAR),
    FREE2 NUMBER,
    FREE3 VARCHAR2(35 CHAR),
    FREE4 NUMBER,
    FREE5 NUMBER DEFAULT(0),
    FREE6 NUMBER DEFAULT(0),
    FREE7 VARCHAR2(35 CHAR),
    MESSAGE VARCHAR2(100 CHAR),
    FREE8 VARCHAR2(100 CHAR),
    MESSAGEACC VARCHAR2(100 CHAR),
    SITEID VARCHAR2(14 CHAR),
    PERIODE VARCHAR2(35),
    DUREE VARCHAR2(35),
    FLAG_TIC NUMBER DEFAULT(0),
    STATUT NUMBER DEFAULT(1),
	GRPVALIDEURID INT NULL,
	CATEGORIE VARCHAR2(30),
	BYPASS INT DEFAULT(0),
    NATUREVISITE VARCHAR2(14) DEFAULT('-2'),
    DATECREATION DATE,
    DATEMAJ DATE,
    DATESYNCHRO DATE
);
COMMIT;


CREATE TABLE VISITE_REGLE(
    VISITEID VARCHAR2(14) ,
    REGLEID NUMBER,
    ARBITRAGE NUMBER,
    ACTIONBLOQUANTE NUMBER,
    RANGREGLE NUMBER,
    MES_RESI VARCHAR2(4000),
    MES_VALI VARCHAR2(4000),
    MES_ACC VARCHAR2(4000),
	CATEGORIE VARCHAR2(30),
    DATEMAJ DATE NOT NULL,
    DATECREATION DATE NOT NULL,
    DATESYNCHRO DATE,
    CONSTRAINT PK_VISREGID PRIMARY KEY (VISITEID,REGLEID)
);

COMMIT;


CREATE TABLE REGLE_ACTION (
 REGLEID NUMBER NOT NULL,
 ACTIONID NUMBER NOT NULL,
 CONSTRAINT PK_REGLE_ACTION PRIMARY KEY (REGLEID,ACTIONID)
 );
 COMMIT;


CREATE TABLE LOGWIFI (
  LOGWIFIID NUMBER NOT NULL,
  VISITEID VARCHAR2(15 CHAR),
  SITEID VARCHAR2(15 CHAR),
  WIFI_LOGIN VARCHAR2(50 CHAR),
  WIFI_PWD VARCHAR2(50 CHAR),
  WIFI_ETAT VARCHAR2(50 CHAR),
  DATECREATION DATE,
  DATEMAJ DATE,
  DATESYNCHRO DATE,
CONSTRAINT PK_LOGWIFIID PRIMARY KEY (LOGWIFIID));
COMMIT;

--------------------TABLES DEDOUBLONNAGE
CREATE TABLE TEMPSOC (
TMPID VARCHAR2(14 CHAR) NOT NULL,
TMPNOM  VARCHAR2(35 CHAR) NOT NULL,
TMPRANG INT,
TRAITE VARCHAR2(1 CHAR),
CONSTRAINT PK_TMPID PRIMARY KEY (TMPID));

CREATE TABLE TEMPSOC2 (
TMP2ID VARCHAR2(14 CHAR) NOT NULL,
TMPNOM  VARCHAR2(35 CHAR) NOT NULL,
TMPRANG INT,
TRAITE VARCHAR2(1 CHAR),
CONSTRAINT PK_TMP2ID PRIMARY KEY (TMP2ID)) ;

COMMIT;

CREATE INDEX TEMPSOC_TMPNOM ON TEMPSOC (TMPNOM);
CREATE INDEX TEMPSOC2_TMPNOM ON TEMPSOC2 (TMPNOM);

COMMIT;

CREATE TABLE DEDUP_DEDUP
( DEDUP1ID VARCHAR2(14 CHAR) NOT NULL,
  DEDUP2ID VARCHAR2(14 CHAR) NOT NULL,
  SIMIL_FLAG VARCHAR2(1 CHAR) DEFAULT('1'),
  ENTITE VARCHAR2(50 CHAR),
  JW INT,
 CONSTRAINT PK_DEDUP_DEDUPID PRIMARY KEY (DEDUP1ID,DEDUP2ID)
  ) ;
  COMMIT;

 CREATE TABLE POSTE_TYPEVISITE (
  NOM_POSTE VARCHAR2(50),
  TYPEVISITEID INT);
COMMIT;
----------------------------------------------------------------------------------
--       ZCL01                                                                  --
----------------------------------------------------------------------------------
-- TABLE PROFILESMV
CREATE TABLE PROFILESMV (
  PROFILESMVID VARCHAR2(14 CHAR) NOT NULL,
  CLASSID NUMBER(2,0),
  CLASSNAME VARCHAR2(24 CHAR),
  ZHGLEC1 VARCHAR2(2 CHAR),
  ZHGLEC2 VARCHAR2(2 CHAR),
  ZHGLEC3 VARCHAR2(2 CHAR),
  ZHGLEC4 VARCHAR2(2 CHAR),
  ZHGLEC5 VARCHAR2(2 CHAR),
  ZHGLEC6 VARCHAR2(2 CHAR),
  ZHGLEC7 VARCHAR2(2 CHAR),
  ZHGLEC8 VARCHAR2(2 CHAR),
  NUMLEC1 VARCHAR2(8 CHAR),
  NUMLEC2 VARCHAR2(8 CHAR),
  ZH1     VARCHAR2(2 CHAR),
  ZH2     VARCHAR2(2 CHAR),
  ACTLEC1 VARCHAR2(4 CHAR),
  ACTLEC2 VARCHAR2(4 CHAR),
  ACTGRP1 VARCHAR2(4 CHAR),
  LIBELLE VARCHAR2(200 CHAR),
  IFAMILLE VARCHAR2(24 CHAR),
  IFAMILLEID VARCHAR2(24 CHAR),
  ISERVICE VARCHAR2(24 CHAR),
  SERVICE VARCHAR2(40 CHAR),
  SERVICEID VARCHAR2(14 CHAR),
  IFAMILLE2 VARCHAR2(24 CHAR),
  IFAMILLEID2 VARCHAR2(24 CHAR),
  CLASSID2 NUMBER(2,0),
  CLASSNAME2 VARCHAR2(24 CHAR),
  ZHGLEC12 VARCHAR2(2 CHAR),
  ZHGLEC22 VARCHAR2(2 CHAR),
  ZHGLEC32 VARCHAR2(2 CHAR),
  ZHGLEC42 VARCHAR2(2 CHAR),
  ZHGLEC52 VARCHAR2(2 CHAR),
  ZHGLEC62 VARCHAR2(2 CHAR),
  ZHGLEC72 VARCHAR2(2 CHAR),
  ZHGLEC82 VARCHAR2(2 CHAR),
  NUMLEC12 VARCHAR2(8 CHAR),
  NUMLEC22 VARCHAR2(8 CHAR),
  ZH12     VARCHAR2(2 CHAR),
  ZH22     VARCHAR2(2 CHAR),
  ACTLEC12 VARCHAR2(4 CHAR),
  ACTLEC22 VARCHAR2(4 CHAR),
  ACTGRP12 VARCHAR2(4 CHAR),
  IFAMILLE3 VARCHAR2(24 CHAR),
  IFAMILLEID3 VARCHAR2(24 CHAR),
  CLASSID3 NUMBER(2,0),
  CLASSNAME3 VARCHAR2(24 CHAR),
  ZHGLEC13 VARCHAR2(2 CHAR),
  ZHGLEC23 VARCHAR2(2 CHAR),
  ZHGLEC33 VARCHAR2(2 CHAR),
  ZHGLEC43 VARCHAR2(2 CHAR),
  ZHGLEC53 VARCHAR2(2 CHAR),
  ZHGLEC63 VARCHAR2(2 CHAR),
  ZHGLEC73 VARCHAR2(2 CHAR),
  ZHGLEC83 VARCHAR2(2 CHAR),
  NUMLEC13 VARCHAR2(8 CHAR),
  NUMLEC23 VARCHAR2(8 CHAR),
  ZH13     VARCHAR2(2 CHAR),
  ZH23     VARCHAR2(2 CHAR),
  ACTLEC13 VARCHAR2(4 CHAR),
  ACTLEC23 VARCHAR2(4 CHAR),
  ACTGRP13 VARCHAR2(4 CHAR),
  IFAMILLE4 VARCHAR2(24 CHAR),
  IFAMILLEID4 VARCHAR2(24 CHAR),
  CLASSID4 NUMBER(2,0),
  CLASSNAME4 VARCHAR2(24 CHAR),
  ZHGLEC14 VARCHAR2(2 CHAR),
  ZHGLEC24 VARCHAR2(2 CHAR),
  ZHGLEC34 VARCHAR2(2 CHAR),
  ZHGLEC44 VARCHAR2(2 CHAR),
  ZHGLEC54 VARCHAR2(2 CHAR),
  ZHGLEC64 VARCHAR2(2 CHAR),
  ZHGLEC74 VARCHAR2(2 CHAR),
  ZHGLEC84 VARCHAR2(2 CHAR),
  NUMLEC14 VARCHAR2(8 CHAR),
  NUMLEC24 VARCHAR2(8 CHAR),
  ZH14     VARCHAR2(2 CHAR),
  ZH24     VARCHAR2(2 CHAR),
  ACTLEC14 VARCHAR2(4 CHAR),
  ACTLEC24 VARCHAR2(4 CHAR),
  ACTGRP14 VARCHAR2(4 CHAR),
  IFAMILLE5 VARCHAR2(24 CHAR),
  IFAMILLEID5 VARCHAR2(24 CHAR),
  CLASSID5 NUMBER(2,0),
  CLASSNAME5 VARCHAR2(24 CHAR),
  ZHGLEC15 VARCHAR2(2 CHAR),
  ZHGLEC25 VARCHAR2(2 CHAR),
  ZHGLEC35 VARCHAR2(2 CHAR),
  ZHGLEC45 VARCHAR2(2 CHAR),
  ZHGLEC55 VARCHAR2(2 CHAR),
  ZHGLEC65 VARCHAR2(2 CHAR),
  ZHGLEC75 VARCHAR2(2 CHAR),
  ZHGLEC85 VARCHAR2(2 CHAR),
  NUMLEC15 VARCHAR2(8 CHAR),
  NUMLEC25 VARCHAR2(8 CHAR),
  ZH15     VARCHAR2(2 CHAR),
  ZH25     VARCHAR2(2 CHAR),
  ACTLEC15 VARCHAR2(4 CHAR),
  ACTLEC25 VARCHAR2(4 CHAR),
  ACTGRP15 VARCHAR2(4 CHAR),
  IFAMILLE6 VARCHAR2(24 CHAR),
  IFAMILLEID6 VARCHAR2(24 CHAR),
  CLASSID6 NUMBER(2,0),
  CLASSNAME6 VARCHAR2(24 CHAR),
  ZHGLEC16 VARCHAR2(2 CHAR),
  ZHGLEC26 VARCHAR2(2 CHAR),
  ZHGLEC36 VARCHAR2(2 CHAR),
  ZHGLEC46 VARCHAR2(2 CHAR),
  ZHGLEC56 VARCHAR2(2 CHAR),
  ZHGLEC66 VARCHAR2(2 CHAR),
  ZHGLEC76 VARCHAR2(2 CHAR),
  ZHGLEC86 VARCHAR2(2 CHAR),
  NUMLEC16 VARCHAR2(8 CHAR),
  NUMLEC26 VARCHAR2(8 CHAR),
  ZH16     VARCHAR2(2 CHAR),
  ZH26     VARCHAR2(2 CHAR),
  ACTLEC16 VARCHAR2(4 CHAR),
  ACTLEC26 VARCHAR2(4 CHAR),
  ACTGRP16 VARCHAR2(4 CHAR),
  IFAMILLE7 VARCHAR2(24 CHAR),
  IFAMILLEID7 VARCHAR2(24 CHAR),
  CLASSID7 NUMBER(2,0),
  CLASSNAME7 VARCHAR2(24 CHAR),
  ZHGLEC17 VARCHAR2(2 CHAR),
  ZHGLEC27 VARCHAR2(2 CHAR),
  ZHGLEC37 VARCHAR2(2 CHAR),
  ZHGLEC47 VARCHAR2(2 CHAR),
  ZHGLEC57 VARCHAR2(2 CHAR),
  ZHGLEC67 VARCHAR2(2 CHAR),
  ZHGLEC77 VARCHAR2(2 CHAR),
  ZHGLEC87 VARCHAR2(2 CHAR),
  NUMLEC17 VARCHAR2(8 CHAR),
  NUMLEC27 VARCHAR2(8 CHAR),
  ZH17     VARCHAR2(2 CHAR),
  ZH27     VARCHAR2(2 CHAR),
  ACTLEC17 VARCHAR2(4 CHAR),
  ACTLEC27 VARCHAR2(4 CHAR),
  ACTGRP17 VARCHAR2(4 CHAR),
  IFAMILLE8 VARCHAR2(24 CHAR),
  IFAMILLEID8 VARCHAR2(24 CHAR),
  CLASSID8 NUMBER(2,0),
  CLASSNAME8 VARCHAR2(24 CHAR),
  ZHGLEC18 VARCHAR2(2 CHAR),
  ZHGLEC28 VARCHAR2(2 CHAR),
  ZHGLEC38 VARCHAR2(2 CHAR),
  ZHGLEC48 VARCHAR2(2 CHAR),
  ZHGLEC58 VARCHAR2(2 CHAR),
  ZHGLEC68 VARCHAR2(2 CHAR),
  ZHGLEC78 VARCHAR2(2 CHAR),
  ZHGLEC88 VARCHAR2(2 CHAR),
  NUMLEC18 VARCHAR2(8 CHAR),
  NUMLEC28 VARCHAR2(8 CHAR),
  ZH18     VARCHAR2(2 CHAR),
  ZH28     VARCHAR2(2 CHAR),
  ACTLEC18 VARCHAR2(4 CHAR),
  ACTLEC28 VARCHAR2(4 CHAR),
  ACTGRP18 VARCHAR2(4 CHAR),
  IFAMILLE9 VARCHAR2(24 CHAR),
  IFAMILLEID9 VARCHAR2(24 CHAR),
  CLASSID9 NUMBER(2,0),
  CLASSNAME9 VARCHAR2(24 CHAR),
  ZHGLEC19 VARCHAR2(2 CHAR),
  ZHGLEC29 VARCHAR2(2 CHAR),
  ZHGLEC39 VARCHAR2(2 CHAR),
  ZHGLEC49 VARCHAR2(2 CHAR),
  ZHGLEC59 VARCHAR2(2 CHAR),
  ZHGLEC69 VARCHAR2(2 CHAR),
  ZHGLEC79 VARCHAR2(2 CHAR),
  ZHGLEC89 VARCHAR2(2 CHAR),
  NUMLEC19 VARCHAR2(8 CHAR),
  NUMLEC29 VARCHAR2(8 CHAR),
  ZH19     VARCHAR2(2 CHAR),
  ZH29     VARCHAR2(2 CHAR),
  ACTLEC19 VARCHAR2(4 CHAR),
  ACTLEC29 VARCHAR2(4 CHAR),
  ACTGRP19 VARCHAR2(4 CHAR),
  IFAMILLE10 VARCHAR2(24 CHAR),
  IFAMILLEID10 VARCHAR2(24 CHAR),
  CLASSID10 NUMBER(2,0),
  CLASSNAME10 VARCHAR2(24 CHAR),
  ZHGLEC110 VARCHAR2(2 CHAR),
  ZHGLEC210 VARCHAR2(2 CHAR),
  ZHGLEC310 VARCHAR2(2 CHAR),
  ZHGLEC410 VARCHAR2(2 CHAR),
  ZHGLEC510 VARCHAR2(2 CHAR),
  ZHGLEC610 VARCHAR2(2 CHAR),
  ZHGLEC710 VARCHAR2(2 CHAR),
  ZHGLEC810 VARCHAR2(2 CHAR),
  NUMLEC110 VARCHAR2(8 CHAR),
  NUMLEC210 VARCHAR2(8 CHAR),
  ZH110     VARCHAR2(2 CHAR),
  ZH210     VARCHAR2(2 CHAR),
  ACTLEC110 VARCHAR2(4 CHAR),
  ACTLEC210 VARCHAR2(4 CHAR),
  ACTGRP110 VARCHAR2(4 CHAR),
  IFAMILLE11 VARCHAR2(24 CHAR),
  IFAMILLEID11 VARCHAR2(24 CHAR),
  CLASSID11 NUMBER(2,0),
  CLASSNAME11 VARCHAR2(24 CHAR),
  ZHGLEC111 VARCHAR2(2 CHAR),
  ZHGLEC211 VARCHAR2(2 CHAR),
  ZHGLEC311 VARCHAR2(2 CHAR),
  ZHGLEC411 VARCHAR2(2 CHAR),
  ZHGLEC511 VARCHAR2(2 CHAR),
  ZHGLEC611 VARCHAR2(2 CHAR),
  ZHGLEC711 VARCHAR2(2 CHAR),
  ZHGLEC811 VARCHAR2(2 CHAR),
  NUMLEC111 VARCHAR2(8 CHAR),
  NUMLEC211 VARCHAR2(8 CHAR),
  ZH111     VARCHAR2(2 CHAR),
  ZH211     VARCHAR2(2 CHAR),
  ACTLEC111 VARCHAR2(4 CHAR),
  ACTLEC211 VARCHAR2(4 CHAR),
  ACTGRP111 VARCHAR2(4 CHAR),
  IFAMILLE12 VARCHAR2(24 CHAR),
  IFAMILLEID12 VARCHAR2(24 CHAR),
  CLASSID12 NUMBER(2,0),
  CLASSNAME12 VARCHAR2(24 CHAR),
  ZHGLEC112 VARCHAR2(2 CHAR),
  ZHGLEC212 VARCHAR2(2 CHAR),
  ZHGLEC312 VARCHAR2(2 CHAR),
  ZHGLEC412 VARCHAR2(2 CHAR),
  ZHGLEC512 VARCHAR2(2 CHAR),
  ZHGLEC612 VARCHAR2(2 CHAR),
  ZHGLEC712 VARCHAR2(2 CHAR),
  ZHGLEC812 VARCHAR2(2 CHAR),
  NUMLEC112 VARCHAR2(8 CHAR),
  NUMLEC212 VARCHAR2(8 CHAR),
  ZH112     VARCHAR2(2 CHAR),
  ZH212     VARCHAR2(2 CHAR),
  ACTLEC112 VARCHAR2(4 CHAR),
  ACTLEC212 VARCHAR2(4 CHAR),
  ACTGRP112 VARCHAR2(4 CHAR),
  IFAMILLE13 VARCHAR2(24 CHAR),
  IFAMILLEID13 VARCHAR2(24 CHAR),
  CLASSID13 NUMBER(2,0),
  CLASSNAME13 VARCHAR2(24 CHAR),
  ZHGLEC113 VARCHAR2(2 CHAR),
  ZHGLEC213 VARCHAR2(2 CHAR),
  ZHGLEC313 VARCHAR2(2 CHAR),
  ZHGLEC413 VARCHAR2(2 CHAR),
  ZHGLEC513 VARCHAR2(2 CHAR),
  ZHGLEC613 VARCHAR2(2 CHAR),
  ZHGLEC713 VARCHAR2(2 CHAR),
  ZHGLEC813 VARCHAR2(2 CHAR),
  NUMLEC113 VARCHAR2(8 CHAR),
  NUMLEC213 VARCHAR2(8 CHAR),
  ZH113     VARCHAR2(2 CHAR),
  ZH213     VARCHAR2(2 CHAR),
  ACTLEC113 VARCHAR2(4 CHAR),
  ACTLEC213 VARCHAR2(4 CHAR),
  ACTGRP113 VARCHAR2(4 CHAR),
  IFAMILLE14 VARCHAR2(24 CHAR),
  IFAMILLEID14 VARCHAR2(24 CHAR),
  CLASSID14 NUMBER(2,0),
  CLASSNAME14 VARCHAR2(24 CHAR),
  ZHGLEC114 VARCHAR2(2 CHAR),
  ZHGLEC214 VARCHAR2(2 CHAR),
  ZHGLEC314 VARCHAR2(2 CHAR),
  ZHGLEC414 VARCHAR2(2 CHAR),
  ZHGLEC514 VARCHAR2(2 CHAR),
  ZHGLEC614 VARCHAR2(2 CHAR),
  ZHGLEC714 VARCHAR2(2 CHAR),
  ZHGLEC814 VARCHAR2(2 CHAR),
  NUMLEC114 VARCHAR2(8 CHAR),
  NUMLEC214 VARCHAR2(8 CHAR),
  ZH114     VARCHAR2(2 CHAR),
  ZH214     VARCHAR2(2 CHAR),
  ACTLEC114 VARCHAR2(4 CHAR),
  ACTLEC214 VARCHAR2(4 CHAR),
  ACTGRP114 VARCHAR2(4 CHAR),
  IFAMILLE15 VARCHAR2(24 CHAR),
  IFAMILLEID15 VARCHAR2(24 CHAR),
  CLASSID15 NUMBER(2,0),
  CLASSNAME15 VARCHAR2(24 CHAR),
  ZHGLEC115 VARCHAR2(2 CHAR),
  ZHGLEC215 VARCHAR2(2 CHAR),
  ZHGLEC315 VARCHAR2(2 CHAR),
  ZHGLEC415 VARCHAR2(2 CHAR),
  ZHGLEC515 VARCHAR2(2 CHAR),
  ZHGLEC615 VARCHAR2(2 CHAR),
  ZHGLEC715 VARCHAR2(2 CHAR),
  ZHGLEC815 VARCHAR2(2 CHAR),
  NUMLEC115 VARCHAR2(8 CHAR),
  NUMLEC215 VARCHAR2(8 CHAR),
  ZH115     VARCHAR2(2 CHAR),
  ZH215     VARCHAR2(2 CHAR),
  ACTLEC115 VARCHAR2(4 CHAR),
  ACTLEC215 VARCHAR2(4 CHAR),
  ACTGRP115 VARCHAR2(4 CHAR),
  IFAMILLE16 VARCHAR2(24 CHAR),
  IFAMILLEID16 VARCHAR2(24 CHAR),
  CLASSID16 NUMBER(2,0),
  CLASSNAME16 VARCHAR2(24 CHAR),
  ZHGLEC116 VARCHAR2(2 CHAR),
  ZHGLEC216 VARCHAR2(2 CHAR),
  ZHGLEC316 VARCHAR2(2 CHAR),
  ZHGLEC416 VARCHAR2(2 CHAR),
  ZHGLEC516 VARCHAR2(2 CHAR),
  ZHGLEC616 VARCHAR2(2 CHAR),
  ZHGLEC716 VARCHAR2(2 CHAR),
  ZHGLEC816 VARCHAR2(2 CHAR),
  NUMLEC116 VARCHAR2(8 CHAR),
  NUMLEC216 VARCHAR2(8 CHAR),
  ZH116     VARCHAR2(2 CHAR),
  ZH216     VARCHAR2(2 CHAR),
  ACTLEC116 VARCHAR2(4 CHAR),
  ACTLEC216 VARCHAR2(4 CHAR),
  ACTGRP116 VARCHAR2(4 CHAR),
  DEFAUT VARCHAR2(1 CHAR),
  NSMI INTEGER,
  DATECREATION DATE,
  DATEMAJ DATE,
  DATESYNCHRO DATE,
  CONSTRAINT PK_PROFILESMVID PRIMARY KEY (PROFILESMVID)
  );
-- TABLE ZCL01_FAMILLE
CREATE TABLE ZCL01_FAMILLE (
  FAMID NUMBER(3,0) NOT NULL,
  LIBELLE VARCHAR2(24 CHAR),
  NSMI INTEGER
);
-- TABLE ZCL01_CLASS_ACC
CREATE TABLE ZCL01_CLASS_ACC (
  CLASS_ACCID NUMBER(3,0) NOT NULL,
  LIBELLE VARCHAR2(24 CHAR),
  NSMI INTEGER
);
-- TABLE ZCL01_ZH
CREATE TABLE ZCL01_ZH (
  ZHID NUMBER(3,0) NOT NULL,
  LIBELLE VARCHAR2(24 CHAR),
  NSMI INTEGER
);
-- TABLE ZCL01_SERVICE
CREATE TABLE ZCL01_SERVICE (
  SERVICEID NUMBER(10,0) NOT NULL,
  LIBELLE VARCHAR2(24 CHAR),
  NSMI INTEGER
);
-- TABLE ZCL01_ACTION
CREATE TABLE ZCL01_ACTION (
  ACTIONID NUMBER(5,0) NOT NULL,
  LIBELLE VARCHAR2(30 CHAR),
  NSMI INTEGER
);
-- TABLE ZCL01_LECTEURS
CREATE TABLE ZCL01_LECTEURS (
  LE_CIRCUI VARCHAR2(8 CHAR) NOT NULL,
  LE_DESCRI VARCHAR2(50 CHAR),
  NSMI INTEGER
);
-- TABLE ZCL01_VISITE
CREATE TABLE ZCL01_VISITE(
  VISITEID         VARCHAR2(15 CHAR),
  INTERLOCUTEURID  VARCHAR2(15 CHAR),
  BGA_ETAT         VARCHAR2(1 CHAR),
  BGA_DATE         DATE,
  BGA_NOM          VARCHAR2(40 CHAR),
  BS_ETAT          VARCHAR2(1 CHAR),
  BS_DATE          DATE,
  BS_NOM           VARCHAR2(40 CHAR),
  SDT_ETAT         VARCHAR2(1 CHAR),
  SDT_DATE         DATE,
  SDT_NOM          VARCHAR2(40 CHAR),
  FREQUENCE        VARCHAR2(15 CHAR),
  BADGE            VARCHAR2(200 CHAR),
  CLASSIFICATION   VARCHAR2(4 CHAR),
  ACCES            VARCHAR2(4 CHAR),
  ST_TYPE          VARCHAR2(6 CHAR),
  ST_NUMERO        VARCHAR2(20 CHAR),
  ST_FORMALITE     VARCHAR2(50 CHAR),
  DATEMAJ          DATE,
  DATECREATION     DATE,
  DATESYNCHRO      DATE,
  ZONE             VARCHAR2(60 CHAR));

-- TABLE ZCL01_VISITE_L
CREATE TABLE ZCL01_VISITE_L (
  VISITEID_ANCIEN  VARCHAR2(14 CHAR),
  VISITEID_NOUVEAU VARCHAR2(14 CHAR));

-- TABLE ZCL01_BA
CREATE TABLE ZCL01_BA (
  NUMBDG  VARCHAR2(200 CHAR)  NOT NULL,
  CODSIT  VARCHAR2(3 CHAR),
  CODIND  VARCHAR2(20 CHAR),
  TYPSAI  VARCHAR2(1 CHAR));

-- TABLE ZCL01_US
CREATE TABLE ZCL01_US (
  NUMBDG     VARCHAR2(14 CHAR)  NOT NULL,
  NOM        VARCHAR2(24 CHAR),
  PRENOM     VARCHAR2(24 CHAR),
  TYPEV      VARCHAR2(1 CHAR),
  MATRIC     VARCHAR2(15 CHAR),
  SERVIC     VARCHAR2(24 CHAR),
  NOMSTE     VARCHAR2(15 CHAR),
  CH_EXPL01  VARCHAR2(26 CHAR),
  CH_EXPL02  VARCHAR2(26 CHAR),
  CH_EXPL03  VARCHAR2(26 CHAR),
  CH_EXPL04  VARCHAR2(26 CHAR),
  CH_EXPL05  VARCHAR2(26 CHAR),
  CH_EXPL06  VARCHAR2(26 CHAR),
  CH_EXPL07  VARCHAR2(26 CHAR),
  CH_EXPL08  VARCHAR2(26 CHAR),
  CH_EXPL09  VARCHAR2(26 CHAR),
  CH_EXPL10  VARCHAR2(26 CHAR),
  CH_EXPL11  VARCHAR2(26 CHAR),
  CH_EXPL12  VARCHAR2(26 CHAR),
  CH_EXPL13  VARCHAR2(26 CHAR),
  CH_EXPL14  VARCHAR2(26 CHAR),
  CH_EXPL15  VARCHAR2(26 CHAR),
  CH_EXPL16  VARCHAR2(26 CHAR),
  CH_EXPL17  VARCHAR2(26 CHAR),
  CH_EXPL18  VARCHAR2(26 CHAR),
  CH_EXPL19  VARCHAR2(26 CHAR),
  CH_EXPL20  VARCHAR2(26 CHAR),
  CONSTRAINT PK_NUMBDG PRIMARY KEY (NUMBDG) );

-- TABLE ZCL01_EMISSION
CREATE TABLE ZCL01_EMISSION (
  EMI_COD    VARCHAR2(14 CHAR) NOT NULL,
  EMI_DEST1  VARCHAR2(100 CHAR),
  EMI_DEST2  VARCHAR2(100 CHAR),
  EMI_DEST3  VARCHAR2(100 CHAR),
  EMI_DEST4  VARCHAR2(100 CHAR),
  EMI_DEST5  VARCHAR2(100 CHAR),
  EMI_OBJET  VARCHAR2(100 CHAR),
  EMI_TEXTE  VARCHAR2(500 CHAR));

-- TABLE ZCL01_VISITEZO
CREATE TABLE ZCL01_VISITEZO (
   VISITEID VARCHAR2(14 CHAR),
   ZONEID   VARCHAR2(14 CHAR)
);

-- TABLE ZCL01_VISITERE
CREATE TABLE ZCL01_VISITERE (
   EXTERNALID VARCHAR2(14 CHAR),
   RESIDANTID VARCHAR2(14 CHAR)
);

CREATE TABLE ZCL05_GRP
(
  LIBELLE VARCHAR2(50 CHAR),
  DATECREATION DATE
);

CREATE TABLE ZCL05_BADGE
(
  NUMBADGE  VARCHAR2(50 CHAR),
  CODEBADGE VARCHAR2(50 CHAR),
  DATECREATION DATE
);

CREATE TABLE ZCL05_ASCENSEUR
(
  LIBELLE VARCHAR2(50 CHAR),
  DATECREATION DATE
);

--
----------------------------------------------------------------------------------
--       SERVEUR NATIONAL                                                       --
----------------------------------------------------------------------------------
-- TABLE SN_SITES
CREATE TABLE SN_SITES (
  SITEID               VARCHAR2(14 CHAR)  NOT NULL,
  ADRESSEIP            VARCHAR2(14 CHAR)  NOT NULL,
  NOM                  VARCHAR2(35 CHAR),
  LOGIN                VARCHAR2(35 CHAR)  NOT NULL,
  PASSWORD             VARCHAR2(35 CHAR)  NOT NULL,
  NUMERO               VARCHAR2(35 CHAR),
  DATEDERNIERESYNCHRO  DATE          NOT NULL,
  SERVERNAME_BL VARCHAR2(50 CHAR),
  USERNAME_BL VARCHAR2(50 CHAR),
  PASSWORD_BL VARCHAR2(50 CHAR),
  SERVERNAME_BTL VARCHAR2(50 CHAR),
  USERNAME_BTL VARCHAR2(50 CHAR),
  PASSWORD_BTL VARCHAR2(50 CHAR),
  ETAT_BATCH VARCHAR2(14 CHAR)
);

-- TABLE SN_SITE_ACTION
CREATE TABLE SN_SITE_ACTION (
  SITEID   VARCHAR2(14 CHAR)  NOT NULL,
  ACTION   VARCHAR2(50 CHAR)  NOT NULL,
  DATEMAJ  DATE,
  NOM_TABLE  VARCHAR2(50 CHAR),
  ID           VARCHAR2(50 CHAR));

-- TABLE SN_TRACES
CREATE TABLE SN_TRACES (
  TRACEID             VARCHAR2(14 CHAR)  NOT NULL,
  SITEID              VARCHAR2(14 CHAR)  NOT NULL,
  DATEECHECCONNEXION  DATE          NOT NULL,
  ADRESSE_IP          VARCHAR2(50 CHAR),
  NOM_MACHINE         VARCHAR2(50 CHAR),
  LOGIN               VARCHAR2(50 CHAR),
  PASSWORD            VARCHAR2(50 CHAR),
  NUMERO              VARCHAR2(50 CHAR),
  TYPE_TRACE          VARCHAR2(50 CHAR),
  CODE                NUMBER);

-- TABLE SN_TRANSFERT_IMMEDIAT
CREATE TABLE SN_TRANSFERT_IMMEDIAT (
  SITEID  VARCHAR2(14 CHAR),
  ACTION  VARCHAR2(14 CHAR),
  HMAJ    DATE,
  NOM_TABLE  VARCHAR2(50 CHAR),
  ID           VARCHAR2(50 CHAR));

-- TABLE SN_TYPE_ACTION
CREATE TABLE SN_TYPE_ACTION (
  ACTIONID  VARCHAR2(14 CHAR)  NOT NULL,
  ACTION    VARCHAR2(50 CHAR));

-- TABLE SN_TYPE_TRACE
CREATE TABLE SN_TYPE_TRACE (
  CODE     NUMBER,
  LIBELLE  VARCHAR2(50 CHAR));

-- TABLE SN_DOUBLONS
CREATE TABLE SN_DOUBLONS (
  DOUBLONID   VARCHAR2(14 CHAR),
  REMPLACEID  VARCHAR2(14 CHAR),
  NUMTABLE NUMBER);


----------------------Table des badges--------------------

CREATE TABLE BADGEIMPRIME
(
   NOUVEAUNUMERO    VARCHAR2(14 CHAR),
   STATUT        VARCHAR2(20 CHAR),
   DATEMAJ        DATE
);

-----------------------------------------------------------

----------------------Control d'acces AEOS--------------------

CREATE TABLE ZCL07_BADGETYPE
(
 ZCL07_BADGETYPEID VARCHAR2(14 CHAR),
 NAME VARCHAR2(25 CHAR),
 CLASS INTEGER,
 SERIE VARCHAR2(10 CHAR),
 CUSTOMERCODE VARCHAR2(10 CHAR),
 DEBUT INTEGER,
 FIN INTEGER
);


-----------------------------------------------------------

----------------------E/S réelle chez le résidant--------------------
CREATE TABLE VISITES_ES
(
VISITEID    VARCHAR2(14 CHAR)    NOT NULL,
DATEHEUREENTREE    DATE,
DATEHEURESORTIE    DATE,
DATEHEUREENTREEPARKING  DATE,
DATEHEURESORTIEPARKING  DATE,
STATUTPARKING    VARCHAR2(20 CHAR),
PARKING    VARCHAR2(35 CHAR)
);

CREATE TABLE TQ_COMMUNE
(
VALIDATION_RESID             VARCHAR2(10 CHAR),
NOM_IMG_DEF                VARCHAR2(100 CHAR),
HAUTEUR                    NUMBER,
LARGEUR                    NUMBER,
PERMIS_TRAVAIL                NUMBER,
PARAM_ALTAIR                NUMBER,
TITRE                    VARCHAR2(50 CHAR),
BDG_FREE1                  VARCHAR2(20 CHAR),
BDG_FREE2                  VARCHAR2(20 CHAR),
BDG_FREE3                  VARCHAR2(20 CHAR),
BDG_FREE4                  VARCHAR2(20 CHAR),
BDG_FREE5                  VARCHAR2(20 CHAR),
BDG_FREE6                  VARCHAR2(20 CHAR),
BDG_FREE7                  VARCHAR2(20 CHAR),
BDG_FREE8                  VARCHAR2(20 CHAR),
BDG_FREE9                  VARCHAR2(20 CHAR),
PLANS_FREE1                  VARCHAR2(20 CHAR),
PLANS_FREE2                  VARCHAR2(20 CHAR),
PLANS_FREE3                  VARCHAR2(20 CHAR),
PLANS_FREE4                  VARCHAR2(20 CHAR),
PLANS_FREE5                  VARCHAR2(20 CHAR),
PLANS_FREE6                  VARCHAR2(20 CHAR),
PLANS_FREE7                  VARCHAR2(20 CHAR),
PLANS_FREE8                  VARCHAR2(20 CHAR),
PLANS_FREE9                  VARCHAR2(20 CHAR),
BDG_RESID_FREE1              VARCHAR2(20 CHAR),
BDG_RESID_FREE2              VARCHAR2(20 CHAR),
BDG_RESID_FREE3              VARCHAR2(20 CHAR),
BDG_RESID_FREE4              VARCHAR2(20 CHAR),
BDG_RESID_FREE5              VARCHAR2(20 CHAR),
BDG_RESID_FREE6              VARCHAR2(20 CHAR),
BDG_RESID_FREE7              VARCHAR2(20 CHAR),
BDG_RESID_FREE8              VARCHAR2(20 CHAR),
BDG_RESID_FREE9              VARCHAR2(20 CHAR),
IMPORTATION                 INTEGER,
CRYPTAGE                VARCHAR2(1 CHAR),
MODIF_VISITEUR_PREENREG          INT,
MODIF_VISITEUR_ENCOURS          INT,
MODIF_VISITEUR_TERMINE          INT,
ANNUAIRE                 INT,
ANNUAIRE_URL                 VARCHAR2(250 CHAR),
UTILISATION_OBS_VISITEUR         INT,
MODIF_OBS_VISITEUR             INT,
CTLVISI                    INT,
CTLVISI_NB                INT,
CTLVISI_QUOI                INT,
CTLVISI_XJ                INT,
CTLVISI_DEPUIS                DATE,
CTLVISI_MSG                VARCHAR2(200 CHAR),
CTLVISI_BLC                 INT,
CRTL_LIMITE_DATE_FIN             INT,
TIMER_SORTIE_VISITEUR             INT,
EXPIRATIONPWD                NUMBER DEFAULT 0,
JOURSPWD                NUMBER,
CONNEXIONPWD                NUMBER DEFAULT 0,
DECOMPTEPWD                NUMBER DEFAULT 0,
DECOMPTEJOURSPWD            NUMBER,
PRIORITE_INTERDIT            NUMBER,
PARAM_DIVERS                            VARCHAR2(4000 CHAR),
PERIPH_ACQUI_LISTE            NUMBER,
PERIPH_ACQUI_MAJ_INFOS            NUMBER,
TRANCHE_HORAIRE_STATS            VARCHAR2(14 CHAR),
VISITE_SITERESID            INT DEFAULT 0,
URL_TAXI                VARCHAR2(200 CHAR)
);


----------------------------------------------------------
CREATE TABLE TQ_POSTE
(
NOM_POSTE        VARCHAR2(50 CHAR),
CLE_CONNEXION        VARCHAR2(50 CHAR),
NB_CAR_RECHERCHE    NUMBER,
DELAI_RECHERCHE        NUMBER,
SITEID            VARCHAR2(14 CHAR),
SITE            VARCHAR2(50 CHAR),
GUICHETID        VARCHAR2(14 CHAR),
GUICHET         VARCHAR2(50 CHAR),
BOITE            VARCHAR2(50 CHAR),
RESID_PAR_DEFAUT    VARCHAR2(20 CHAR),
IMPR_BDG        VARCHAR2(100 CHAR),
IMPR_LISTING        VARCHAR2(100 CHAR),
IMPR_PLAN        VARCHAR2(100 CHAR),
PHOTO_SRC_RESID        VARCHAR2(100 CHAR),
PHOTO_DEST_RESID    VARCHAR2(100 CHAR),
PHOTO_SRC_VISIT        VARCHAR2(100 CHAR),
PHOTO_DEST_VISIT    VARCHAR2(100 CHAR),
PHOTO_SRC_PLAN        VARCHAR2(100 CHAR),
PHOTO_DEST_PLAN        VARCHAR2(100 CHAR),
LOGO1            VARCHAR2(100 CHAR),
LOGO2            VARCHAR2(100 CHAR),
LOGO3            VARCHAR2(100 CHAR),
LOGO4            VARCHAR2(100 CHAR),
LOGO5            VARCHAR2(100 CHAR),
FICHIER_IMPORTATION    VARCHAR2(10 CHAR),
SEPARATEUR        VARCHAR2(5 CHAR),
CHAMP1            VARCHAR2(20 CHAR),
CHAMP2            VARCHAR2(20 CHAR),
CHAMP3            VARCHAR2(20 CHAR),
CHAMP4            VARCHAR2(20 CHAR),
CHAMP5            VARCHAR2(20 CHAR),
CHAMP6            VARCHAR2(20 CHAR),
CHAMP7            VARCHAR2(20 CHAR),
CHAMP8            VARCHAR2(20 CHAR),
CHAMP9            VARCHAR2(20 CHAR),
POS_CHAMP1        NUMBER,
POS_CHAMP2        NUMBER,
POS_CHAMP3        NUMBER,
POS_CHAMP4        NUMBER,
POS_CHAMP5        NUMBER,
POS_CHAMP6        NUMBER,
POS_CHAMP7        NUMBER,
POS_CHAMP8        NUMBER,
POS_CHAMP9        NUMBER,
CRITERE_IMPORT_CHAMP    VARCHAR2(20 CHAR),
MAJ_FICHIER        VARCHAR2(20 CHAR),
MAJ_SITE        VARCHAR2(50 CHAR),
MAJ_SOCIETE        VARCHAR2(50 CHAR),
ESVEH_VIS_NOM        NUMBER,
ESVEH_VIS_RESID        NUMBER,
ESVEH_VIS_SOCVIS    NUMBER,
ESVEH_VIS_IMMATR    NUMBER,
ESVEH_VIS_BDG        NUMBER,
ESVEH_RESID_NOM        NUMBER,
ESVEH_RESID_IMMATR    NUMBER,
ESVEH_RESID_BDG        NUMBER,
SORTIE_OBL_ACCUEIL    NUMBER,
TYPE_CONTROL_ACCES        VARCHAR2(30 CHAR),
BLOCAGE_HDEBUT_VISITE        NUMBER,
RESID_CTRL_HORAIRE_MSG        NUMBER,
RESID_CTRL_HORAIRE_VERROU    NUMBER,
RESID_HORAIRE_VERROU        NUMBER,
FERMETURE_FENETRE_APRES_BDG    NUMBER,
HISTORIQUE            NUMBER,
MODIF_CHAMPS_OBS        NUMBER,
MSG_ALERTEXJOUR_AVANTJ        NUMBER,
MSG_CONFIR_ES            NUMBER,
MSG_INFOR_FORMATIONS_PERIMEES    NUMBER,
AFFICHAGE_DATE_SI_STATUT_LONG    NUMBER,
BLOCAGE_SI_FORM_PERIMEE        NUMBER,
SELECT_MODEL_BDG        NUMBER,
SELECT_IMPR_BDG            NUMBER,
ELARGIR_PAR_DEFAUT        NUMBER,
TRACAGE                NUMBER,
FICHIER_TRACE            VARCHAR2(50 CHAR),
ENVOI_BDG_MANUEL          NUMBER,
ENVOI_BDG_AUTO          NUMBER,
GENERATION_BDG          NUMBER,
DEBUT_CODE              VARCHAR2(20 CHAR),
MILIEU_CHAMP              VARCHAR2(20 CHAR),
MILIEU_FORMAT              VARCHAR2(20 CHAR),
FIN_CODE               VARCHAR2(20 CHAR),
GENERATION_BDG_MAX     INT,
MODE_ES_VIS_RES          VARCHAR2(40 CHAR),
VISITEUR_CTRL_PLUS        VARCHAR2(4 CHAR),
MATRA                VARCHAR2(30 CHAR),
ENVOI_MAIL             INTEGER,
MODIF_VISITEUR            INTEGER,
CHAMPS_VISITEUR         VARCHAR2(4000 CHAR),
REPSCAN             VARCHAR2(100 CHAR),
CHEMIN_EXPORT             VARCHAR2(300 CHAR),
CREATION_VISITE_PARKING     INTEGER,
CTRL_RES_PARKING         INTEGER,
MOUVEMENT_PARKING         INTEGER,
DUREE_CONSERVATION         INTEGER,
HEURE_EPURATION         VARCHAR2(10 CHAR),
ENVOI_MSG_PARKING         INTEGER,
GENERATION_BDGR            NUMBER,
DEBUT_CODER            VARCHAR2(20 CHAR),
MILIEU_FORMATR            VARCHAR2(20 CHAR),
FIN_CODER            VARCHAR2(20 CHAR),
GENERATION_BDGR_MAX INT,
GENERATION_BDGVEH        NUMBER,
DEBUT_CODEVEH            VARCHAR2(20 CHAR),
MILIEU_FORMATVEH        VARCHAR2(20 CHAR),
FIN_CODEVEH            VARCHAR2(20 CHAR),
GENERATION_BDGVEH_MAX INT,
ESVEH_NUM_BADGE            NUMBER,
ESVEH_VIS_NOM_MODIF        NUMBER,
ESVEH_VIS_RESID_MODIF        NUMBER,
ESVEH_VIS_SOCVIS_MODIF        NUMBER,
ESVEH_VIS_IMMATR_MODIF        NUMBER,
ESVEH_VIS_BDG_MODIF        NUMBER,
ESVEH_MATRICULE            NUMBER,
ESVEH_VIS_MATR            NUMBER,
ESVEH_VIS_MATR_MODIF        NUMBER,
ESVEH_VIS_OBS            NUMBER,
ESVEH_VIS_OBS_MODIF        NUMBER,
MODE_ES_RSDT             NUMBER DEFAULT 0,
GENERATION_BDGEXT        INTEGER,
DEBUT_CODEEXT            VARCHAR2(20 CHAR),
MILIEU_FORMATEXT        VARCHAR2(20 CHAR),
FIN_CODEEXT            VARCHAR2(20 CHAR),
COCHER_PHS            INTEGER DEFAULT 0,
CTRL_ACTIF          INTEGER DEFAULT 0
);

CREATE TABLE ZCL00 (NUMEROCLIENT VARCHAR2(50 CHAR));



CREATE TABLE TYPEUSER
(
USERID        INT,
LIBELLE        VARCHAR2(50 CHAR),
DATECREATION    DATE NOT NULL,
DATEMAJ        DATE NOT NULL,
DATESYNCHRO    DATE
);


CREATE TABLE DIRECTIONS
(
DIRECTIONID    VARCHAR2(14 CHAR) NOT NULL,
SOCIETEID    VARCHAR2(14 CHAR),
LIBELLE        VARCHAR2(35 CHAR),
DATECREATION    DATE NOT NULL,
DATEMAJ        DATE NOT NULL,
DATESYNCHRO    DATE,
CONSTRAINT PK_DIRECTIONID PRIMARY KEY (DIRECTIONID)
);

CREATE TABLE DROITS (
  RESIDANTID VARCHAR2(14 CHAR) NOT NULL,
  DELEGATIONID VARCHAR2(14 CHAR),
  CREATION VARCHAR2(1 CHAR),
  MODIFICATION VARCHAR2(1 CHAR),
  SUPPRESSION VARCHAR2(1 CHAR),
  APPLI VARCHAR2(80 CHAR),
  DIVERSACCES INT,
  DATECREATION DATE NULL,
  DATEMAJ DATE NULL,
  DATESYNCHRO     DATE,
PRIMARY KEY (RESIDANTID,DELEGATIONID));

CREATE TABLE PROFILS_USERS
(
TYPEUSER    VARCHAR2(24 CHAR),
SITE        VARCHAR2(35 CHAR),
SITEID        VARCHAR2(14 CHAR),
GVACCESS    INT,
TYPEUSERID    INT
);

CREATE TABLE ROLE_AUTRES (
USERID INT,
SITE INT,
SOC_RES INT,
DIRECTIONS INT,
PAYS INT,
UTILISATEURS INT,
TYPEUSER    INT,
PROFILUSER INT,
MODIFAFF  INT,
VILLES    INT,
DATECREATION    DATE,
DATEMAJ DATE,
GRPSITE INT DEFAULT 0
);


CREATE TABLE ROLE_PARAMETRAGES (
USERID INT,
PARAMETRAGES_GENERAUX INT,
PERIPHERIQUES INT,
PRESENTATION INT,
OPTIONS INT,
BADGES INT,
PARAM_ETATS    INT,
CTRL_ACCES INT,
ES_VEHICULE INT,
PARAMETRAGES_CHAMPS INT,
AUTORISATION_ACCES INT,
REGLES INT,
ENVOI_MAIL INTEGER,
PROFIL_ACCUEIL INTEGER,
CHAMPS_VISITEUR VARCHAR2(4000 CHAR),
SECOND_ACCUEIL    INTEGER,
DATECREATION    DATE,
DATEMAJ DATE
);


CREATE TABLE ROLE_RESTES (
USERID INT,
EXPORT_TABLES INT,
STAT INT,
ETATS INT,
NETTOYAGES INT,
DATECREATION    DATE,
DATEMAJ DATE
);


CREATE TABLE MAIL
(
  MAILID    VARCHAR2(14 CHAR),
  APP         VARCHAR2(10 CHAR),
  SITEID    VARCHAR2(14 CHAR),
  SITE        VARCHAR2(35 CHAR),
  USERID     VARCHAR2(50 CHAR),
  SMTP         VARCHAR2(50 CHAR),
  FROMADDRESS     VARCHAR2(50 CHAR),
  TOADDRESS     VARCHAR2(4000 CHAR),
  CARBONCOPY     VARCHAR2(1000 CHAR),
  SUJET     VARCHAR2(200 CHAR),
  BODY         VARCHAR2(4000 CHAR),
  STATUT     INTEGER,
  ETAT         VARCHAR2(4000 CHAR),
  DATECREATION     DATE,
  DATEMAJ     DATE,
  QUIID        VARCHAR2(50 CHAR),
  QUILIB    VARCHAR2(50 CHAR),
  TABLEID    VARCHAR2(14 CHAR),
  PJ_NAME    VARCHAR2(500 CHAR),
  PJ_FILE    BLOB,
  ICALENDAR VARCHAR2(4000 CHAR),
CONSTRAINT PK_MAILID PRIMARY KEY (MAILID)
);


CREATE TABLE ETATAPP (
   ETATID        VARCHAR2(50 CHAR),
   ETATNOM      VARCHAR2(50 CHAR),
   VISIBLE      INTEGER,
   REQUETE      VARCHAR2(50 CHAR),
   FILTRE       VARCHAR2(250 CHAR),
   APP        VARCHAR2(20 CHAR),
   DATECREATION DATE,
   DATEMAJ      DATE
);

CREATE TABLE PHOTOS (ID VARCHAR2(14 CHAR),PHOTO BLOB);

CREATE TABLE ZCL08_REPAS (
REPASID        VARCHAR2(14 CHAR),
REPAS        VARCHAR2(10 CHAR),
NUMEROBADGE    VARCHAR2(20 CHAR) NOT NULL,
DATEPASSAGE    VARCHAR2(20 CHAR),
DATEPASSAGE2    VARCHAR2(20 CHAR) NOT NULL,
VISITEID    VARCHAR2(14 CHAR),
DATEREELLE     DATE
);

CREATE TABLE PARAMETRAGE (
    LIBELLE VARCHAR2(50 CHAR),
    VALEUR VARCHAR2(4000 CHAR),
    SITEID VARCHAR2(14 CHAR),
    DATECREATION DATE NOT NULL,
    DATEMAJ DATE NOT NULL,
    DATESYNCHRO DATE,
    CONSTRAINT PARAMETRAGE_PK PRIMARY KEY (LIBELLE,SITEID)
);
COMMIT;

CREATE TABLE STATUTCOLIS (
    ID_STATUTCOLIS INTEGER PRIMARY KEY,
    LIBELLE VARCHAR2(35 CHAR),
    COLOR INTEGER,
    DATECREATION DATE NOT NULL,
    DATEMAJ DATE NOT NULL,
    DATESYNCHRO DATE
);
COMMIT;

CREATE TABLE EVENEMENTCOLIS (
    ID_EVENEMENTCOLIS INTEGER PRIMARY KEY,
    COLISID VARCHAR2(14 CHAR),
    LIBELLE VARCHAR2(200 CHAR),
    DATEHEURE DATE,
    USERID VARCHAR2(14 CHAR),
    RESIDANTID VARCHAR2(14 CHAR),
    DATECREATION DATE NOT NULL,
    DATEMAJ DATE NOT NULL,
    DATESYNCHRO DATE
);
COMMIT;

CREATE TABLE XANNEXE(
    XANNEXEID VARCHAR2(14 CHAR) PRIMARY KEY,
    XANNEXE_TYPEID INT DEFAULT ('0'),
    ORIGINEID VARCHAR2(14 CHAR),
    ORIGINE VARCHAR2(50 CHAR),
    OFICHIERID INT,
    STATUTID INT DEFAULT ((0)),
    DATEFIN DATE,
    FREE01 VARCHAR2(50 CHAR),
    FREE02 VARCHAR2(50 CHAR),
    FREE03 VARCHAR2(50 CHAR),
    FREE04 VARCHAR2(50 CHAR),
    FREE05 VARCHAR2(50 CHAR),
    FREE06 VARCHAR2(50 CHAR),
    FREE07 VARCHAR2(50 CHAR),
    FREE08 VARCHAR2(50 CHAR),
    FREE09 VARCHAR2(50 CHAR),
    FREEDATE01 DATE,
    FREEDATE02 DATE,
    INFORMATION_TYPEID INT,
    REFID VARCHAR2(14 CHAR),
    ETAT NUMBER DEFAULT ((1)),
    DATERETOUR DATE,
    DATECREATION DATE NOT NULL,
    DATEMAJ DATE NOT NULL,
    DATESYNCHRO DATE,
	SITEID VARCHAR2(14) NULL
);
COMMIT;

----------------------------------------------------------------------------------
-- TABLE TEMPORAIRE
CREATE GLOBAL TEMPORARY TABLE TEMPO_GS
(    FREE1    VARCHAR2(100 CHAR),
    FREE2    VARCHAR2(100 CHAR),
    FREE3    VARCHAR2(100 CHAR),
    FREE4    VARCHAR2(100 CHAR),
    FREE5    VARCHAR2(100 CHAR),
    FREEINT1    INTEGER,
    FREEINT2    INTEGER,
    FREEDATE1    DATE,
    FREEDATE2    DATE,
    FREEDATE3    DATE,
    FREEDATE4    DATE
) ON COMMIT PRESERVE ROWS ;

-- Création d'une table temporaire
CREATE GLOBAL TEMPORARY TABLE TEMPO_TQ
(    FREE1    VARCHAR2(100 CHAR),
    FREE2    VARCHAR2(100 CHAR),
    FREE3    VARCHAR2(100 CHAR),
    FREE4    VARCHAR2(100 CHAR),
    FREE5    VARCHAR2(100 CHAR),
    FREE6    VARCHAR2(100 CHAR),
    FREE7     VARCHAR2(100 CHAR),
    FREE8     VARCHAR2(100 CHAR),
    FREE9    VARCHAR2(100 CHAR),
    FREE10    VARCHAR2(100 CHAR),
    FREE11    VARCHAR2(100 CHAR),
    FREE12    VARCHAR2(100 CHAR),
    FREE13    VARCHAR2(100 CHAR),
    FREE14    VARCHAR2(100 CHAR),
    FREE15    VARCHAR2(100 CHAR),
    FREEINT1    INTEGER,
    FREEINT2    INTEGER,
    FREEDATE1    DATE,
    FREEDATE2    DATE,
    FREEDATE3    DATE,
    FREEDATE4    DATE
) ON COMMIT PRESERVE ROWS ;

CREATE GLOBAL TEMPORARY TABLE TEMPO_TQ2
(    FREE1    VARCHAR2(100 CHAR),
    FREE2    VARCHAR2(100 CHAR),
    FREE3    VARCHAR2(100 CHAR),
    FREE4    VARCHAR2(100 CHAR),
    FREE5    VARCHAR2(100 CHAR),
    FREE6    VARCHAR2(100 CHAR),
    FREE7     VARCHAR2(100 CHAR),
    FREE8     VARCHAR2(100 CHAR),
    FREE9    VARCHAR2(100 CHAR),
    FREE10    VARCHAR2(100 CHAR),
    FREE11    VARCHAR2(100 CHAR),
    FREE12    VARCHAR2(100 CHAR),
    FREE13    VARCHAR2(100 CHAR),
    FREE14    VARCHAR2(100 CHAR),
    FREE15    VARCHAR2(100 CHAR),
    FREEINT1    INTEGER,
    FREEINT2    INTEGER,
    FREEDATE1    DATE,
    FREEDATE2    DATE,
    FREEDATE3    DATE,
    FREEDATE4    DATE
) ON COMMIT PRESERVE ROWS ;

CREATE TABLE ZCL09_ID (ID INTEGER);

CREATE TABLE ZCL09_PERSONNEID_BDG (PERSONNEID VARCHAR2(14 CHAR),NUMEROBADGE VARCHAR2(50 CHAR));

CREATE TABLE ZCL18_VISITES
(ID    VARCHAR2(14 CHAR),
ACTION    VARCHAR2(3 CHAR),
BADGE    VARCHAR2(10 CHAR),
NOMVIS    VARCHAR2(50 CHAR),
PRENOMVIS    VARCHAR2(50 CHAR),
SOCVIS    VARCHAR2(50 CHAR),
STATUT    VARCHAR2(50 CHAR),
IMMATR    VARCHAR2(50 CHAR),
DEBUT    DATE,
FIN    DATE,
MATRICULE    VARCHAR2(50 CHAR),
NOMRES    VARCHAR2(50 CHAR),
PRENOMRES    VARCHAR2(50 CHAR),
TELRES    VARCHAR2(50 CHAR),
BUREAU    VARCHAR2(50 CHAR),
SITE    VARCHAR2(50 CHAR),
PROFIL    VARCHAR2(50 CHAR),
GUICHET    VARCHAR2(50 CHAR),
UTILISATEUR    VARCHAR2(50 CHAR),
LECTEUR    VARCHAR2(50 CHAR),
SORTIE_AVALEUSE    INT DEFAULT 0,
ETAT    INT DEFAULT 0);


CREATE TABLE ZCL20_MOUVEMENT
(
ID            VARCHAR2(14 CHAR),
VISITEID        VARCHAR2(14 CHAR),
TYPE_ENREG        VARCHAR2(20 CHAR),
ENTREE_PARKING        DATE,
VISITEUR                VARCHAR2(70 CHAR),
VISITEUR_SOCIETE    VARCHAR2(70 CHAR),
RESIDANT        VARCHAR2(70 CHAR),
RESIDANT_TROUVE        VARCHAR2(1 CHAR),
IMMATRICULATION        VARCHAR2(15 CHAR),
SORTIE_PARKING        DATE,
REF_PARKING        VARCHAR2(20 CHAR),
POSTE_SAISIE        VARCHAR2(20 CHAR),
USER_TQ            VARCHAR2(35 CHAR),
OBSERVATION        VARCHAR2(200 CHAR),
SITEID            VARCHAR2(35 CHAR),
SITE            VARCHAR2(35 CHAR),
DATECREATION        DATE
);

CREATE TABLE ZCL22_COMPTES (
  NAME          VARCHAR2(20 CHAR) NOT NULL,
  PASSWORD      VARCHAR2(20 CHAR),
  ETAT          NUMBER,
  DATECREATION  DATE,
  DATEMAJ       DATE,
CONSTRAINT PK_ZCL22_COMPTES PRIMARY KEY (NAME));

CREATE TABLE ZCL24_BADGE
(
  BADGEID VARCHAR2(50 CHAR),
  NUMBADGE  VARCHAR2(50 CHAR),
  DATECREATION DATE
);

CREATE TABLE ZCL25_VISITES
(
  VISITEID VARCHAR2(14 CHAR),
  STATUTID INTEGER
);

CREATE TABLE ZCL27_SITE
(
    ID_SITE INT NOT NULL PRIMARY KEY,
    SITEID VARCHAR2(14 CHAR),
    SERVICEURL VARCHAR2(300 CHAR),
    DATECREATION DATE,
    DATEMAJ DATE
);

CREATE SEQUENCE SEQ_ESVISITES_LOG
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE;
COMMIT;

CREATE SEQUENCE SEQ_VISITES
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE;
COMMIT;

CREATE SEQUENCE SEQ_VISITES_RESIDANTS
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE;
COMMIT;

CREATE SEQUENCE SEQ_ZCL27_SITE
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE;

CREATE OR REPLACE TRIGGER TRIGGER_ZCL27_SITE
BEFORE INSERT ON ZCL27_SITE
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
    SELECT SEQ_ZCL27_SITE.NEXTVAL INTO :NEW.ID_SITE FROM DUAL;
END;
/

CREATE TABLE ZCL27_BADGE
(
    ID_BADGE INT NOT NULL PRIMARY KEY,
    B_CARD_NO VARCHAR2(20 CHAR),
    B_ASSIGNED INT,
    CARDQUALITY VARCHAR2(14 CHAR),
    SITEID VARCHAR2(14 CHAR),
    DATECREATION DATE,
    DATEMAJ DATE
);

CREATE SEQUENCE SEQ_ZCL27_BADGE
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE;

CREATE OR REPLACE TRIGGER TRIGGER_ZCL27_BADGE
BEFORE INSERT ON ZCL27_BADGE
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
    SELECT SEQ_ZCL27_BADGE.NEXTVAL INTO :NEW.ID_BADGE FROM DUAL;
END;
/

CREATE TABLE ZCL27_WORKGROUP
(
    ID_WORKGROUP INT NOT NULL PRIMARY KEY,
    WG_NAME VARCHAR2(40 CHAR),
    WG_ID VARCHAR2(20 CHAR),
    SITEID VARCHAR2(14 CHAR),
    DATECREATION DATE,
    DATEMAJ DATE
);

CREATE SEQUENCE SEQ_ZCL27_WORKGROUP
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE;

CREATE OR REPLACE TRIGGER TRIGGER_ZCL27_WORKGROUP
BEFORE INSERT ON ZCL27_WORKGROUP
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
    SELECT SEQ_ZCL27_WORKGROUP.NEXTVAL INTO :NEW.ID_WORKGROUP FROM DUAL;
END;
/

CREATE TABLE ZCL27_EMPLOYEE
(
    ID_EMPLOYEE INT NOT NULL PRIMARY KEY,
    SITEID VARCHAR2(14 CHAR),
    INTERLOCUTEURID VARCHAR2(14 CHAR) NOT NULL,
    E_CARDNUMBER VARCHAR2(20 CHAR) NOT NULL,
    E_CARDASSIGNED INT DEFAULT 0,
    E_FIRSTNAME VARCHAR2(30 CHAR),
    E_LASTNAME VARCHAR2(30 CHAR),
    E_EMPLOYEEID INT,
    E_STARTDATE DATE,
    E_STARTDATETIME DATE,
    E_ENDDATE DATE,
    E_ENDDATETIME DATE,
    E_WG_ID VARCHAR2(20 CHAR),
    E_LASTUPDATEDTIME VARCHAR2(19 CHAR),
    E_REFERENCE INT,
    E_VISITOR INT,
    STATUT_ENTREE INT,
    STATUT_SORTIE INT DEFAULT 0,
    DATECREATION DATE,
    DATEMAJ DATE
);

CREATE SEQUENCE SEQ_ZCL27_EMPLOYEE
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE;

CREATE OR REPLACE TRIGGER TRIGGER_ZCL27_EMPLOYEE
BEFORE INSERT ON ZCL27_EMPLOYEE
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
    SELECT SEQ_ZCL27_EMPLOYEE.NEXTVAL INTO :NEW.ID_EMPLOYEE FROM DUAL;
END;
/

CREATE TABLE ZCL27_EMPLOYEE_LOG
(
    ID_EMPLOYEE_LOG INT NOT NULL PRIMARY KEY,
    ID_EMPLOYEE INT,
    SITEID VARCHAR2(14 CHAR),
    INTERLOCUTEURID VARCHAR2(14 CHAR),
    E_CARDNUMBER VARCHAR2(20 CHAR),
    E_CARDASSIGNED INT,
    E_FIRSTNAME VARCHAR2(30 CHAR),
    E_LASTNAME VARCHAR2(30 CHAR),
    E_EMPLOYEEID INT,
    E_STARTDATE DATE,
    E_STARTDATETIME DATE,
    E_ENDDATE DATE,
    E_ENDDATETIME DATE,
    E_WG_ID VARCHAR2(20 CHAR),
    E_LASTUPDATEDTIME VARCHAR2(19 CHAR),
    E_REFERENCE INT,
    E_VISITOR INT,
    STATUT_ENTREE INT,
    STATUT_SORTIE INT,
    DATECREATION DATE,
    DATEMAJ DATE,
    DATELOG DATE
);

CREATE SEQUENCE SEQ_ZCL27_EMPLOYEE_LOG
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE;

CREATE OR REPLACE TRIGGER TRIGGER_ZCL27_EMPLOYEE_LOG
BEFORE INSERT ON ZCL27_EMPLOYEE_LOG
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
    SELECT SEQ_ZCL27_EMPLOYEE_LOG.NEXTVAL INTO :NEW.ID_EMPLOYEE_LOG FROM DUAL;
END;
/

CREATE TABLE ZCL27_PARAMETRE
(
    ID_PARAMETRE INT NOT NULL PRIMARY KEY,
    H_LISTE DATE,
    FREQ_EMPL INT,
    H_LOG DATE,
    H_SORTIE1 DATE,
    H_SORTIE2 DATE,
    DATECREATION DATE,
    DATEMAJ DATE
);

CREATE SEQUENCE SEQ_ZCL27_PARAMETRE
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE;

CREATE OR REPLACE TRIGGER TRIGGER_ZCL27_PARAMETRE
BEFORE INSERT ON ZCL27_PARAMETRE
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
    SELECT SEQ_ZCL27_PARAMETRE.NEXTVAL INTO :NEW.ID_PARAMETRE FROM DUAL;
END;
/

--

CREATE TABLE VISITES_RESIDANTS (
  PASSAGERID    VARCHAR2(14 CHAR)  NOT NULL,
  RESIDANTID    VARCHAR2(14 CHAR),
  NOMPRENOM     VARCHAR2(70 CHAR),
  CODEACCES     VARCHAR2(34 CHAR),
  ENTREE        DATE,
  SORTIE        DATE,
  CIRCULATION   VARCHAR2(20 CHAR),
  OBSERVATION   VARCHAR2(200 CHAR),
  TYPEENTREE    NUMBER,
  GUICHET_E     VARCHAR2(30 CHAR),
  GUICHET_S     VARCHAR2(30 CHAR),
  SITEID        VARCHAR2(14 CHAR),
  DATECREATION  DATE          NOT NULL,
  DATEMAJ       DATE          NOT NULL,
  DATESYNCHRO   DATE
);

CREATE GLOBAL TEMPORARY TABLE IDENTITE_TMP
(
  TMPID VARCHAR2(14 CHAR)
)
ON COMMIT PRESERVE ROWS ;

COMMIT;

CREATE  TABLE TEMP_MYPURGE
(MYENTITEID VARCHAR2(14 CHAR)
 );

COMMIT;

CREATE TABLE ZCL17_PROFIL (
  ZCL17_PROFILID  VARCHAR2(14 CHAR)  NOT NULL,
  NUMERO      VARCHAR2(35 CHAR),
  LIBELLE         VARCHAR2(35 CHAR),
  SITEID          VARCHAR2(14 CHAR),
  DATECREATION    DATE,
  DATEMAJ         DATE,
  DATESYNCHRO     DATE
);

CREATE TABLE ZCL17_VISITE (
  ZCL17_VISITEID VARCHAR2(14 CHAR) NOT NULL,
  ACT            VARCHAR2(14 CHAR),
  NUMERO     VARCHAR2(20 CHAR),
  NOMV         VARCHAR2(35 CHAR),
  PRENOMV     VARCHAR2(35 CHAR),
  SOCIETE     VARCHAR2(35 CHAR),
  NOMR         VARCHAR2(35 CHAR),
  PRENOMR     VARCHAR2(35 CHAR),
  GUICHET     VARCHAR2(40 CHAR),
  PROFIL1     VARCHAR2(35 CHAR),
  PROFIL2     VARCHAR2(35 CHAR),
  PROFIL3     VARCHAR2(35 CHAR),
  PROFIL4     VARCHAR2(35 CHAR),
  DEBUT         VARCHAR2(35 CHAR),
  FIN         VARCHAR2(35 CHAR),
  STATUT     INTEGER,
  SITEID     VARCHAR2(14 CHAR),
  DATECREATION   DATE,
  DATEMAJ        DATE,
  DATESYNCHRO    DATE
);

CREATE TABLE ZCL09_PROFIL (
  ZCL09_PROFILID  VARCHAR2(14 CHAR)  NOT NULL,
  NUMERO      VARCHAR2(35 CHAR),
  LIBELLE         VARCHAR2(35 CHAR),
  SITEID          VARCHAR2(14 CHAR),
  DATECREATION    DATE,
  DATEMAJ         DATE,
  DATESYNCHRO     DATE
);

CREATE TABLE ZCL09_VISITE (
  ZCL09_VISITEID  VARCHAR2(14 CHAR) NOT NULL,
  LIGNE          VARCHAR2(300 CHAR),
  STATUT      INTEGER,
  SITEID      VARCHAR2(14 CHAR),
  DATECREATION    DATE,
  DATEMAJ         DATE,
  DATESYNCHRO     DATE
);

CREATE TABLE ZCL02_VERSLPM (
ZCL02_VERSLPMID VARCHAR2(14 CHAR) PRIMARY KEY,
FONCTION VARCHAR2(20 CHAR),
ID      VARCHAR2(20 CHAR),
CATEGORIE VARCHAR2(20 CHAR),
DEBUT        VARCHAR2(20 CHAR),
FIN      VARCHAR2(20 CHAR),
PLAQUE      VARCHAR2(20 CHAR),
NOM      VARCHAR2(20 CHAR),
INFO1      VARCHAR2(20 CHAR),
INFO2      VARCHAR2(20 CHAR),
INFO3      VARCHAR2(20 CHAR),
INFO4      VARCHAR2(20 CHAR),
INFO5      VARCHAR2(20 CHAR),
ETAT      NUMBER,
LIEN      VARCHAR2(20 CHAR),
SITEID      VARCHAR2(14 CHAR),
DATECREATION    DATE NOT NULL,
DATEMAJ    DATE NOT NULL
);

CREATE TABLE ZCL02_DELPM (
ZCL02_DELPMID VARCHAR2(14 CHAR) PRIMARY KEY,
ID    VARCHAR2(20 CHAR),
PLAQUE    VARCHAR2(20 CHAR),
DENTREE    VARCHAR2(20 CHAR),
DSORTIE    VARCHAR2(20 CHAR),
TENTREE    VARCHAR2(20 CHAR),
TSORTIE    VARCHAR2(20 CHAR),
ETAT    NUMBER,
LIEN    VARCHAR2(20 CHAR),
DATECREATION    DATE NOT NULL,
DATEMAJ    DATE NOT NULL
);

CREATE TABLE DEPFR (
  DEPFRID        INT PRIMARY KEY,
  NUMERO     VARCHAR2(10 CHAR),
  DEPARTEMENT     VARCHAR2(70 CHAR),
  PREFERTURE     VARCHAR2(70 CHAR),
  REGION         VARCHAR2(70 CHAR),
  DATECREATION   DATE not null,
  DATEMAJ        DATE
);

CREATE TABLE MARCHE (
  MARCHEID      VARCHAR2(14 CHAR) NOT NULL,
  MARCHE     VARCHAR2(120 CHAR),
  OBJET         VARCHAR2(250 CHAR),
  MANDATAIRE     VARCHAR2(35 CHAR),
  MANDATAIREID     VARCHAR2(14 CHAR),
  RANG         VARCHAR2(20 CHAR),
  FINPREVUE     DATE,
  CSPS          DATE,
  INSPECCOMMUNE     DATE,
  DATECREATION   DATE,
  DATEMAJ        DATE,
  DATESYNCHRO    DATE
);

CREATE TABLE SOCMAR (
  SOCIETEID     VARCHAR2(14 CHAR) NOT NULL,
  MARCHEID      VARCHAR2(14 CHAR) NOT NULL,
  DATECREATION   DATE,
  DATEMAJ        DATE,
  DATESYNCHRO    DATE
);

COMMIT;

CREATE TABLE GRPSITE(
   GRPSITEID    VARCHAR2(14 CHAR) PRIMARY KEY,
   LIBELLE      VARCHAR2(50 CHAR),
   DATECREATION DATE,
   DATEMAJ      DATE,
   DATESYNCHRO DATE
);
COMMIT;

CREATE TABLE GRPSITE_SITE(
   GRPSITEID   VARCHAR2(14 CHAR) NOT NULL,
   SITEID      VARCHAR2(14 CHAR) NOT NULL,
   CONSTRAINT PK_GRPSITE_SITE PRIMARY KEY (GRPSITEID,SITEID)
);
COMMIT;

CREATE TABLE OTACHE (
OTACHEID    INTEGER PRIMARY KEY,
TYPEJOUR    VARCHAR2(20 CHAR),
HEUREEXECUTION    DATE,
ACTION    VARCHAR2(20 CHAR),
HEUREDEBUT    DATE,
HEUREFIN    DATE,
NBJOURMOINS    INTEGER DEFAULT 0,
MODEA    INTEGER DEFAULT 0,
ACTIF    INTEGER DEFAULT 1,
PROCHAINEEXECUTION DATE,
DERNIEREEXECUTION DATE,
DERNIERRESULTAT    INTEGER DEFAULT 0,
SITEID    VARCHAR2(20 CHAR),
GROUPEDESTID    INTEGER,
DATECREATION DATE NOT NULL,
DATEMAJ DATE
);
COMMIT;

CREATE TABLE ZCL30_TAG_TMP
(
ZCL30_TAG_TMPID NUMBER(*, 0) NOT NULL,
BASE VARCHAR2(30 CHAR),
PORTATIF VARCHAR2(30 CHAR),
TAG VARCHAR2(30 CHAR),
DATEHEURE DATE,
ORONDEID INT,
CONSTRAINT PK_ZCL30_TAG_TMP PRIMARY KEY (ZCL30_TAG_TMPID)
);

CREATE SEQUENCE SEQ_ZCL30_TAG_TMP
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE;

CREATE TABLE ZCL30_EVT
(
ZCL30_EVTID NUMBER(*, 0) NOT NULL,
BASE VARCHAR2(30 CHAR),
PORTATIF VARCHAR2(30 CHAR),
CODE_EVT VARCHAR2(30 CHAR),
DATEHEURE DATE,
CONSTRAINT PK_ZCL30_EVT PRIMARY KEY (ZCL30_EVTID)
);

CREATE SEQUENCE SEQ_ZCL30_EVT
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE;

COMMIT;

CREATE TABLE STATUTCOURSE (
    ID_STATUTCOURSE INTEGER PRIMARY KEY,
    LIBELLE VARCHAR2(35 CHAR),
    COLOR INTEGER,
    DATECREATION DATE NOT NULL,
    DATEMAJ DATE NOT NULL,
    DATESYNCHRO DATE
);

CREATE TABLE TYPEVEHICULE (
    ID_TYPEVEHICULE INTEGER PRIMARY KEY,
    LIBELLE VARCHAR2(35 CHAR),
    DATECREATION DATE NOT NULL,
    DATEMAJ DATE NOT NULL,
    DATESYNCHRO DATE
);

CREATE TABLE COURSE (
    ID_COURSE INTEGER PRIMARY KEY,
    ID_STATUTCOURSE VARCHAR2(14 CHAR),
    SITEID VARCHAR2(14 CHAR),
    DATEHEUREDEMANDE DATE,
    LIEUDEPART VARCHAR2(40 CHAR),
    DATEHEUREDEPART DATE,
    ID_TYPEVEHICULE INTEGER,
    OBJET VARCHAR2(200 CHAR),
    MOYENPAIEMENT VARCHAR2(50 CHAR),
    IMPUTATIONID VARCHAR2(14 CHAR),
    CODECLIENT VARCHAR2(10 CHAR),
    NUMCOURSE VARCHAR2(35 CHAR),
    REFERENCESTAXI VARCHAR2(200 CHAR),
    DELAI INT,
    ADRESSEID VARCHAR2(14 CHAR),
    DATEHEUREFIN DATE,
    DATECREATION DATE NOT NULL,
    DATEMAJ DATE NOT NULL,
    DATESYNCHRO DATE
);

CREATE TABLE EVENEMENTCOURSE (
    ID_EVENEMENTCOURSE INTEGER    PRIMARY KEY,
    ID_COURSE INTEGER,
    LIBELLE VARCHAR2(200 CHAR),
    DATEHEURE DATE,
    USERID VARCHAR2(14 CHAR),
    DATECREATION DATE NOT NULL,
    DATEMAJ DATE NOT NULL,
    DATESYNCHRO DATE
);

CREATE TABLE PASSAGERTAXI (
    ID_PASSAGERTAXI INTEGER PRIMARY KEY,
    ID_COURSE INTEGER,
    RESIDANTID VARCHAR2(14 CHAR),
    INTERLOCUTEURID VARCHAR2(14 CHAR),
    CONTACT VARCHAR2(200 CHAR),
    HANDICAP VARCHAR2(200 CHAR),
    ANIMAL VARCHAR2(200 CHAR),
    ORDRE INTEGER,
    DATECREATION DATE NOT NULL,
    DATEMAJ DATE NOT NULL,
    DATESYNCHRO DATE
);

CREATE TABLE DROITSTAXI (
    ID_DROITSTAXI INT PRIMARY KEY,
    LIBELLE VARCHAR2(35 CHAR),
    DROITS INTEGER,
    DATECREATION DATE NOT NULL,
    DATEMAJ DATE NOT NULL,
    DATESYNCHRO DATE
);

CREATE TABLE DROITSTELEM (
    ID_DROITSTELEM INT PRIMARY KEY,
    LIBELLE VARCHAR2(35 CHAR),
    DROITS VARCHAR2(500 CHAR),
    SITE_RESIDANT INT,
    SITE_PREENREG INT,
    DATECREATION DATE NOT NULL,
    DATEMAJ DATE NOT NULL,
    DATESYNCHRO DATE,
    VISITEUR VARCHAR2(500),
	GRPVALIDEURID INT NULL,
	ETRANGER INTEGER DEFAULT 0
);
COMMIT;

CREATE TABLE OCONSIGNE_ODROIT (
  OCONSIGNEID INT NOT NULL,
  ODROITID INT NOT NULL
);
COMMIT;

CREATE TABLE OCONSIGNE_POSTE (
  OCONSIGNEID INT NOT NULL,
  POSTEID INT NOT NULL
);
COMMIT;

CREATE TABLE RAPPEL (
   RAPPELID INT PRIMARY KEY,
   CODELGRESERVATION  VARCHAR2(14),
   TEMPS VARCHAR2(50),
   UNITE VARCHAR2(50),
   DATERAPPEL DATE,
   ETAT INT DEFAULT 0,
   DATECREATION DATE,
   DATEMAJ      DATE
);
COMMIT;

CREATE TABLE GRPVALIDEUR (
  GRPVALIDEURID INT NOT NULL,
  GRPVALIDEURN VARCHAR2(100),
  RANGVALIDEUR INTEGER DEFAULT (0),
  AVIS INTEGER DEFAULT (0),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE,
CONSTRAINT PK_GRPVALIDEURID PRIMARY KEY (GRPVALIDEURID));

COMMIT;

CREATE TABLE REGLE_GRPVALIDEUR (
  REGLEID INT NOT NULL,
  GRPVALIDEURID INT NOT NULL,
CONSTRAINT PK_REGLE_GRPVALIDEUR PRIMARY KEY (REGLEID,GRPVALIDEURID));
COMMIT;

CREATE TABLE LOCALISATION_USER (
  LOCALISATIONID INT NOT NULL,
  USERID VARCHAR2(14) NOT NULL,
CONSTRAINT PK_LOCALISATION_USER PRIMARY KEY (USERID,LOCALISATIONID));
COMMIT ;


CREATE SEQUENCE SEQ_RAPPEL
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE;

COMMIT;


----------------------------------------------------------------------------------
--        LICENCES                                                              --
----------------------------------------------------------------------------------

--  Table LICENCE
CREATE TABLE LICENCE (
    ID_LICENCE NUMBER(*, 0) NOT NULL,
    CLE VARCHAR2(30 CHAR) NOT NULL,
    DATECREATION DATE NOT NULL,
    CONSTRAINT PK_ID_LICENCE PRIMARY KEY (ID_LICENCE)
);

--  Table LICENCE1
CREATE TABLE LICENCE1 (
    ID_LICENCE1 NUMBER(*, 0) NOT NULL,
    NOM_POSTE VARCHAR2(24 CHAR) NOT NULL,
    LOGIN VARCHAR2(50 CHAR) NOT NULL,
    APPLICATION VARCHAR2(20 CHAR) NOT NULL,
    DATECREATION DATE NOT NULL,
    CONSTRAINT PK_ID_LICENCE1 PRIMARY KEY (ID_LICENCE1)
);

CREATE SEQUENCE SEQ_LICENCE1
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE;

--  Table LICENCE2
CREATE TABLE LICENCE2 (
    ID_LICENCE2 NUMBER(*, 0) NOT NULL,
    LOGIN VARCHAR2(50 CHAR) NOT NULL,
    APPLICATION VARCHAR2(20 CHAR) NOT NULL,
    DATECREATION DATE NOT NULL,
    CONSTRAINT PK_ID_LICENCE2 PRIMARY KEY (ID_LICENCE2)
);

CREATE SEQUENCE SEQ_LICENCE2
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE;

--  Table LICENCE3
CREATE TABLE LICENCE3 (
    ID_LICENCE3 NUMBER(*, 0) NOT NULL,
    LOGIN VARCHAR2(50 CHAR) NOT NULL,
    APPLICATION VARCHAR2(20 CHAR) NOT NULL,
    DATECREATION DATE NOT NULL,
    CONSTRAINT PK_ID_LICENCE3 PRIMARY KEY (ID_LICENCE3)
);

CREATE SEQUENCE SEQ_LICENCE3
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE;

--  Table LICENCE1_LOG
CREATE TABLE LICENCE1_LOG (
    ID_LICENCE1_LOG NUMBER(*, 0) NOT NULL,
    NOM_POSTE VARCHAR2(50 CHAR) NOT NULL,
    APPLICATION VARCHAR2(20 CHAR) NOT NULL,
    ACTION VARCHAR2(50 CHAR) NOT NULL,
    DATECREATION DATE NOT NULL,
    CONSTRAINT PK_ID_LICENCE1_LOG PRIMARY KEY (ID_LICENCE1_LOG)
);

CREATE SEQUENCE SEQ_LICENCE1_LOG
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE;

--  Table LICENCE2_LOG
CREATE TABLE LICENCE2_LOG (
    ID_LICENCE2_LOG NUMBER(*, 0) NOT NULL,
    LOGIN VARCHAR2(50 CHAR) NOT NULL,
    APPLICATION VARCHAR2(20 CHAR) NOT NULL,
    ACTION VARCHAR2(50 CHAR) NOT NULL,
    DATECREATION DATE NOT NULL,
    CONSTRAINT PK_ID_LICENCE2_LOG PRIMARY KEY (ID_LICENCE2_LOG)
);

CREATE SEQUENCE SEQ_LICENCE2_LOG
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE;

--  Table LICENCE3_LOG
CREATE TABLE LICENCE3_LOG (
    ID_LICENCE3_LOG NUMBER(*, 0) NOT NULL,
    LOGIN VARCHAR2(50 CHAR) NOT NULL,
    APPLICATION VARCHAR2(20 CHAR) NOT NULL,
    ACTION VARCHAR2(50 CHAR) NOT NULL,
    DATECREATION DATE NOT NULL,
    CONSTRAINT PK_ID_LICENCE3_LOG PRIMARY KEY (ID_LICENCE3_LOG)
);

CREATE SEQUENCE SEQ_LICENCE3_LOG
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE;

--  Table CONNECTION_LOG
CREATE TABLE CONNECTION_LOG (
    ID_CONNECTION_LOG NUMBER(*, 0) NOT NULL,
    LOGIN VARCHAR2(50 CHAR) NOT NULL,
    APPLICATION VARCHAR2(100 CHAR) NOT NULL,
    ACTION VARCHAR2(500 CHAR) NOT NULL,
    DATECREATION DATE NOT NULL,
    CONSTRAINT PK_ID_CONNECTION_LOG PRIMARY KEY (ID_CONNECTION_LOG)
);

CREATE SEQUENCE SEQ_CONNECTION_LOG
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE;

--  Table VISITE_ACTION
CREATE TABLE VISITE_ACTION (
  VISITEACTIONID INTEGER PRIMARY KEY,
  VISITEID VARCHAR2(14 CHAR),
  ACTION_NATURE VARCHAR2(35 CHAR),
  ACTEUR_NATURE VARCHAR2(35 CHAR),
  NOMACTEUR VARCHAR2(70 CHAR),
  ACTEURID VARCHAR2(14 CHAR),
  RES_ACTION VARCHAR2(4000 CHAR),
  NOM_CHAMP VARCHAR2(50 CHAR),
  RES_AVANT VARCHAR2(250 CHAR),
  RES_APRES VARCHAR2(250 CHAR),
  ACTION_DATE DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATECREATION DATE NOT NULL,
  DATESYNCHRO DATE);

CREATE SEQUENCE SEQ_VISITE_ACTION;


--  Table INTER_ACTION
CREATE TABLE INTER_ACTION (
  INTERACTIONID INTEGER PRIMARY KEY,
  INTERLOCUTEURID VARCHAR2(14 CHAR),
  ACTION_NATURE VARCHAR2(35 CHAR),
  ACTEUR_NATURE VARCHAR2(35 CHAR),
  NOMACTEUR VARCHAR2(70 CHAR),
  ACTEURID VARCHAR2(14 CHAR),
  RES_ACTION VARCHAR2(4000 CHAR),
  NOM_CHAMP VARCHAR2(50 CHAR),
  RES_AVANT VARCHAR2(250 CHAR),
  RES_APRES VARCHAR2(250 CHAR),
  ACTION_DATE DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATECREATION DATE NOT NULL,
  DATESYNCHRO DATE);

CREATE SEQUENCE SEQ_INTER_ACTION;

CREATE TABLE SOCIETE_ACTION (
  SOCACTIONID INTEGER PRIMARY KEY,
  SOCIETEID VARCHAR2(14 CHAR),
  ACTION_NATURE VARCHAR2(35 CHAR),
  ACTEUR_NATURE VARCHAR2(35 CHAR),
  NOMACTEUR VARCHAR2(70 CHAR),
  ACTEURID VARCHAR2(14 CHAR),
  RES_ACTION VARCHAR2(4000 CHAR),
  NOM_CHAMP VARCHAR2(50 CHAR),
  RES_AVANT VARCHAR2(250 CHAR),
  RES_APRES VARCHAR2(250 CHAR),
  ACTION_DATE DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATECREATION DATE NOT NULL,
  DATESYNCHRO DATE
);

CREATE SEQUENCE SEQ_SOCIETE_ACTION;
COMMIT;

CREATE TABLE FORMULAIRE_MODELE (
  FORMULAIRE_MODELEID INT PRIMARY KEY,
  LIBELLE VARCHAR2(50),
  XML VARCHAR2(4000),
  OFICHIERID_WORD INT,
  OFICHIERID_EXCEL INT,
  SITEID VARCHAR2(14),
  TYPEVISITEID INT,
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE
);
COMMIT;

CREATE TABLE FORMULAIRE (
  FORMULAIREID INT PRIMARY KEY,
  FORMULAIRE_MODELEID INT NOT NULL,
  REFERENCE INT,
  VERSION INT,
  LIBELLE VARCHAR2(50),
  XML CLOB,
  AUTEUR VARCHAR2(100),
  DATECREATION DATE NOT NULL,
  DATEMAJ DATE NOT NULL,
  DATESYNCHRO DATE
);
COMMIT;

CREATE TABLE FORMULAIRE_VISITE (
  FORMULAIREID INT,
  VISITEID VARCHAR2(14)
);
COMMIT;

CREATE TABLE JOUR_FERIE (
    JOUR_FERIEID INT PRIMARY KEY,
    LIBELLE VARCHAR2(100),
    DEBUT DATE,
    FIN DATE,
    DATECREATION DATE NOT NULL,
    DATEMAJ DATE NOT NULL
);
COMMIT;

CREATE TABLE FORMULAIRE_OFICHIER (
  FORMULAIREID INT,
  OFICHIERID INT,
 CONSTRAINT PK_FORMULAIRE_OFICHIERID PRIMARY KEY (FORMULAIREID,OFICHIERID)
);
COMMIT;

CREATE TABLE MAIL_OFICHIER (
  MAILID VARCHAR2(14),
  OFICHIERID INT
);
COMMIT;

CREATE TABLE PROFIL_CTRL_LECTEUR (
    PROFIL_CTRL_LECTEURID INTEGER PRIMARY KEY,
    CTRLREADER VARCHAR2(50),
    CTRLREADERID VARCHAR2(20),
    PROFIL_CTRL VARCHAR2(100),
    PROFIL_CTRLID_EXT VARCHAR2(50),
    SITEID VARCHAR2(14),
    DATECREATION DATE NOT NULL,
    DATEMAJ DATE NOT NULL,
    DATESYNCHRO DATE
);
COMMIT;


CREATE TABLE ZCTRL_FIL_EAU (
    ID INT PRIMARY KEY NOT NULL,
    CTRLID VARCHAR2(30),
    CTRLDATE DATE,
    BADGE VARCHAR2(20),
    CTRLDESC VARCHAR2(50),
    CTRLREADER VARCHAR2(50),
    CTRLEVENT VARCHAR2(50),
    CTRLREADERID VARCHAR2(20),
    CTRLPROFIL VARCHAR2(100),
    INTERLOCUTEURID VARCHAR2(20),
    NOMPRENOM VARCHAR2(100),
    SOCIETE VARCHAR2(100),
    INTERLOCUTEURSTATUT VARCHAR2(50),
    RESIDANTSOCIETELIB VARCHAR2(100),
    RESIDANTSOCIETEID VARCHAR2(20),
    SITEID VARCHAR2(20),
    SITELIBELLE VARCHAR2(50),
    TICKET VARCHAR2(50),
    LOCALISATION VARCHAR2(4000),
    DATECREATION DATE NOT NULL,
    DATEMAJ  DATE,
    DATESYNCHRO  DATE
);

COMMIT;

CREATE TABLE IMPORT_ROI (
IMPORT_ROIID VARCHAR(14) PRIMARY KEY,
MVT VARCHAR2(03),
SOURCE VARCHAR2(12),
ETAT VARCHAR2(06),
RAISON VARCHAR2(10),
IDENTIFIANT VARCHAR2(10),
QUALITECIVILITE VARCHAR2(5),
NOM VARCHAR2(50),
PRENOM VARCHAR2(32),
SOCIETE VARCHAR2(05),
UNITEMANAGERIALE VARCHAR2(20),
LABELUNITEMANAGERIALE VARCHAR2(100),
TYPEPOPULATION VARCHAR2(02),
TYPEPERSONNE VARCHAR2(30),
IESOCIETEPRESTATION VARCHAR2(100),
IEDEBUTMISSION VARCHAR2(17),
IEFINMISSION VARCHAR2(17),
MAIL VARCHAR2(100),
CODEFONCTION VARCHAR2(04),
FONCTION VARCHAR2(50),
SITE VARCHAR2(3),
LIBELLESITE VARCHAR2(32),
BATIMENT VARCHAR2(3),
ETAGE VARCHAR2(3),
NUMEROBUREAU VARCHAR2(6),
RUE VARCHAR2(120),
CODEPOSTAL VARCHAR2(5),
VILLE VARCHAR2(32),
PAYS VARCHAR2(3),
TELEPHONE VARCHAR2(13),
TELEPHONEINTERNE VARCHAR2(6),
FAX VARCHAR2(13),
CODENATURECONTRATTRAVAIL VARCHAR2(05),
INDABSENCELONGUEDUREE VARCHAR2(01),
STATUTPERSONNE VARCHAR2(02),
CODEANTENNE VARCHAR2(20),
ANCIENSITE VARCHAR2(3),
ANCIENCODEANTENNE VARCHAR2(20),
DATECREATION DATE,
DATEMAJ DATE,
THELOGIN VARCHAR2(50),
MANAGER VARCHAR2(20)
);

COMMIT;

CREATE TABLE LOGDB (
    LOGDBID INT PRIMARY KEY,
    QUI VARCHAR2(50),
    IP VARCHAR2(50),
    URL VARCHAR2(250),
    QUAND DATE,
    REQUETE VARCHAR2(4000),
    LATABLE VARCHAR2(100),
    ACTION VARCHAR2(100),
    ID VARCHAR2(100),
    DONNEES VARCHAR2(4000),
    SITE VARCHAR2(50),
    POSTE VARCHAR2(50)
);
COMMIT;

CREATE TABLE RESIDANT_CTRL(
    RESIDANT_CTRLID INT NOT NULL PRIMARY KEY,
    RESIDANTID VARCHAR2(14) NULL,
    ACTION INT NOT NULL,
    SITEID VARCHAR2(14) NULL,
    SITE VARCHAR2(80) NULL,
    EMETTEUR VARCHAR2(80) NULL,
    DH_POST DATE NOT NULL,
    DH_PROCEED DATE NULL,
    IDENT VARCHAR2(80) NOT NULL,
    STATUT INT NULL,
    TXT_ERR VARCHAR2(80) NULL,
    DEB_VAL DATE NULL,
    FIN_VAL DATE NULL,
    NOM VARCHAR2(40) NULL,
    PRENOM VARCHAR2(40) NULL,
    SOCIETE VARCHAR2(40) NULL,
    CODE_ANTENNE VARCHAR2(40) NULL,
    MATRICULE VARCHAR2(40) NULL,
    ANTI_RETOUR INT NULL,
    CODE_CLASSE INT NULL,
    DATA_01 VARCHAR2(80) NULL,
    DATA_02 VARCHAR2(80) NULL,
    DATA_03 VARCHAR2(80) NULL,
    DATA_04 VARCHAR2(80) NULL,
    DATA_05 VARCHAR2(80) NULL,
    DATA_06 VARCHAR2(80) NULL,
    DATA_07 VARCHAR2(80) NULL,
    DATA_08 VARCHAR2(80) NULL,
    DATA_09 VARCHAR2(80) NULL,
    DATA_10 VARCHAR2(80) NULL,
    ACCES_01 VARCHAR2(4000) NULL,
    ACCES_02 VARCHAR2(4000) NULL,
    ACCES_03 VARCHAR2(4000) NULL,
    ACCES_04 VARCHAR2(4000) NULL,
    ACCES_05 VARCHAR2(4000) NULL,
    ACCES_06 VARCHAR2(4000) NULL,
    ACCES_07 VARCHAR2(4000) NULL,
    ACCES_08 VARCHAR2(4000) NULL,
    ACCES_09 VARCHAR2(4000) NULL,
    ACCES_10 VARCHAR2(4000) NULL
);
COMMIT;

CREATE TABLE RESIDANT_SITE_PROFIL (
    RESIDANTID    VARCHAR2(14),
    SITEID        VARCHAR2(14),
    PROFIL_CTRLID    INTEGER,
    DATECREATION DATE,
    DATEMAJ        DATE,
    DATESYNCHRO    DATE
);
COMMIT;

CREATE TABLE ROI_LOG (
    ROI_LOGID INTEGER,
    QUI VARCHAR2(100),
    QUAND DATE,
    ACTION VARCHAR2(100),
    QUOI VARCHAR2(100),
    BADGE VARCHAR2(100),
    MATRICULE VARCHAR2(100),
    NOM VARCHAR2(100),
    PRENOM VARCHAR2(100),
    SOCIETE VARCHAR2(100),
    SITE  VARCHAR2(100)
);
COMMIT;

CREATE TABLE FILTRE (
    LIBELLE VARCHAR2(50 CHAR),
    VALEUR VARCHAR2(4000 CHAR),
    SITEID VARCHAR2(14 CHAR),
    DATECREATION DATE NOT NULL,
    DATEMAJ DATE NOT NULL,
    DATESYNCHRO DATE,
    CONSTRAINT FILTRE_PK PRIMARY KEY (LIBELLE,SITEID)
);
COMMIT;

CREATE TABLE CHECKLIST (
   CHECKLISTID INTEGER PRIMARY KEY,
   LIBELLE  VARCHAR2(200),
   SITEID VARCHAR2(14),
   NUMERO INT NOT NULL,
   DATECREATION DATE,
   DATEMAJ    DATE
);
COMMIT;

CREATE TABLE OCHECKLIST (
   OCHECKLISTID INTEGER PRIMARY KEY,
   LIBELLE VARCHAR2(200),
   NUMERO INTEGER,
   PERSONNELID INTEGER,
   UNOMPRENOM VARCHAR2(300),
   ETAT VARCHAR2(1000),
   DETAIL VARCHAR2(4000),
   OBSERVATION VARCHAR2(4000),
   CHKITEM VARCHAR2(4000),
   SITEID VARCHAR2(14),
   CHECKDATE DATE,
   DATECREATION DATE,
   DATEMAJ      DATE
);
COMMIT;
CREATE TABLE CHK_CHECKLIST (
   CHKID INTEGER PRIMARY KEY,
   CHECKLISTID INTEGER,
   NORDER INTEGER
);
COMMIT;

CREATE TABLE CHK (
   CHKID INTEGER PRIMARY KEY,
   LIBELLE VARCHAR2(400),
   DATECREATION DATE,
   DATEMAJ      DATE
);
COMMIT;

 CREATE TABLE VALIDATION_ENQUETE(
    SITEID varchar2(14) NULL,
    EXTERNALID varchar2(14) NOT NULL,
    EXTERN_TYPE varchar2(35) NOT NULL,
    POLE varchar2(100) NULL,
    ECHANGES int DEFAULT 0,
    CUMUL varchar2(50) NULL,
    CODEACTIVITE varchar2(70) NULL,
    TYPEVISITE varchar2(35) NOT NULL,
    VISITEID varchar2(14) NULL,
    DEBUTPREVU DATE NULL,
    FINPREVU DATE NULL,
    DATESAISIE DATE NULL,
    CENTRE varchar2(35) NULL,
    CIVILITE varchar2(30) NULL,
    NOM varchar2(35) NULL,
    PRENOM varchar2(35) NULL,
    NOMJEUNEFILLE varchar2(25) NULL,
    DATENAISSANCE DATE NULL,
    LIEUNAISSANCE varchar2(70) NULL,
    PAYSNAISSANCE varchar2(50) NULL,
    NATIONALITE varchar2(35) NULL,
    ADRESSE varchar2(150) NULL,
    VILLE varchar2(35) NULL,
    CP varchar2(10) NULL,
    FONCTION varchar2(35) NULL,
    SOCIETE varchar2(35) NULL,
    ENQUETE int DEFAULT 0,
    ETAT int DEFAULT 0,
    RETOUR int DEFAULT 0,
    DATECREATION DATE NULL,
    DATERETOUR DATE NULL,
 CONSTRAINT PK_ENQUETE PRIMARY KEY (EXTERNALID,EXTERN_TYPE,TYPEVISITE)
);
COMMIT;

CREATE TABLE ZCL15_CPPA(
    IDCPPA varchar2(14) NULL,
    REGLEID varchar2(14) NULL,
    SITEID varchar2(14) NULL,
    SITE varchar2(35) NULL,
    SOCIETEID varchar2(14) NULL,
    SOCIETE varchar2(35) NULL,
    PAYSID varchar2(14) NULL,
    PAYS varchar2(35) NULL,
    TYPEVISITEID int NULL,
    TYPEVISITE varchar2(70) NULL,
    ETAT varchar2(3) NULL,
    DATESYNCHRO DATE NULL
);
COMMIT;

CREATE TABLE TEMPO_IMPRESID (
RESIDANTID VARCHAR2(40),
SITEID VARCHAR2(40)
);
COMMIT;

CREATE TABLE ZRR(
ID_ZRR INTEGER PRIMARY KEY,
CODE varchar2(25) NULL,
LIBELLE varchar2(255) NULL,
DEB_VALITE date NULL,
FIN_VALIDITE date NULL,
ACTIVE varchar2(1) NULL,
ZONE_PARTENAIRE varchar2(1) NULL,
CENTRE varchar2(3) NULL,
SITEID varchar2(14) NULL,
LOCAUX_SENSIBLES varchar2(1) NULL,
UCREA varchar2(8) NULL,
DCREA date NULL,
UDERMAJ varchar2(8) NULL,
DDERMAJ date NULL);
COMMIT;

 CREATE TABLE ZCL15_DEMANDE_LPE(
    ZCL15_DEMANDE_LPEID varchar2(14) NOT NULL PRIMARY KEY,
    CONSIGNE1_ID varchar2(14) NULL,
    CONSIGNE2_ID varchar2(14) NULL,
    INTERLOCUTEURID varchar2(14) NULL,
    EME_SITEID varchar2(14) NULL,
    REM_SITEID varchar2(14) NULL,
    REC_SITEID varchar2(14) NULL,
    LPE_SAISIE_DCS DATE NULL,
    LPE_SAISIE_CACS DATE NULL,
    LPE_REMISE DATE NULL,
    LPE_ENVOI DATE NULL,
    LPE_INTERDICTION int NULL,
    DATECREATION DATE NULL,
    DATEMAJ DATE NULL
 );

CREATE TABLE MISSION_AGENT (
  MISSIONID INT,
  PERSONNELID INT
);
COMMIT;

CREATE TABLE APPEL (
	APPELID INT PRIMARY KEY,
	USERID VARCHAR2(14),
	QUAND DATE,
	SITEID VARCHAR2(14),
	NOM_POSTE VARCHAR2(50),
	RESIDANTID VARCHAR2(14),
	INTERLOCUTEURID VARCHAR2(14),
	SOCIETE VARCHAR2(35),
	OBJET VARCHAR2(4000),
	TELEPHONE VARCHAR2(30),
	DATECREATION DATE
);
COMMIT;

CREATE SEQUENCE SEQ_APPEL
	START WITH 1
	INCREMENT BY 1
	NOMAXVALUE;

COMMIT;

----------------------------------------------------------------------------------
----------------------------------------------------------------------------------
--       Index definitions for all user tables                                  --
----------------------------------------------------------------------------------
----------------------------------------------------------------------------------
--       Index definitions for all user tables                                  --
----------------------------------------------------------------------------------
CREATE UNIQUE INDEX SALLE0 ON SALLE(BATIMENTID, CODESALLE);
CREATE UNIQUE INDEX TYPETARIF0 ON TYPETARIF(CODETYPETARIF);
--
CREATE INDEX AMENAG_LIBELLE ON AMENAGEMENT(LIBELLE);
CREATE INDEX ART_FAMILLE ON ARTICLE(CODEFAMILLE);
CREATE INDEX ART_LIBELLE ON ARTICLE(LIBELLE);
CREATE INDEX ART_SFAMILLE ON ARTICLE(CODESOUSFAMILLE, LIBELLE);
CREATE INDEX ARTDEF_SORTORDER ON ARTICLEDEFAULT(SORTORDER);
CREATE INDEX BADGE_LIB ON BADGES(LIBELLE);
CREATE INDEX BAT_LIBELLE ON BATIMENT(LIBELLE);
CREATE INDEX BADGE_SITE ON VISITES(NUMEROBADGE, STATUTID, SITEID);
CREATE INDEX BATSOC ON SOCBAT(BATIMENTID);
CREATE INDEX COLIS_EMIS_RESID ON COLISEMIS(INTERLOCUTEURID, STATUTCOLIS);
CREATE INDEX COLIS_INTERLOC ON COLISRECU(INTERLOCUTEURID, STATUTCOLIS);
CREATE INDEX COLIS_VISIT ON COLISRECU(RESIDANTID, STATUTCOLIS);
CREATE INDEX COLIS_WAIT ON COLISRECU(STATUTCOLIS, ARRIVEE);
CREATE INDEX DEBUTPREVU ON VISITES(DEBUTPREVU);
CREATE INDEX EQUFIXE_LIBELLE ON EQUIPEMENTFIXE(LIBELLE);
CREATE INDEX FAMILLE_LIBELLE ON FAMILLE(LIBELLE);
CREATE INDEX FINPREVU ON VISITES(FINPREVU);
CREATE INDEX INTERLOCUTEUR_SOCINTERLOC ON INTERLOCUTEUR(SOCIETEID, INTERLOCUTEURID);
CREATE INDEX LGRESERVATION_CODE ON LGRESERVATION(CODELGRESERVATION);
CREATE INDEX LGRESERVATION_DATE ON LGRESERVATION(CODERESERVATION, CODESALLE, DATEDEBUT);
CREATE INDEX LIB ON PLANS(LIBELLE);
CREATE INDEX MARQUE_LIBELLE ON MARQUE(LIBELLE);
CREATE INDEX PARK_LIBRE ON PARKING(STATUTPARKING, PARKING);
CREATE INDEX PAYS_LIBELLE ON PAYS(LIBELLE);
CREATE INDEX PRODUIT_LIBELLE ON PRODUIT(LIBELLE);
CREATE INDEX PRODUIT_REFERENCE ON PRODUIT(REFERENCE);
CREATE INDEX RESIDANTS_MAT ON RESIDANTS(MATRICULE);
CREATE INDEX RESIDANTS_SOCINTERLOC ON RESIDANTS(SOCIETEID, RESIDANTID);
CREATE INDEX SALLE_LIBELLE ON SALLE(LIBELLE);
CREATE INDEX SERVICE_LIBELLE ON SERVICE(LIBELLE);
CREATE INDEX SFAMILLE_CODELIBELLE ON SOUSFAMILLE(CODEFAMILLE, SOUSFAMILLE);
CREATE INDEX SFAM_LIBELLE ON SOUSFAMILLE(SOUSFAMILLE);
CREATE INDEX SITE_PARK ON PARKING(SITEID, PARKING);
CREATE INDEX SITE_SOC ON SOCSITE(SITEID);
CREATE INDEX SITELIB ON SITE(LIBELLE);
CREATE INDEX SOC_SITE ON SOCSITE(SOCIETEID);
CREATE INDEX SOCBAT ON SOCBAT(SOCIETEID);
CREATE INDEX SOCIETE_ZONE ON SOCIETE(DEPARTEMENT);
CREATE INDEX STATUT_LIBELLE ON STATUTRESERVATION(LIBELLE);
CREATE INDEX TDEFAULT_LIBELLE ON TYPEDEFAULT(LIBELLE);
CREATE INDEX TRANCHES_LIBELLE ON TRANCHE(LIBELLE);
CREATE INDEX TRESERVATION_LIBELLECOURT ON TYPERESERVATION(LIBELLE);
CREATE INDEX TVA_LIBELLE ON TVA(LIBELLE);
CREATE INDEX USER_LOGIN ON USERS(THELOGIN);
CREATE INDEX VILLE_VILLE ON VILLE(VILLE);
CREATE INDEX VISITE_BADGE ON VISITES(NUMEROBADGE);
CREATE INDEX VISITE_DEBUT ON VISITES(DEBUTVISITE);
CREATE INDEX VISITE_FIN ON VISITES(FINVISITE);

CREATE INDEX VISIT_NOMPRENOM ON INTERLOCUTEUR(NOMPRENOM);
CREATE INDEX RESI_NOMPRENOM ON RESIDANTS(NOMPRENOM);

CREATE INDEX VISITEUR_SUR_SITE ON VISITES(SITEID,INTERLOCUTEURID,STATUTID);
CREATE INDEX SORTIE_VISITEUR ON VISITES(STATUTID, SITEID, NUMEROBADGE);
CREATE INDEX RESIDANT ON VISITES(SITEID, RESIDANTID, STATUTID);

CREATE INDEX VISIT_NOM ON INTERLOCUTEUR(NOM);
CREATE INDEX VISIT_INTER ON VISITES(SITEID,INTERLOCUTEURID,STATUTID,DEBUTPREVU,FINPREVU);

CREATE INDEX VISIT_RES ON RESIDANTS(ISACTIF,NOM);
CREATE INDEX VISIT_RES_SITE ON RESIDANTS(SITEID,ISACTIF,NOM);

CREATE INDEX INTER_NATURE ON INTERLOCUTEUR(INTERLOCUTEURID,NATUREID);
CREATE INDEX VISIT_INTERID ON VISITES(INTERLOCUTEURID);
CREATE INDEX NATURE_NATUREID ON NATURE(TVISITE,NATUREID);
CREATE INDEX VISIT_NUMEROVISITE ON VISITES(NUMEROVISITE);
CREATE INDEX VISIT_NUMEROVISITE1 ON VISITES(NUMEROVISITE,INTERLOCUTEURID);

CREATE INDEX INTERLOCUTEUR_DELEGUE ON INTERLOCUTEUR (NOMPRENOM, PHONKEY);

CREATE INDEX ETATVISITE ON VISITES_TEMP (ETATVISITE);

CREATE INDEX INDEX_ORIGINEVISITE ON VISITES (ORIGINEVISITE);
CREATE INDEX INDEX_BUREAUID ON VISITES (BUREAUID);
CREATE INDEX XANNEXE_ORIGINEID ON XANNEXE (XANNEXEID,ORIGINEID);
CREATE INDEX X_SITEID ON XANNEXE (SITEID);
CREATE INDEX X_ORIGINEID ON XANNEXE (ORIGINEID);
CREATE INDEX X_INFORMATION_TYPEID ON XANNEXE (INFORMATION_TYPEID);
CREATE INDEX X_ORIGINEID_ORIGINE ON XANNEXE (ORIGINEID,ORIGINE);



----------------------------------------------------------------------------------
--     Index definitions for all user tables                                    --
----------------------------------------------------------------------------------
ALTER TABLE DROITS ADD CONSTRAINT fk_Droit_resiid FOREIGN KEY (RESIDANTID) REFERENCES RESIDANTS(RESIDANTID);
ALTER TABLE DEPARTEMENT ADD CONSTRAINT fk_dep_socid FOREIGN KEY (SOCIETEID) REFERENCES SOCIETE(SOCIETEID);
ALTER TABLE SERVICE ADD CONSTRAINT fk_serv_deptid FOREIGN KEY (DEPTID) REFERENCES DEPARTEMENT(DEPTID);
ALTER TABLE BATIMENT ADD CONSTRAINT fk_bat_siteid FOREIGN KEY (SITEID) REFERENCES SITE(SITEID);
ALTER TABLE RESIDANTS ADD CONSTRAINT fk_resi_socid FOREIGN KEY (SOCIETEID) REFERENCES SOCIETE(SOCIETEID);
ALTER TABLE RESIDANTS ADD CONSTRAINT fk_resi_siteid FOREIGN KEY (SITEID) REFERENCES SITE(SITEID);
ALTER TABLE RESIDANTS ADD CONSTRAINT fk_resi_servid FOREIGN KEY (SERVICEID) REFERENCES SERVICE(SERVICEID);
ALTER TABLE SALLE ADD CONSTRAINT fk_salle_siteid FOREIGN KEY (SITEID) REFERENCES SITE(SITEID);
ALTER TABLE SALLE ADD CONSTRAINT fk_salle_batid FOREIGN KEY (BATIMENTID) REFERENCES BATIMENT(BATIMENTID);
ALTER TABLE ETAGES ADD CONSTRAINT fk_etages_batid FOREIGN KEY (BATIMENTID) REFERENCES BATIMENT(BATIMENTID);
ALTER TABLE VEHICULE ADD CONSTRAINT fk_vehi_resiid FOREIGN KEY (RESIDANTID) REFERENCES RESIDANTS(RESIDANTID);
ALTER TABLE VISITES ADD CONSTRAINT fk_visi_resiid FOREIGN KEY (residantid) REFERENCES residants(residantid);
ALTER TABLE VISITES ADD CONSTRAINT fk_visi_siteid FOREIGN KEY (SITEID) REFERENCES SITE(SITEID);
ALTER TABLE BUREAUX ADD CONSTRAINT fk_bur_etageid FOREIGN KEY (ETAGEID) REFERENCES ETAGES(ETAGEID);
ALTER TABLE PARKING ADD CONSTRAINT fk_park_siteid FOREIGN KEY (SITEID) REFERENCES SITE(SITEID);
ALTER TABLE GUICHET ADD CONSTRAINT fk_guic_siteid FOREIGN KEY (SITEID) REFERENCES SITE(SITEID);
ALTER TABLE COLISEMIS ADD CONSTRAINT fk_cole_resiid FOREIGN KEY (RESIDANTID) REFERENCES RESIDANTS(RESIDANTID);
ALTER TABLE SECRETARIAT ADD CONSTRAINT fk_sec_resiid FOREIGN KEY (RESIDANTID) REFERENCES RESIDANTS(RESIDANTID);
ALTER TABLE SECRETARIAT ADD CONSTRAINT fk_sec_resiid2 FOREIGN KEY (RESIDANTID2) REFERENCES RESIDANTS(RESIDANTID);
ALTER TABLE COLISRECU ADD CONSTRAINT fk_colr_resiid FOREIGN KEY (RESIDANTID) REFERENCES RESIDANTS(RESIDANTID);



----------------------------------------------------------------------------------
--     SEQUENCE                                                                 --
----------------------------------------------------------------------------------
CREATE SEQUENCE SEQ_AGENDA_JOUR;
CREATE SEQUENCE SEQ_AGENDA_JOUR2;
CREATE SEQUENCE SEQ_AGENTPRESENTLOG;
CREATE SEQUENCE SEQ_ALARME;
CREATE SEQUENCE SEQ_CFG_FICHIER;
CREATE SEQUENCE SEQ_CONSIGNE;
CREATE SEQUENCE SEQ_CONS_ETAT;
CREATE SEQUENCE SEQ_CONSIGNETEMP;
CREATE SEQUENCE SEQ_CONSIGNETEMP2;
CREATE SEQUENCE SEQ_DIPLOME;
CREATE SEQUENCE SEQ_DROIT;
CREATE SEQUENCE SEQ_EVENEMENT START WITH 10;
CREATE SEQUENCE SEQ_EVENEMENT_TYPE;
CREATE SEQUENCE SEQ_EVTPERSONNEL;
CREATE SEQUENCE SEQ_FORMATION;
CREATE SEQUENCE SEQ_FONCTION;
CREATE SEQUENCE SEQ_GROUPEDEST;
CREATE SEQUENCE SEQ_GRPEVENEMENT;
CREATE SEQUENCE SEQ_IDENTITY;
CREATE SEQUENCE SEQ_JAGENT;
CREATE SEQUENCE SEQ_JMATERIEL;
CREATE SEQUENCE SEQ_JOUR START WITH 100 ;
CREATE SEQUENCE SEQ_JOURNAL;
CREATE SEQUENCE SEQ_JPERSONNE;
CREATE SEQUENCE SEQ_JRAPPORT;
CREATE SEQUENCE SEQ_JSECOURS;
CREATE SEQUENCE SEQ_JVACATION START WITH 1000000000;
CREATE SEQUENCE SEQ_LIEU;
CREATE SEQUENCE SEQ_LU_CSG;
CREATE SEQUENCE SEQ_LU_CSGT;
CREATE SEQUENCE SEQ_MAIL START WITH 10000000 ;
CREATE SEQUENCE SEQ_MATERIEL;
CREATE SEQUENCE SEQ_MISSION;
CREATE SEQUENCE SEQ_MISSIONTEMP START WITH 10000;
CREATE SEQUENCE SEQ_NUM_BDG;
CREATE SEQUENCE SEQ_NUM_BDG_RES;
CREATE SEQUENCE SEQ_NUM_BDG_VEH;
CREATE SEQUENCE SEQ_NUM_BDG_EXT;
CREATE SEQUENCE SEQ_OCONSIGNE;
CREATE SEQUENCE SEQ_ODROIT START WITH 10;
CREATE SEQUENCE SEQ_OJOURNAL;
CREATE SEQUENCE SEQ_OMESSAGE START WITH 1000000000;
CREATE SEQUENCE SEQ_OFICHIER;
CREATE SEQUENCE SEQ_ONOTE;
CREATE SEQUENCE SEQ_ORONDE;
CREATE SEQUENCE SEQ_PAGENT;
CREATE SEQUENCE SEQ_PERSONNE;
CREATE SEQUENCE SEQ_PERSONNEL START WITH 10;
CREATE SEQUENCE SEQ_POSTE;
CREATE SEQUENCE SEQ_QUALIF;
CREATE SEQUENCE SEQ_RAISON;
CREATE SEQUENCE SEQ_RAPPORT;
CREATE SEQUENCE SEQ_REFERENCE START WITH 10000000 ;
CREATE SEQUENCE SEQ_RENSEIGNEMENT;
CREATE SEQUENCE SEQ_RONDIER;
CREATE SEQUENCE SEQ_RONDE;
CREATE SEQUENCE SEQ_RONDEMOTCLE START WITH 10;
CREATE SEQUENCE SEQ_RPT_0002;
CREATE SEQUENCE SEQ_RPT_SEM5;
CREATE SEQUENCE SEQ_RUE;
CREATE SEQUENCE SEQ_SECOURS;
CREATE SEQUENCE SEQ_SECTEUR;
CREATE SEQUENCE SEQ_SERVICE;
CREATE SEQUENCE SEQ_SITE;
CREATE SEQUENCE SEQ_SOCIETE;
CREATE SEQUENCE SEQ_SUIVI;
CREATE SEQUENCE SEQ_TACHE;
CREATE SEQUENCE SEQ_TACHE_LOG;
CREATE SEQUENCE SEQ_TMPI;
CREATE SEQUENCE SEQ_TYPE_EVENT;
CREATE SEQUENCE SEQ_TYPE_MISSION;
CREATE SEQUENCE SEQ_TYPERAPPORT;
CREATE SEQUENCE SEQ_VACATION;
CREATE SEQUENCE SEQ_VSERVICE;
CREATE SEQUENCE SEQ_ZCL37_CTPUSER;
CREATE SEQUENCE SEQ_ZCL37_CPTPWD;
CREATE SEQUENCE SEQ_LOGWIFI;
CREATE SEQUENCE SEQ_PROFIL_CTRL_LECTEUR;
CREATE SEQUENCE SEQ_ZCTRL_FIL_EAU ;
CREATE SEQUENCE SEQ_LOGDB
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE;
CREATE SEQUENCE SEQ_CHECKLIST;
CREATE SEQUENCE SEQ_OCHECKLIST;
----------------------------------------------------------------------------------
--                                                                              --
----------------------------------------------------------------------------------

COMMIT;
EXIT;